{
  "spec": {
    "title": "Media Capabilities",
    "url": "https://w3c.github.io/media-capabilities/"
  },
  "algorithms": [
    {
      "name": "valid MediaDecodingConfiguration",
      "href": "https://w3c.github.io/media-capabilities/#valid-mediadecodingconfiguration",
      "html": "For a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediadecodingconfiguration\" id=\"ref-for-dictdef-mediadecodingconfiguration①\">MediaDecodingConfiguration</a></code> to be a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"valid MediaDecodingConfiguration\" data-noexport=\"\" id=\"valid-mediadecodingconfiguration\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid\n        MediaDecodingConfiguration</dfn>, all of the following conditions MUST\n        be true:",
      "rationale": "if",
      "steps": [
        {
          "html": "It MUST be a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#valid-mediaconfiguration\" id=\"ref-for-valid-mediaconfiguration\">valid MediaConfiguration</a>."
        },
        {
          "html": "If <code>keySystemConfiguration</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "The <code>type</code> MUST be <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingtype-media-source\" id=\"ref-for-dom-mediadecodingtype-media-source\">media-source</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingtype-file\" id=\"ref-for-dom-mediadecodingtype-file\">file</a></code>."
            },
            {
              "html": "If <code>keySystemConfiguration.audio</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exists</a>,\n              <code>audio</code> MUST also <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤\">exist</a>."
            },
            {
              "html": "If <code>keySystemConfiguration.video</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥\">exists</a>,\n              <code>video</code> MUST also <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦\">exist</a>."
            }
          ]
        }
      ]
    },
    {
      "name": "valid video configuration",
      "href": "https://w3c.github.io/media-capabilities/#valid-video-configuration",
      "html": "To check if a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-videoconfiguration\" id=\"ref-for-dictdef-videoconfiguration①\">VideoConfiguration</a></code> <var>configuration</var> is a\n        <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-video-configuration\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid video configuration</dfn>, the following steps MUST be run:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-framerate\" id=\"ref-for-dom-videoconfiguration-framerate①\">framerate</a></code> is not finite or is not greater\n          than 0, return <code>false</code> and abort these steps."
        },
        {
          "html": "If an optional member is specified for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediadecodingtype\" id=\"ref-for-enumdef-mediadecodingtype①\">MediaDecodingType</a></code> or\n          <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediaencodingtype\" id=\"ref-for-enumdef-mediaencodingtype①\">MediaEncodingType</a></code> to which it’s not applicable, return\n          <code>false</code> and abort these steps. See applicability rules\n          in the member definitions below."
        },
        {
          "html": "Let <var>mimeType</var> be the result of running <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type\">parse a MIME type</a>\n          with <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-contenttype\" id=\"ref-for-dom-videoconfiguration-contenttype①\">contentType</a></code>."
        },
        {
          "html": "If <var>mimeType</var> is <code>failure</code>, return <code>false</code>."
        },
        {
          "html": "Return the result of running <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-validity\" id=\"ref-for-abstract-opdef-check-mime-type-validity\">check MIME type validity</a> with\n          <var>mimeType</var> and <code>video</code>."
        }
      ]
    },
    {
      "name": "valid audio configuration",
      "href": "https://w3c.github.io/media-capabilities/#valid-audio-configuration",
      "html": "To check if a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-audioconfiguration\" id=\"ref-for-dictdef-audioconfiguration①\">AudioConfiguration</a></code> <var>configuration</var> is a\n        <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-audio-configuration\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid audio configuration</dfn>, the following steps MUST be run:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>mimeType</var> be the result of running <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type①\">parse a MIME type</a>\n          with <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-audioconfiguration-contenttype\" id=\"ref-for-dom-audioconfiguration-contenttype①\">contentType</a></code>."
        },
        {
          "html": "If <var>mimeType</var> is <code>failure</code>, return <code>false</code>."
        },
        {
          "html": "Return the result of running <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-validity\" id=\"ref-for-abstract-opdef-check-mime-type-validity①\">check MIME type validity</a> with\n          <var>mimeType</var> and <code>audio</code>."
        }
      ]
    },
    {
      "name": "Create a MediaCapabilitiesEncodingInfo",
      "href": "https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesencodinginfo",
      "html": "To <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesencodinginfo\" id=\"ref-for-abstract-opdef-create-a-mediacapabilitiesencodinginfo\">create a MediaCapabilitiesEncodingInfo</a>, given a\n          <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediaencodingconfiguration\" id=\"ref-for-dictdef-mediaencodingconfiguration④\">MediaEncodingConfiguration</a></code> <var>configuration</var>, run the\n          following steps. They return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesencodinginfo\" id=\"ref-for-dictdef-mediacapabilitiesencodinginfo②\">MediaCapabilitiesEncodingInfo</a></code>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>info</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesencodinginfo\" id=\"ref-for-dictdef-mediacapabilitiesencodinginfo③\">MediaCapabilitiesEncodingInfo</a></code>\n            instance. Unless stated otherwise, reading and writing apply to\n            <var>info</var> for the next steps."
        },
        {
          "html": "Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesencodinginfo-configuration\" id=\"ref-for-dom-mediacapabilitiesencodinginfo-configuration①\">configuration</a></code> to be a\n            new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediaencodingconfiguration\" id=\"ref-for-dictdef-mediaencodingconfiguration⑤\">MediaEncodingConfiguration</a></code>. For every property in <var>\n            configuration</var> create a new property with the same name and\n            value in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesencodinginfo-configuration\" id=\"ref-for-dom-mediacapabilitiesencodinginfo-configuration②\">configuration</a></code>."
        },
        {
          "html": "Let <var>videoSupported</var> be <code>unknown</code>."
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-video\" id=\"ref-for-dom-mediaconfiguration-video\">video</a></code> is present in\n            <var>configuration</var>, run the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>videoMimeType</var> be the result of running\n                <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type②\">parse a MIME type</a> with <var>configuration</var>’s\n                <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-contenttype\" id=\"ref-for-dom-videoconfiguration-contenttype⑤\">contentType</a></code>."
            },
            {
              "html": "Set <var>videoSupported</var> to the result of running\n                <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support\" id=\"ref-for-abstract-opdef-check-mime-type-support\">check MIME type support</a> with\n                <var>videoMimeType</var> <var>configuration</var>’s\n                <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaencodingconfiguration-type\" id=\"ref-for-dom-mediaencodingconfiguration-type\">type</a></code>."
            }
          ]
        },
        {
          "html": "Let <var>audioSupported</var> be <code>unknown</code>."
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-audio\" id=\"ref-for-dom-mediaconfiguration-audio\">audio</a></code> is present in <var>configuration</var>,\n            run the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>audioMimeType</var> be the result of running\n                <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type③\">parse a MIME type</a> with <var>configuration</var>’s\n                <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-audioconfiguration-contenttype\" id=\"ref-for-dom-audioconfiguration-contenttype③\">contentType</a></code>."
            },
            {
              "html": "Set <var>audioSupported</var> to the result of running\n                <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support\" id=\"ref-for-abstract-opdef-check-mime-type-support①\">check MIME type support</a> with <var>audioMimeType</var>\n                <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaencodingconfiguration-type\" id=\"ref-for-dom-mediaencodingconfiguration-type①\">type</a></code>."
            }
          ]
        },
        {
          "html": "If either <var>videoSupported</var> or <var>audioSupported</var> is\n            <code>unsupported</code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported②\">supported</a></code>\n            to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-smooth\" id=\"ref-for-dom-mediacapabilitiesinfo-smooth①\">smooth</a></code>\n            to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-powerefficient\" id=\"ref-for-dom-mediacapabilitiesinfo-powerefficient①\">powerEfficient</a></code>\n            to <code>false</code>, and return <var>info</var>."
        },
        {
          "html": "Otherwise, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported③\">supported</a></code> to\n            <code>true</code>."
        },
        {
          "html": "If the user agent is able to encode the media represented by\n            <var>configuration</var> at the indicated framerate, set\n            <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-smooth\" id=\"ref-for-dom-mediacapabilitiesinfo-smooth②\">smooth</a></code> to <code>true</code>. Otherwise\n            set it to <code>false</code>."
        },
        {
          "html": "If the user agent is able to encode the media represented by\n            <var>configuration</var> in a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#power-efficient\" id=\"ref-for-power-efficient\">power efficient</a> manner, set\n            <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-powerefficient\" id=\"ref-for-dom-mediacapabilitiesinfo-powerefficient②\">powerEfficient</a></code> to <code>true</code>.\n            Otherwise set it to <code>false</code>."
        },
        {
          "html": "Return <var>info</var>."
        }
      ]
    },
    {
      "name": "Create a MediaCapabilitiesDecodingInfo",
      "href": "https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesdecodinginfo",
      "html": "To <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesdecodinginfo\" id=\"ref-for-abstract-opdef-create-a-mediacapabilitiesdecodinginfo\">create a MediaCapabilitiesDecodingInfo</a>, given a\n          <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediadecodingconfiguration\" id=\"ref-for-dictdef-mediadecodingconfiguration①⓪\">MediaDecodingConfiguration</a></code> <var>configuration</var>, perform the\n          following steps. They return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesdecodinginfo\" id=\"ref-for-dictdef-mediacapabilitiesdecodinginfo③\">MediaCapabilitiesDecodingInfo</a></code>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>info</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesdecodinginfo\" id=\"ref-for-dictdef-mediacapabilitiesdecodinginfo④\">MediaCapabilitiesDecodingInfo</a></code>\n            instance. Unless stated otherwise, reading and writing apply to\n            <var>info</var> for the next steps."
        },
        {
          "html": "Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesdecodinginfo-configuration\" id=\"ref-for-dom-mediacapabilitiesdecodinginfo-configuration①\">configuration</a></code> to be a new\n            <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediadecodingconfiguration\" id=\"ref-for-dictdef-mediadecodingconfiguration①①\">MediaDecodingConfiguration</a></code>. For every property in\n            <var>configuration</var> create a new property with the same name and\n            value in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesdecodinginfo-configuration\" id=\"ref-for-dom-mediacapabilitiesdecodinginfo-configuration②\">configuration</a></code>."
        },
        {
          "html": "If <code>configuration.keySystemConfiguration</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⓪\">exists</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesdecodinginfo-keysystemaccess\" id=\"ref-for-dom-mediacapabilitiesdecodinginfo-keysystemaccess①\">keySystemAccess</a></code>\n                to the result of running the <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-encrypted-decoding-support\" id=\"ref-for-abstract-opdef-check-encrypted-decoding-support\">Check Encrypted Decoding Support</a> algorithm with <var>configuration</var>."
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesdecodinginfo-keysystemaccess\" id=\"ref-for-dom-mediacapabilitiesdecodinginfo-keysystemaccess②\">keySystemAccess</a></code>\n                is <code>null</code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported④\">supported</a></code>\n                to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-smooth\" id=\"ref-for-dom-mediacapabilitiesinfo-smooth③\">smooth</a></code>\n                to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-powerefficient\" id=\"ref-for-dom-mediacapabilitiesinfo-powerefficient③\">powerEfficient</a></code>\n                to <code>false</code>, and return <var>info</var>."
            },
            {
              "html": "Otherwise, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported⑤\">supported</a></code> to\n                <code>true</code> and continue with step 6."
            }
          ]
        },
        {
          "html": "Otherwise, run the following steps:",
          "rationale": "set",
          "steps": [
            {
              "html": "Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesdecodinginfo-keysystemaccess\" id=\"ref-for-dom-mediacapabilitiesdecodinginfo-keysystemaccess③\">keySystemAccess</a></code>\n                to <code>null</code>."
            },
            {
              "html": "Let <var>videoSupported</var> be <code>unknown</code>."
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-video\" id=\"ref-for-dom-mediaconfiguration-video①\">video</a></code> is present in <var>configuration</var>,\n                run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>videoMimeType</var> be the result of running\n                    <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type④\">parse a MIME type</a> with <var>configuration</var>’s\n                    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-contenttype\" id=\"ref-for-dom-videoconfiguration-contenttype⑥\">contentType</a></code>."
                },
                {
                  "html": "Set <var>videoSupported</var> be the result of running\n                    <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support\" id=\"ref-for-abstract-opdef-check-mime-type-support②\">check MIME type support</a> with <var>videoMimeType</var>,\n                    <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingconfiguration-type\" id=\"ref-for-dom-mediadecodingconfiguration-type\">type</a></code>,\n                    <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-colorgamut\" id=\"ref-for-dom-videoconfiguration-colorgamut①\">colorGamut</a></code>,\n                    and <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-transferfunction\" id=\"ref-for-dom-videoconfiguration-transferfunction①\">transferFunction</a></code>."
                }
              ]
            },
            {
              "html": "Let <var>audioSupported</var> be <code>unknown</code>."
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-audio\" id=\"ref-for-dom-mediaconfiguration-audio①\">audio</a></code> is present in <var>configuration</var>,\n                run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>audioMimeType</var> be the result of running\n                    <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#parse-a-mime-type\" id=\"ref-for-parse-a-mime-type⑤\">parse a MIME type</a> with <var>configuration</var>’s\n                    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-audioconfiguration-contenttype\" id=\"ref-for-dom-audioconfiguration-contenttype④\">contentType</a></code>."
                },
                {
                  "html": "Set <var>audioSupported</var> to the result of running\n                    <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support\" id=\"ref-for-abstract-opdef-check-mime-type-support③\">check MIME type support</a> with <var>audioMimeType</var>\n                    <var>configuration</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingconfiguration-type\" id=\"ref-for-dom-mediadecodingconfiguration-type①\">type</a></code>."
                }
              ]
            },
            {
              "html": "If either <var>videoSupported</var> or <var>audioSupported</var> is\n                <code>unsupported</code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported⑥\">supported</a></code>\n                to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-smooth\" id=\"ref-for-dom-mediacapabilitiesinfo-smooth④\">smooth</a></code>\n                to <code>false</code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-powerefficient\" id=\"ref-for-dom-mediacapabilitiesinfo-powerefficient④\">powerEfficient</a></code>\n                to <code>false</code>, and return <var>info</var>."
            }
          ]
        },
        {
          "html": "Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-supported\" id=\"ref-for-dom-mediacapabilitiesinfo-supported⑦\">supported</a></code> to <code>true</code>."
        },
        {
          "html": "If the user agent is able to decode the media represented by\n            <var>configuration</var> at the indicated framerate\n            without dropping frames, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-smooth\" id=\"ref-for-dom-mediacapabilitiesinfo-smooth⑤\">smooth</a></code>\n            to <code>true</code>. Otherwise set it to <code>false</code>."
        },
        {
          "html": "If the user agent is able to decode the media represented by\n            <var>configuration</var> in a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#power-efficient\" id=\"ref-for-power-efficient①\">power efficient</a>\n            manner, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitiesinfo-powerefficient\" id=\"ref-for-dom-mediacapabilitiesinfo-powerefficient⑤\">powerEfficient</a></code> to\n            <code>true</code>. Otherwise set it to <code>false</code>."
        },
        {
          "html": "Return <var>info</var>."
        }
      ]
    },
    {
      "name": "Check MIME Type Validity",
      "href": "https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-validity",
      "html": "To <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-validity\" id=\"ref-for-abstract-opdef-check-mime-type-validity②\">check MIME type validity</a> given a <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#mime-type\" id=\"ref-for-mime-type②\">MIME type record</a> <var>mimeType</var> and\n          a string <var>media</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If the type of <var>mimeType</var> per <a data-link-type=\"biblio\" href=\"https://w3c.github.io/media-capabilities/#biblio-rfc9110\" title=\"HTTP Semantics\">[RFC9110]</a> is neither <var>media</var> nor\n             <code>application</code>, return <code>false</code>."
        },
        {
          "html": "If the combined <code>type</code> and <code>subtype</code> members\n            of <var>mimeType</var> allow a single media codec and the\n            <code>parameters</code> member of <var>mimeType</var> is not empty,\n            return <code>false</code>."
        },
        {
          "html": "If the combined <code>type</code> and <code>subtype</code> members\n            of <var>mimeType</var> allow multiple media codecs, run the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "If the <code>parameters</code> member of <var>mimeType</var>\n                does not contain a single key named \"codecs\", return\n                <code>false</code>."
            },
            {
              "html": "If the value of <code>mimeType.parameters[\"codecs\"]</code>\n                does not describe a single media codec, return\n                <code>false</code>."
            }
          ]
        },
        {
          "html": "Return <code>true</code>."
        }
      ]
    },
    {
      "name": "Check MIME Type Support",
      "href": "https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support",
      "html": "To <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-mime-type-support\" id=\"ref-for-abstract-opdef-check-mime-type-support④\">check MIME type support</a>, given a <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#mime-type\" id=\"ref-for-mime-type③\">MIME type record</a> <var>mimeType</var>,\n          a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediaencodingtype\" id=\"ref-for-enumdef-mediaencodingtype②\">MediaEncodingType</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediadecodingtype\" id=\"ref-for-enumdef-mediadecodingtype②\">MediaDecodingType</a></code>\n          <var>encodingOrDecodingType</var>, an optional <var>colorGamut</var> from\n          <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-colorgamut\" id=\"ref-for-dom-videoconfiguration-colorgamut②\">colorGamut</a></code>, and an optional <var>transferFunction</var>\n          from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-videoconfiguration-transferfunction\" id=\"ref-for-dom-videoconfiguration-transferfunction②\">transferFunction</a></code>, perform the following\n          steps. They return <code>supported</code> if the MIME type is\n          <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#supported-by-the-user-agent\" id=\"ref-for-supported-by-the-user-agent\">supported by the user agent</a>, <code>unsupported</code> if the MIME type\n          is not supported:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>encodingOrDecodingType</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaencodingtype-webrtc\" id=\"ref-for-dom-mediaencodingtype-webrtc④\">webrtc</a></code> (<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediaencodingtype\" id=\"ref-for-enumdef-mediaencodingtype③\">MediaEncodingType</a></code>)\n            or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingtype-webrtc\" id=\"ref-for-dom-mediadecodingtype-webrtc④\">webrtc</a></code> (<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#enumdef-mediadecodingtype\" id=\"ref-for-enumdef-mediadecodingtype③\">MediaDecodingType</a></code>) and <var>mimeType</var> is not one\n            that is used with RTP (as defined in the specifications of the corresponding RTP\n            payload formats <a data-link-type=\"biblio\" href=\"https://w3c.github.io/media-capabilities/#biblio-iana-media-types\" title=\"Media Types\">[IANA-MEDIA-TYPES]</a> <a data-link-type=\"biblio\" href=\"https://w3c.github.io/media-capabilities/#biblio-rfc6838\" title=\"Media Type Specifications and Registration Procedures\">[RFC6838]</a>), return <code>unsupported</code>."
        },
        {
          "html": "If <var>colorGamut</var> is present and is not valid for <var>mimeType</var>, return\n            <code>unsupported</code>."
        },
        {
          "html": "If <var>transferFunction</var> is present and is not valid for <var>mimeType</var>, return\n            <code>unsupported</code>.\n          \n        \n        \n        <p></p>"
        },
        {
          "html": "If <var>mimeType</var> is not <a data-link-type=\"dfn\" href=\"https://mimesniff.spec.whatwg.org/#supported-by-the-user-agent\" id=\"ref-for-supported-by-the-user-agent①\">supported by the user agent</a>, return\n            <code>unsupported</code>."
        },
        {
          "html": "Return <code>supported</code>."
        }
      ]
    },
    {
      "name": "Check Encrypted Decoding Support",
      "href": "https://w3c.github.io/media-capabilities/#abstract-opdef-check-encrypted-decoding-support",
      "html": "To <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-check-encrypted-decoding-support\" id=\"ref-for-abstract-opdef-check-encrypted-decoding-support①\">check encrypted decoding support</a>, given a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dictdef-mediadecodingconfiguration\" id=\"ref-for-dictdef-mediadecodingconfiguration①②\">MediaDecodingConfiguration</a></code>\n          <var>config</var> where <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediadecodingconfiguration-keysystemconfiguration\" id=\"ref-for-dom-mediadecodingconfiguration-keysystemconfiguration①\">keySystemConfiguration</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①①\">exists</a>, perform the\n          following steps. They return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemaccess\" id=\"ref-for-dom-mediakeysystemaccess③\">MediaKeySystemAccess</a></code> or <code>null</code>\n          as appropriate:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilitieskeysystemconfiguration-keysystem\" id=\"ref-for-dom-mediacapabilitieskeysystemconfiguration-keysystem①\">keySystem</a></code> member of\n            <code>config.keySystemConfiguration</code> is not one of the\n            <a data-link-type=\"dfn\" href=\"https://w3c.github.io/encrypted-media/#dfn-key-system\" id=\"ref-for-dfn-key-system\">Key Systems</a> supported by the user agent, return\n            <code>null</code>. String comparison is case-sensitive."
        },
        {
          "html": "Let <var>origin</var> be the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/browsers.html#concept-origin\" id=\"ref-for-concept-origin\">origin</a> of the calling context’s\n            <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document\">Document</a></code>."
        },
        {
          "html": "Let <var>implementation</var> be the implementation of\n            <code>config.keySystemConfiguration.keySystem</code>."
        },
        {
          "html": "Let <var>emeConfiguration</var> be a new\n            <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration\" id=\"ref-for-dom-mediakeysystemconfiguration\">MediaKeySystemConfiguration</a></code>, and initialize it as follows:",
          "rationale": "set",
          "steps": [
            {
              "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration-initdatatypes\" id=\"ref-for-dom-mediakeysystemconfiguration-initdatatypes①\">initDataTypes</a></code> attribute to a sequence containing\n              <code>config.keySystemConfiguration.initDataType</code>."
            },
            {
              "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration-distinctiveidentifier\" id=\"ref-for-dom-mediakeysystemconfiguration-distinctiveidentifier①\">distinctiveIdentifier</a></code> attribute to\n              <code>config.keySystemConfiguration.distinctiveIdentifier</code>."
            },
            {
              "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration-persistentstate\" id=\"ref-for-dom-mediakeysystemconfiguration-persistentstate①\">persistentState</a></code> attribute to\n              <code>config.keySystemConfiguration.peristentState</code>."
            },
            {
              "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration-sessiontypes\" id=\"ref-for-dom-mediakeysystemconfiguration-sessiontypes①\">sessionTypes</a></code> attribute to\n              <code>config.keySystemConfiguration.sessionTypes</code>."
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-audio\" id=\"ref-for-dom-mediaconfiguration-audio②\">audio</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①②\">exists</a> in <var>config</var>, set the\n              <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemconfiguration-audiocapabilities\" id=\"ref-for-dom-mediakeysystemconfiguration-audiocapabilities\">audioCapabilities</a></code> attribute to a sequence containing a\n              single <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability\" id=\"ref-for-dom-mediakeysystemmediacapability\">MediaKeySystemMediaCapability</a></code>, initialized as\n              follows:",
              "rationale": "set",
              "steps": [
                {
                  "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-contenttype\" id=\"ref-for-dom-mediakeysystemmediacapability-contenttype\">contentType</a></code> attribute to\n                  <code>config.audio.contentType</code>."
                },
                {
                  "html": "If <code>config.keySystemConfiguration.audio</code>\n                  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①③\">exists</a>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <code>config.keySystemConfiguration.audio.robustness</code>\n                      <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①④\">exists</a> and is not <code>null</code>, set the\n                      <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-robustness\" id=\"ref-for-dom-mediakeysystemmediacapability-robustness①\">robustness</a></code> attribute to\n                      <code>config.keySystemConfiguration.audio.robustness</code>."
                    },
                    {
                      "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-encryptionscheme\" id=\"ref-for-dom-mediakeysystemmediacapability-encryptionscheme①\">encryptionScheme</a></code> attribute to <code>\n                      config.keySystemConfiguration.audio.encryptionScheme</code>."
                    }
                  ]
                }
              ]
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediaconfiguration-video\" id=\"ref-for-dom-mediaconfiguration-video②\">video</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑤\">exists</a> in <var>config</var>, set the\n              videoCapabilities attribute to a sequence containing a single\n              <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability\" id=\"ref-for-dom-mediakeysystemmediacapability①\">MediaKeySystemMediaCapability</a></code>, initialized as follows:",
              "rationale": "set",
              "steps": [
                {
                  "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-contenttype\" id=\"ref-for-dom-mediakeysystemmediacapability-contenttype①\">contentType</a></code> attribute to\n                  <code>config.video.contentType</code>."
                },
                {
                  "html": "If <code>config.keySystemConfiguration.video</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑥\">exists</a>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <code>config.keySystemConfiguration.video.robustness</code>\n                      <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑦\">exists</a> and is not <code>null</code>, set the\n                      <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-robustness\" id=\"ref-for-dom-mediakeysystemmediacapability-robustness②\">robustness</a></code> attribute to\n                      <code>config.keySystemConfiguration.video.robustness</code>."
                    },
                    {
                      "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemmediacapability-encryptionscheme\" id=\"ref-for-dom-mediakeysystemmediacapability-encryptionscheme②\">encryptionScheme</a></code> attribute to <code>\n                      config.keySystemConfiguration.video.encryptionScheme</code>."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "Let <var>supported configuration</var> be the result of\n            executing the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/encrypted-media/#dfn-get-supported-configuration\" id=\"ref-for-dfn-get-supported-configuration\">Get Supported Configuration</a>\n            algorithm <a data-link-type=\"biblio\" href=\"https://w3c.github.io/media-capabilities/#biblio-encrypted-media\" title=\"Encrypted Media Extensions\">[ENCRYPTED-MEDIA]</a> on <var>implementation</var>,\n            <var>emeConfiguration</var>, and <var>origin</var>."
        },
        {
          "html": "If <var>supported configuration</var> is\n            <code>NotSupported</code>, return <code>null</code>."
        },
        {
          "html": "Let <var>access</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemaccess\" id=\"ref-for-dom-mediakeysystemaccess④\">MediaKeySystemAccess</a></code>\n            object, and initialize it as follows:",
          "rationale": "set",
          "steps": [
            {
              "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/encrypted-media/#dom-mediakeysystemaccess-keysystem\" id=\"ref-for-dom-mediakeysystemaccess-keysystem①\">keySystem</a></code> attribute to\n                <code>emeConfiguration.keySystem</code>."
            },
            {
              "html": "Let the <var>configuration</var> value be\n                <var>supported configuration</var>."
            },
            {
              "html": "Let the <var>cdm implementation</var> value be\n                <var>implementation</var>."
            }
          ]
        },
        {
          "html": "Return <var>access</var>."
        }
      ]
    },
    {
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilities-decodinginfo\" id=\"ref-for-dom-mediacapabilities-decodinginfo\">decodingInfo()</a></code> method MUST run the following steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>configuration</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#valid-mediadecodingconfiguration\" id=\"ref-for-valid-mediadecodingconfiguration\">valid\n        MediaDecodingConfiguration</a>, return a Promise rejected with a\n        newly created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror\">TypeError</a></code>."
        },
        {
          "html": "If <code>configuration.keySystemConfiguration</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑧\">exists</a>,\n        run the following substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "If the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#global-object\" id=\"ref-for-global-object\">global object</a> is of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/workers.html#workerglobalscope\" id=\"ref-for-workerglobalscope\">WorkerGlobalScope</a></code>,\n            return a Promise rejected with a newly created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>\n            whose name is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code>."
            },
            {
              "html": "If the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#global-object\" id=\"ref-for-global-object①\">global object’s</a> <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#relevant-settings-object\" id=\"ref-for-relevant-settings-object\">relevant settings object</a> is a\n            <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#non-secure-context\" id=\"ref-for-non-secure-context\">non-secure context</a>, return a Promise rejected with a newly\n            created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code> whose name is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code>."
            }
          ]
        },
        {
          "html": "Let <var>p</var> be a new Promise."
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel\">in parallel</a>:",
          "rationale": "run",
          "steps": [
            {
              "html": "Run the <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesdecodinginfo\" id=\"ref-for-abstract-opdef-create-a-mediacapabilitiesdecodinginfo①\">Create a MediaCapabilitiesDecodingInfo</a> algorithm\n            with <var>configuration</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#queue-a-media-capabilities-task\" id=\"ref-for-queue-a-media-capabilities-task\">Queue a Media Capabilities task</a> to resolve <var>p</var>\n            with its result."
            }
          ]
        },
        {
          "html": "Return <var>p</var>."
        }
      ]
    },
    {
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/media-capabilities/#dom-mediacapabilities-encodinginfo\" id=\"ref-for-dom-mediacapabilities-encodinginfo\">encodingInfo()</a></code> method MUST run the following steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>configuration</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#valid-mediaconfiguration\" id=\"ref-for-valid-mediaconfiguration①\">valid MediaConfiguration</a>,\n        return a Promise rejected with a newly created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①\">TypeError</a></code>."
        },
        {
          "html": "Let <var>p</var> be a new Promise."
        },
        {
          "html": "Run the following steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel①\">in parallel</a>:",
          "rationale": "run",
          "steps": [
            {
              "html": "Run the <a data-link-type=\"abstract-op\" href=\"https://w3c.github.io/media-capabilities/#abstract-opdef-create-a-mediacapabilitiesencodinginfo\" id=\"ref-for-abstract-opdef-create-a-mediacapabilitiesencodinginfo①\">Create a MediaCapabilitiesEncodingInfo</a>\n              algorithm with <var>configuration</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/media-capabilities/#queue-a-media-capabilities-task\" id=\"ref-for-queue-a-media-capabilities-task①\">Queue a Media Capabilities task</a> to resolve <var>p</var> with\n             its result."
            }
          ]
        },
        {
          "html": "Return <var>p</var>."
        }
      ]
    }
  ]
}