{
  "spec": {
    "title": "Geolocation Sensor",
    "url": "https://w3c.github.io/geolocation-sensor/"
  },
  "algorithms": [
    {
      "name": "read",
      "html": "<dl>\n     <dt data-md=\"\">input\n     </dt><dd data-md=\"\">\n      <p><var>options</var>, a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#dictdef-readoptions\" id=\"ref-for-dictdef-readoptions①\">ReadOptions</a></code> object.</p>\n     </dd><dt data-md=\"\">output\n     </dt><dd data-md=\"\">\n      <p><var>p</var>, a promise.</p>\n    </dd></dl>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p</var> be a new promise.</p>"
        },
        {
          "html": "<p>Let <var>options</var> be the first argument.</p>"
        },
        {
          "html": "<p>Let <var>signal</var> be the <var>options</var>’ dictionary member of the same name if present, or null otherwise.</p>"
        },
        {
          "html": "<p>If <var>signal</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted\">aborted</a>, then reject <var>p</var> with <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason\">abort reason</a> and return <var>p</var>.</p>"
        },
        {
          "html": "<p>Let <var>geo</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://w3c.github.io/geolocation-sensor/#construct-a-geolocation-sensor-object\" id=\"ref-for-construct-a-geolocation-sensor-object①\">construct a Geolocation Sensor object</a> with <var>options</var>. If this throws a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>, catch it, reject <var>p</var> with that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>, and return <var>p</var>.</p>"
        },
        {
          "html": "<p>Invoke <var>geo</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/sensors/#dom-sensor-start\" id=\"ref-for-dom-sensor-start\">start()</a></code>.</p>"
        },
        {
          "html": "If <var>signal</var> is not null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org#abortsignal-add\" id=\"ref-for-abortsignal-add\">add the following abort steps</a> to <var>signal</var>:",
          "rationale": "invoke",
          "steps": [
            {
              "html": "<p>Invoke <var>geo</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/sensors/#dom-sensor-stop\" id=\"ref-for-dom-sensor-stop\">stop()</a></code>.</p>"
            },
            {
              "html": "<p>Reject <var>p</var> with <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①\">abort reason</a> and abort these steps.</p>"
            }
          ]
        },
        {
          "html": "Run these steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel\">in parallel</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#notify-error\" id=\"ref-for-notify-error\">notify error</a> is invoked with <var>geo</var>, invoke <var>geo</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/sensors/#dom-sensor-stop\" id=\"ref-for-dom-sensor-stop①\">stop()</a></code>, and reject <var>p</var> with the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②\">DOMException</a></code> passed as input to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#notify-error\" id=\"ref-for-notify-error①\">notify error</a>.</p>"
            },
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#notify-new-reading\" id=\"ref-for-notify-new-reading\">notify new reading</a> is invoked with <var>geo</var>, then <a data-link-type=\"dfn\" href=\"https://w3c.github.io/geolocation-sensor/#resolve-a-geolocation-promise\" id=\"ref-for-resolve-a-geolocation-promise\">resolve a geolocation promise</a> with <var>geo</var> and <var>p</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "resolve a geolocation promise",
      "href": "https://w3c.github.io/geolocation-sensor/#resolve-a-geolocation-promise",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"resolve-a-geolocation-promise\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">resolve a geolocation promise</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means to run the following steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>reading</var> be a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#dictdef-geolocationsensorreading\" id=\"ref-for-dictdef-geolocationsensorreading①\">GeolocationSensorReading</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate\">For each</a> <var>key</var> → <var>value</var> of <a data-link-type=\"dfn\" href=\"https://w3c.github.io/geolocation-sensor/#latest-geolocation-reading\" id=\"ref-for-latest-geolocation-reading\">latest geolocation reading</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set\">Set</a> <var>reading</var>[key] to <var>value</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Invoke <var>geo</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/sensors/#dom-sensor-stop\" id=\"ref-for-dom-sensor-stop②\">stop()</a></code>.</p>"
        },
        {
          "html": "<p>Resolve <var>p</var> with <var>reading</var>.</p>"
        }
      ]
    },
    {
      "name": "construct a geolocation sensor object",
      "html": "<dl>\n     <dt data-md=\"\">input\n     </dt><dd data-md=\"\">\n      <p><var>options</var>, a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#dictdef-geolocationsensoroptions\" id=\"ref-for-dictdef-geolocationsensoroptions②\">GeolocationSensorOptions</a></code> object.</p>\n     </dd><dt data-md=\"\">output\n     </dt><dd data-md=\"\">\n      <p>A <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#geolocationsensor\" id=\"ref-for-geolocationsensor①②\">GeolocationSensor</a></code> object.</p>\n    </dd></dl>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>allowed</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors#check-sensor-policy-controlled-features\" id=\"ref-for-check-sensor-policy-controlled-features\">check sensor policy-controlled features</a> with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#geolocationsensor\" id=\"ref-for-geolocationsensor①③\">GeolocationSensor</a></code>.</p>"
        },
        {
          "html": "If <var>allowed</var> is false, then:",
          "rationale": "throw",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw\">Throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>geo</var> be the new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/geolocation-sensor/#geolocationsensor\" id=\"ref-for-geolocationsensor①④\">GeolocationSensor</a></code> object.</p>"
        },
        {
          "html": "<p>Invoke <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors#initialize-a-sensor-object\" id=\"ref-for-initialize-a-sensor-object\">initialize a sensor object</a> with <var>geo</var> and <var>options</var>.</p>"
        },
        {
          "html": "<p>Return <var>geo</var>.</p>"
        }
      ]
    },
    {
      "name": "geolocation reading parsing algorithm",
      "html": "<dl>\n     <dt data-md=\"\">input\n     </dt><dd data-md=\"\">\n      <p><var>parameters</var>, a JSON <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object-objects\" id=\"ref-for-sec-object-objects\">Object</a></code></p>\n     </dd><dt data-md=\"\">output\n     </dt><dd data-md=\"\">\n      <p>A <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#sensor-reading\" id=\"ref-for-sensor-reading\">sensor reading</a> or <strong>undefined</strong></p>\n    </dd></dl>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>reading</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#sensor-reading\" id=\"ref-for-sensor-reading①\">sensor reading</a>.</p>"
        },
        {
          "html": "<p>Let <var>keys</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list\">list</a> « \"<code>latitude</code>\", \"<code>longitude</code>\", \"<code>altitude</code>\", \"<code>accuracy</code>\", \"<code>altitudeAccuracy</code>\", \"<code>heading</code>\", \"<code>speed</code>\" ».</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①\">For each</a> <var>key</var> of <var>keys</var>",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>value</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://w3c.github.io/sensors/#parse-single-value-number-reading\" id=\"ref-for-parse-single-value-number-reading\">parse single-value number reading</a> with <var>parameters</var> and <var>key</var>.",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <var>value</var> is <strong>undefined</strong>.",
                  "rationale": "return",
                  "steps": [
                    {
                      "html": "<p>Return <strong>undefined</strong>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set①\">Set</a> <var>reading</var>[<var>key</var>] to <var>value</var>[<var>key</var>].</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>reading</var>.</p>"
        }
      ]
    }
  ]
}