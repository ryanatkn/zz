{
  "spec": {
    "title": "Infra Standard",
    "url": "https://infra.spec.whatwg.org/"
  },
  "algorithms": [
    {
      "name": "byte-lowercase",
      "href": "https://infra.spec.whatwg.org/#byte-lowercase",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"byte-lowercase\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">byte-lowercase</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence⑥\">byte sequence</a>, increase each <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte⑤\">byte</a> it\ncontains, in the range 0x41 (A) to 0x5A (Z), inclusive, by 0x20.",
      "rationale": "To <dfn>"
    },
    {
      "name": "byte-uppercase",
      "href": "https://infra.spec.whatwg.org/#byte-uppercase",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"byte-uppercase\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">byte-uppercase</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence⑦\">byte sequence</a>, subtract each <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte⑥\">byte</a> it\ncontains, in the range 0x61 (a) to 0x7A (z), inclusive, by 0x20.",
      "rationale": "To <dfn>"
    },
    {
      "name": "byte sequence/prefix",
      "href": "https://infra.spec.whatwg.org/#byte-sequence-prefix",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①⓪\">byte sequence</a> <var>potentialPrefix</var> is a\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"byte sequence\" data-dfn-type=\"dfn\" data-export=\"\" id=\"byte-sequence-prefix\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">prefix</dfn> of a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①①\">byte sequence</a> <var>input</var> if the\nfollowing steps return true:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>i</var> be 0.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while\">While</a> true:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>i</var> is greater than or equal to <var>potentialPrefix</var>’s\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length\">length</a>, then return true.\n\n   </p>"
            },
            {
              "html": "<p>If <var>i</var> is greater than or equal to <var>input</var>’s\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length①\">length</a>, then return false.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>potentialPrefixByte</var> be the <var>i</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte⑦\">byte</a> of\n   <var>potentialPrefix</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>inputByte</var> be the <var>i</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte⑧\">byte</a> of <var>input</var>.\n\n   </p>"
            },
            {
              "html": "<p>Return false if <var>potentialPrefixByte</var> is not <var>inputByte</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "byte less than",
      "href": "https://infra.spec.whatwg.org/#byte-less-than",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①②\">byte sequence</a> <var>a</var> is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"byte-less-than\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">byte less than</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①③\">byte sequence</a>\n<var>b</var> if the following steps return true:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>b</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-prefix\" id=\"ref-for-byte-sequence-prefix①\">prefix</a> of <var>a</var>, then return false.\n\n </p>"
        },
        {
          "html": "<p>If <var>a</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-prefix\" id=\"ref-for-byte-sequence-prefix②\">prefix</a> of <var>b</var>, then return true.\n\n </p>"
        },
        {
          "html": "<p>Let <var>n</var> be the smallest index such that the <var>n</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte⑨\">byte</a> of\n <var>a</var> is different from the <var>n</var>th byte of <var>b</var>. (There has to be such an\n index, since neither byte sequence is a prefix of the other.)\n\n </p>"
        },
        {
          "html": "<p>If the <var>n</var>th byte of <var>a</var> is less than the <var>n</var>th byte of\n <var>b</var>, then return true.\n\n </p>"
        },
        {
          "html": "<p>Return false.\n</p>"
        }
      ]
    },
    {
      "name": "isomorphic decode",
      "href": "https://infra.spec.whatwg.org/#isomorphic-decode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"isomorphic-decode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">isomorphic decode</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①④\">byte sequence</a> <var>input</var>, return a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑨\">string</a> whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-code-point-length\" id=\"ref-for-string-code-point-length\">code point length</a> is equal to <var>input</var>’s\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length②\">length</a> and whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point①\">code points</a> have the same\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point-value\" id=\"ref-for-code-point-value\">values</a> as the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-value\" id=\"ref-for-byte-value①\">values</a> of <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte①⓪\">bytes</a>, in\nthe same order.",
      "rationale": "To <dfn>"
    },
    {
      "name": "string/convert",
      "href": "https://infra.spec.whatwg.org/#javascript-string-convert",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"string,JavaScript string\" data-dfn-type=\"dfn\" data-export=\"\" id=\"javascript-string-convert\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert</dfn> a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string②⓪\">string</a> into a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value-string\" id=\"ref-for-scalar-value-string②\">scalar value string</a>, replace any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#surrogate\" id=\"ref-for-surrogate①\">surrogates</a> with U+FFFD (�).",
      "rationale": "To <dfn>"
    },
    {
      "name": "code unit prefix",
      "href": "https://infra.spec.whatwg.org/#code-unit-prefix",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string②⑨\">string</a> <var>potentialPrefix</var> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"code-unit-prefix\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">code unit prefix</dfn> of a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③⓪\">string</a> <var>input</var> if the following steps return true:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>i</var> be 0.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while①\">While</a> true:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>i</var> is greater than or equal to <var>potentialPrefix</var>’s\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length\">length</a>, then return true.\n\n   </p>"
            },
            {
              "html": "<p>If <var>i</var> is greater than or equal to <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length①\">length</a>,\n   then return false.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>potentialPrefixCodeUnit</var> be the <var>i</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit③\">code unit</a> of\n   <var>potentialPrefix</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>inputCodeUnit</var> be the <var>i</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit④\">code unit</a> of <var>input</var>.\n\n   </p>"
            },
            {
              "html": "<p>Return false if <var>potentialPrefixCodeUnit</var> is not <var>inputCodeUnit</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "code unit suffix",
      "href": "https://infra.spec.whatwg.org/#code-unit-suffix",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③①\">string</a> <var>potentialSuffix</var> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"code-unit-suffix\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">code unit suffix</dfn> of a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③②\">string</a> <var>input</var> if the following steps return true:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>i</var> be 1.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while②\">While</a> true:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>potentialSuffixIndex</var> be <var>potentialSuffix</var>’s\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length②\">length</a> − <var>i</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>inputIndex</var> be <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length③\">length</a> −\n   <var>i</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>potentialSuffixIndex</var> is less than 0, then return true.\n\n   </p>"
            },
            {
              "html": "<p>If <var>inputIndex</var> is less than 0, then return false.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>potentialSuffixCodeUnit</var> be the <var>potentialSuffixIndex</var>th\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑥\">code unit</a> of <var>potentialSuffix</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>inputCodeUnit</var> be the <var>inputIndex</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑦\">code unit</a> of\n   <var>input</var>.\n\n   </p>"
            },
            {
              "html": "<p>Return false if <var>potentialSuffixCodeUnit</var> is not <var>inputCodeUnit</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "code unit less than",
      "href": "https://infra.spec.whatwg.org/#code-unit-less-than",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③③\">string</a> <var>a</var> is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"code-unit-less-than\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">code unit less than</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③④\">string</a>\n<var>b</var> if the following steps return true:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>b</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit-prefix\" id=\"ref-for-code-unit-prefix②\">code unit prefix</a> of <var>a</var>, then return false.\n\n </p>"
        },
        {
          "html": "<p>If <var>a</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit-prefix\" id=\"ref-for-code-unit-prefix③\">code unit prefix</a> of <var>b</var>, then return true.\n\n </p>"
        },
        {
          "html": "<p>Let <var>n</var> be the smallest index such that the <var>n</var>th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑨\">code unit</a> of\n <var>a</var> is different from the <var>n</var>th code unit of <var>b</var>. (There has to be such\n an index, since neither string is a prefix of the other.)\n\n </p>"
        },
        {
          "html": "<p>If the <var>n</var>th code unit of <var>a</var> is less than the <var>n</var>th code unit of\n <var>b</var>, then return true.\n\n </p>"
        },
        {
          "html": "<p>Return false.\n</p>"
        }
      ]
    },
    {
      "name": "code unit substring",
      "href": "https://infra.spec.whatwg.org/#code-unit-substring",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"code-unit-substring\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">code unit substring</dfn> from <var>start</var> with length <var>length</var>\nwithin a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③⑤\">string</a> <var>string</var> is determined as follows:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert②\">Assert</a>: <var>start</var> and <var>length</var> are nonnegative.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert③\">Assert</a>: <var>start</var> + <var>length</var> is less than or equal to\n <var>string</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length④\">length</a>.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be the empty string.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate④\">For each</a> <var>i</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-exclusive-range\" id=\"ref-for-the-exclusive-range\">the range</a> from\n <var>start</var> to <var>start</var> + <var>length</var>, exclusive: append the <var>i</var>th\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit①⓪\">code unit</a> of <var>string</var> to <var>result</var>.</p>"
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "code point substring",
      "href": "https://infra.spec.whatwg.org/#code-point-substring",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"code-point-substring\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">code point substring</dfn> within a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string③⑧\">string</a> <var>string</var> from\n<var>start</var> with length <var>length</var> is determined as follows:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert④\">Assert</a>: <var>start</var> and <var>length</var> are nonnegative.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑤\">Assert</a>: <var>start</var> + <var>length</var> is less than or equal to\n <var>string</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-code-point-length\" id=\"ref-for-string-code-point-length①\">code point length</a>.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be the empty string.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑤\">For each</a> <var>i</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-exclusive-range\" id=\"ref-for-the-exclusive-range①\">the range</a> from\n <var>start</var> to <var>start</var> + <var>length</var>, exclusive: append the <var>i</var>th\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③④\">code point</a> of <var>string</var> to <var>result</var>.</p>"
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "isomorphic encode",
      "href": "https://infra.spec.whatwg.org/#isomorphic-encode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"isomorphic-encode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">isomorphic encode</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#isomorphic-string\" id=\"ref-for-isomorphic-string①\">isomorphic string</a> <var>input</var>: return a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①⑤\">byte sequence</a> whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length③\">length</a> is equal to <var>input</var>’s\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-code-point-length\" id=\"ref-for-string-code-point-length③\">code point length</a> and whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte\" id=\"ref-for-byte①①\">bytes</a> have the same <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-value\" id=\"ref-for-byte-value②\">values</a> as\nthe <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point-value\" id=\"ref-for-code-point-value①\">values</a> of <var>input</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③⑤\">code points</a>, in the same order.",
      "rationale": "To <dfn>"
    },
    {
      "name": "ASCII lowercase",
      "href": "https://infra.spec.whatwg.org/#ascii-lowercase",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"ascii-lowercase\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ASCII lowercase</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string④②\">string</a>, replace all <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-upper-alpha\" id=\"ref-for-ascii-upper-alpha①\">ASCII upper alphas</a> in\nthe <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string④③\">string</a> with their corresponding <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③⑥\">code point</a> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lower-alpha\" id=\"ref-for-ascii-lower-alpha①\">ASCII lower alpha</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "ASCII uppercase",
      "href": "https://infra.spec.whatwg.org/#ascii-uppercase",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"ascii-uppercase\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ASCII uppercase</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string④④\">string</a>, replace all <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lower-alpha\" id=\"ref-for-ascii-lower-alpha②\">ASCII lower alphas</a> in\nthe <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string④⑤\">string</a> with their corresponding <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③⑦\">code point</a> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-upper-alpha\" id=\"ref-for-ascii-upper-alpha②\">ASCII upper alpha</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "ASCII encode",
      "href": "https://infra.spec.whatwg.org/#ascii-encode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"ascii-encode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ASCII encode</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-string\" id=\"ref-for-ascii-string①\">ASCII string</a> <var>input</var>: return the\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#isomorphic-encode\" id=\"ref-for-isomorphic-encode①\">isomorphic encoding</a> of <var>input</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "ASCII decode",
      "href": "https://infra.spec.whatwg.org/#ascii-decode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"ascii-decode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ASCII decode</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①⑦\">byte sequence</a> <var>input</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑥\">Assert</a>: all bytes in <var>input</var> are <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-byte\" id=\"ref-for-ascii-byte①\">ASCII bytes</a>.\n\n </p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#isomorphic-decode\" id=\"ref-for-isomorphic-decode②\">isomorphic decoding</a> of <var>input</var>.\n</p>"
        }
      ]
    },
    {
      "name": "strip newlines",
      "href": "https://infra.spec.whatwg.org/#strip-newlines",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"strip-newlines\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">strip newlines</dfn> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string④⑨\">string</a>, remove any U+000A LF and U+000D CR\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③⑧\">code points</a> from the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⓪\">string</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "normalize newlines",
      "href": "https://infra.spec.whatwg.org/#normalize-newlines",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"normalize-newlines\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">normalize newlines</dfn> in a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤①\">string</a>, replace every U+000D CR U+000A LF\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point③⑨\">code point</a> pair with a single U+000A LF <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④⓪\">code point</a>, and then replace every remaining\nU+000D CR <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④①\">code point</a> with a U+000A LF <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④②\">code point</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "strip leading and trailing ASCII whitespace",
      "href": "https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"strip-leading-and-trailing-ascii-whitespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">strip leading and trailing ASCII whitespace</dfn> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤②\">string</a>, remove all\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace①\">ASCII whitespace</a> that are at the start or the end of the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤③\">string</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "strip and collapse ASCII whitespace",
      "href": "https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"strip-and-collapse-ascii-whitespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">strip and collapse ASCII whitespace</dfn> in a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤④\">string</a>, replace any sequence\nof one or more consecutive <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④③\">code points</a> that are <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace②\">ASCII whitespace</a> in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⑤\">string</a>\nwith a single U+0020 SPACE <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④④\">code point</a>, and then remove any leading and trailing\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace③\">ASCII whitespace</a> from that string.",
      "rationale": "To <dfn>"
    },
    {
      "name": "collect a sequence of code points",
      "href": "https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"collect a sequence of code points|collecting a sequence of code\npoints\" id=\"collect-a-sequence-of-code-points\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">collect a sequence of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④⑤\">code points</a></dfn> meeting a condition <var>condition</var> from\na <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⑥\">string</a> <var>input</var>, given a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"string\" data-dfn-type=\"dfn\" data-export=\"\" id=\"string-position-variable\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">position variable</dfn>\n<var>position</var> tracking the position of the calling algorithm within <var>input</var>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be the empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⑦\">string</a>.\n\n </p>"
        },
        {
          "html": "While <var>position</var> doesn’t point past the end of <var>input</var> and the\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④⑥\">code point</a> at <var>position</var> within <var>input</var> meets the condition\n  <var>condition</var>:",
          "rationale": "append",
          "steps": [
            {
              "html": "<p>Append that <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④⑦\">code point</a> to the end of <var>result</var>.\n\n   </p>"
            },
            {
              "html": "<p>Advance <var>position</var> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "skip ASCII whitespace",
      "href": "https://infra.spec.whatwg.org/#skip-ascii-whitespace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"skip-ascii-whitespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">skip ASCII whitespace</dfn> within a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⑧\">string</a> <var>input</var> given a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-position-variable\" id=\"ref-for-string-position-variable①\">position variable</a> <var>position</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\" id=\"ref-for-collect-a-sequence-of-code-points\">collect a sequence of code points</a> that are\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace④\">ASCII whitespace</a> from <var>input</var> given <var>position</var>. The collected\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point④⑨\">code points</a> are not used, but <var>position</var> is still updated.",
      "rationale": "To <dfn>"
    },
    {
      "name": "strictly split",
      "href": "https://infra.spec.whatwg.org/#strictly-split",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"strictly split|strictly split a string\" id=\"strictly-split\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">strictly split a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑤⑨\">string</a></dfn>\n<var>input</var> on a particular delimiter <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤⓪\">code point</a> <var>delimiter</var>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>position</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-position-variable\" id=\"ref-for-string-position-variable②\">position variable</a> for <var>input</var>, initially\n pointing at the start of <var>input</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>tokens</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤\">list</a> of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥⓪\">strings</a>, initially empty.\n\n </p>"
        },
        {
          "html": "<p>Let <var>token</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\" id=\"ref-for-collect-a-sequence-of-code-points①\">collecting a sequence of code points</a> that are\n not equal to <var>delimiter</var> from <var>input</var>, given <var>position</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑧\">Append</a> <var>token</var> to <var>tokens</var>.\n\n </p>"
        },
        {
          "html": "While <var>position</var> is not past the end of <var>input</var>:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑦\">Assert</a>: the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤①\">code point</a> at <var>position</var> within <var>input</var> is\n   <var>delimiter</var>.\n\n   </p>"
            },
            {
              "html": "<p>Advance <var>position</var> by 1.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>token</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\" id=\"ref-for-collect-a-sequence-of-code-points②\">collecting a sequence of code points</a> that are\n   not equal to <var>delimiter</var> from <var>input</var>, given <var>position</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑨\">Append</a> <var>token</var> to <var>tokens</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>tokens</var>.\n</p>"
        }
      ]
    },
    {
      "name": "split on ASCII whitespace",
      "href": "https://infra.spec.whatwg.org/#split-on-ascii-whitespace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"split on ASCII whitespace|split a string on ASCII whitespace\" id=\"split-on-ascii-whitespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">split a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥①\">string</a> <var>input</var> on ASCII whitespace</dfn>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>position</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-position-variable\" id=\"ref-for-string-position-variable③\">position variable</a> for <var>input</var>, initially\n pointing at the start of <var>input</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>tokens</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥\">list</a> of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥②\">strings</a>, initially empty.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#skip-ascii-whitespace\" id=\"ref-for-skip-ascii-whitespace\">Skip ASCII whitespace</a> within <var>input</var> given <var>position</var>.\n\n </p>"
        },
        {
          "html": "While <var>position</var> is not past the end of <var>input</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>token</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\" id=\"ref-for-collect-a-sequence-of-code-points③\">collecting a sequence of code points</a> that are\n   not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace⑥\">ASCII whitespace</a> from <var>input</var>, given <var>position</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⓪\">Append</a> <var>token</var> to <var>tokens</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#skip-ascii-whitespace\" id=\"ref-for-skip-ascii-whitespace①\">Skip ASCII whitespace</a> within <var>input</var> given <var>position</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>tokens</var>.\n</p>"
        }
      ]
    },
    {
      "name": "split on commas",
      "href": "https://infra.spec.whatwg.org/#split-on-commas",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"split on commas|split a string on commas\" id=\"split-on-commas\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">split a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥③\">string</a>\n<var>input</var> on commas</dfn>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>position</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-position-variable\" id=\"ref-for-string-position-variable④\">position variable</a> for <var>input</var>, initially\n pointing at the start of <var>input</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>tokens</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑦\">list</a> of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥④\">strings</a>, initially empty.\n\n </p>"
        },
        {
          "html": "While <var>position</var> is not past the end of <var>input</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>token</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\" id=\"ref-for-collect-a-sequence-of-code-points④\">collecting a sequence of code points</a> that are\n    not U+002C (,) from <var>input</var>, given <var>position</var>.\n\n    </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\" id=\"ref-for-strip-leading-and-trailing-ascii-whitespace\">Strip leading and trailing ASCII whitespace</a> from <var>token</var>."
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①①\">Append</a> <var>token</var> to <var>tokens</var>.\n\n   </p>"
            },
            {
              "html": "If <var>position</var> is not past the end of <var>input</var>:",
              "rationale": "assert",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑧\">Assert</a>: the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤②\">code point</a> at <var>position</var> within <var>input</var> is\n     U+002C (,).\n\n     </p>"
                },
                {
                  "html": "<p>Advance <var>position</var> by 1.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>tokens</var>.\n</p>"
        }
      ]
    },
    {
      "name": "string/concatenate",
      "href": "https://infra.spec.whatwg.org/#string-concatenate",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"string\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"concatenate|concatenation\" id=\"string-concatenate\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">concatenate</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑧\">list</a> of\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥⑤\">strings</a> <var>list</var>, using an optional separator string <var>separator</var>, run\nthese steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>list</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty\">is empty</a>, then return the empty string.\n\n </p>"
        },
        {
          "html": "<p>If <var>separator</var> is not given, then set <var>separator</var> to the empty string.\n\n </p>"
        },
        {
          "html": "<p>Return a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑥⑥\">string</a> whose contents are <var>list</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item\">items</a>, in\n order, separated from each other by <var>separator</var>.\n</p>"
        }
      ]
    },
    {
      "name": "list/append",
      "href": "https://infra.spec.whatwg.org/#list-append",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">append</dfn> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑦\">list</a> that is not an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①\">ordered set</a> is to\nadd the given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑤\">item</a> to the end of the list.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/extend",
      "href": "https://infra.spec.whatwg.org/#list-extend",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-extend\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">extend</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑧\">list</a> that is not an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set②\">ordered set</a> <var>A</var> with a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑨\">list</a> <var>B</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑥\">for each</a> <var>item</var> of <var>B</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①②\">append</a> <var>item</var> to <var>A</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/prepend",
      "href": "https://infra.spec.whatwg.org/#list-prepend",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-prepend\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">prepend</dfn> to a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⓪\">list</a> that is not an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set③\">ordered set</a> is to\nadd the given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑥\">item</a> to the beginning of the list.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/replace",
      "href": "https://infra.spec.whatwg.org/#list-replace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace</dfn> within a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②①\">list</a> that is not an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set④\">ordered set</a> is\nto replace all items from the list that match a given condition with the given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑦\">item</a>,\nor do nothing if none do.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/insert",
      "href": "https://infra.spec.whatwg.org/#list-insert",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-insert\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">insert</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑧\">item</a> into a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②③\">list</a> before an\nindex is to add the given item to the list between the given index − 1 and the given index. If\nthe given index is 0, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend\">prepend</a> the given item to the list.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/remove",
      "href": "https://infra.spec.whatwg.org/#list-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove</dfn> zero or more <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑨\">items</a> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②④\">list</a> is\nto remove all items from the list that match a given condition, or do nothing if none do.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/empty",
      "href": "https://infra.spec.whatwg.org/#list-empty",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,stack,queue,set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-empty\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">empty</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑦\">list</a> is to <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove②\">remove</a>\nall of its <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①⓪\">items</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/get the indices",
      "href": "https://infra.spec.whatwg.org/#list-get-the-indices",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,stack,queue,set\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"get the indices|indices\" id=\"list-get-the-indices\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the indices</dfn> of a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③②\">list</a>, return <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-exclusive-range\" id=\"ref-for-the-exclusive-range②\">the range</a> from 0 to the list’s\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑤\">size</a>, exclusive.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/iterate",
      "href": "https://infra.spec.whatwg.org/#list-iterate",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,set\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"iterate|for each\" id=\"list-iterate\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">iterate</dfn> over a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③③\">list</a>, performing a\nset of steps on each <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①③\">item</a> in order, use phrasing of the form\n\"<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑦\">For each</a> <var>item</var> of <var>list</var>\", and then operate on <var>item</var> in the\nsubsequent prose.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/clone",
      "href": "https://infra.spec.whatwg.org/#list-clone",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,stack,queue,set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"list-clone\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clone</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③④\">list</a> <var>list</var> is to create a new\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑤\">list</a> <var>clone</var>, of the same designation, and, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑧\">for each</a> <var>item</var> of <var>list</var>,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①③\">append</a> <var>item</var> to <var>clone</var>, so that <var>clone</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain④\">contains</a> the same\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①④\">items</a>, in the same order as <var>list</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/sort in ascending order",
      "href": "https://infra.spec.whatwg.org/#list-sort-in-ascending-order",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,stack,queue,set\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"sort in ascending order|sorting in ascending order|sort|sorting\" id=\"list-sort-in-ascending-order\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">sort in ascending order</dfn>\na <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑥\">list</a> <var>list</var>, with a less than algorithm <var>lessThanAlgo</var>, is to create a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑦\">list</a>\n<var>sorted</var>, containing the same <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①⑥\">items</a> as <var>list</var> but sorted so that according to\n<var>lessThanAlgo</var>, each item is less than the one following it, if any. For items that sort the same\n(i.e., for which <var>lessThanAlgo</var> returns false for both comparisons), their relative order in\n<var>sorted</var> must be the same as it was in <var>list</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "list/sort in descending order",
      "href": "https://infra.spec.whatwg.org/#list-sort-in-descending-order",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"list,stack,queue,set\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"sort in descending order|sorting in descending order\" id=\"list-sort-in-descending-order\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">sort in descending order</dfn>\na <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑧\">list</a> <var>list</var>, with a less than algorithm <var>lessThanAlgo</var>, is to create a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑨\">list</a>\n<var>sorted</var>, containing the same <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①⑦\">items</a> as <var>list</var> but sorted so that according to\n<var>lessThanAlgo</var>, each item is less than the one preceding it, if any. For items that sort the same\n(i.e., for which <var>lessThanAlgo</var> returns false for both comparisons), their relative order in\n<var>sorted</var> must be the same as it was in <var>list</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "stack/push",
      "href": "https://infra.spec.whatwg.org/#stack-push",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"stack\" data-dfn-type=\"dfn\" data-export=\"\" id=\"stack-push\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">push</dfn> onto a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack\">stack</a> is to <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑤\">append</a> to it.",
      "rationale": "To <dfn>"
    },
    {
      "name": "stack/pop",
      "href": "https://infra.spec.whatwg.org/#stack-pop",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"stack\" data-dfn-type=\"dfn\" data-export=\"\" id=\"stack-pop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">pop</dfn> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack①\">stack</a>: if the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack②\">stack</a>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty①\">is not empty</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove④\">remove</a> its last <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①⑧\">item</a> and return\nit; otherwise, return nothing.",
      "rationale": "To <dfn>"
    },
    {
      "name": "stack/peek",
      "href": "https://infra.spec.whatwg.org/#stack-peek",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"stack\" data-dfn-type=\"dfn\" data-export=\"\" id=\"stack-peek\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">peek</dfn> into a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack③\">stack</a>: if the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack④\">stack</a>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty②\">is not empty</a>, then return its last <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①⑨\">item</a>; otherwise, return\nnothing.",
      "rationale": "To <dfn>"
    },
    {
      "name": "queue/enqueue",
      "href": "https://infra.spec.whatwg.org/#queue-enqueue",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"queue\" data-dfn-type=\"dfn\" data-export=\"\" id=\"queue-enqueue\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">enqueue</dfn> in a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue\">queue</a> is to <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑦\">append</a> to it.",
      "rationale": "To <dfn>"
    },
    {
      "name": "queue/dequeue",
      "href": "https://infra.spec.whatwg.org/#queue-dequeue",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"queue\" data-dfn-type=\"dfn\" data-export=\"\" id=\"queue-dequeue\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">dequeue</dfn> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue①\">queue</a> is to <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑥\">remove</a> its first\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②⓪\">item</a> and return it, if the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue②\">queue</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty③\">is not empty</a>, or to return\nnothing if it is.",
      "rationale": "To <dfn>"
    },
    {
      "name": "set/create",
      "href": "https://infra.spec.whatwg.org/#set-create",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-create\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set⑧\">set</a>, given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤②\">list</a> <var>input</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set⑨\">set</a>.\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①①\">For each</a> <var>item</var> of <var>input</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append②\">append</a> <var>item</var> to <var>result</var>.\n </p>"
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "set/append",
      "href": "https://infra.spec.whatwg.org/#set-append",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">append</dfn> to an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①⓪\">ordered set</a>: if the set <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑤\">contains</a>\nthe given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②②\">item</a>, then do nothing; otherwise, perform the normal <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤③\">list</a>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑧\">append</a> operation.",
      "rationale": "To <dfn>"
    },
    {
      "name": "set/extend",
      "href": "https://infra.spec.whatwg.org/#set-extend",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-extend\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">extend</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①①\">ordered set</a> <var>A</var> with a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤④\">list</a> <var>B</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①②\">for each</a>\n<var>item</var> of <var>B</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append③\">append</a> <var>item</var> to <var>A</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "set/prepend",
      "href": "https://infra.spec.whatwg.org/#set-prepend",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"set\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-prepend\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">prepend</dfn> to an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①②\">ordered set</a>: if the set\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑥\">contains</a> the given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②③\">item</a>, then do nothing; otherwise, perform the\nnormal <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤⑤\">list</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend③\">prepend</a> operation.",
      "rationale": "To <dfn>"
    },
    {
      "name": "set/replace",
      "href": "https://infra.spec.whatwg.org/#set-replace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"set\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"replace|replacing\" id=\"set-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace</dfn> within an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①③\">ordered set</a>\n<var>set</var>, given <var>item</var> and <var>replacement</var>: if <var>set</var>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑦\">contains</a> <var>item</var> or <var>replacement</var>, then replace the first instance\nof either with <var>replacement</var> and <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑦\">remove</a> all other instances.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/get",
      "href": "https://infra.spec.whatwg.org/#map-get",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"get|get the value\" id=\"map-get\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the value of an entry</dfn> in an\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map③\">ordered map</a> <var>map</var> given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-key\" id=\"ref-for-map-key\">key</a> <var>key</var> and an optional\n<var>default</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>map</var> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">contain</a> <var>key</var> and <var>default</var>\n is given, then return <var>default</var>.\n\n </p>"
        },
        {
          "html": "<p>Assert: <var>map</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">contains</a> <var>key</var>.\n\n </p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-value\" id=\"ref-for-map-value\">value</a> of the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry①\">entry</a> in <var>map</var> whose\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-key\" id=\"ref-for-map-key①\">key</a> is <var>key</var>.\n</p>"
        }
      ]
    },
    {
      "name": "map/set",
      "href": "https://infra.spec.whatwg.org/#map-set",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"set|set the value\" id=\"map-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set the value of an entry</dfn> in an\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑥\">ordered map</a> to a given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-value\" id=\"ref-for-map-value①\">value</a> is to update the value of any existing\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry②\">entry</a> if the map <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">contains</a> an entry with the given <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-key\" id=\"ref-for-map-key③\">key</a>,\nor if none such exists, to add a new entry with the given key/value to the end of the map. We can\nalso denote this by saying, for an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑦\">ordered map</a> <var>map</var>, key <var>key</var>, and value <var>value</var>,\n\"<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set\">set</a> <var>map</var>[<var>key</var>] to <var>value</var>\".",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/remove",
      "href": "https://infra.spec.whatwg.org/#map-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"remove\" id=\"map-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove an entry</dfn> from an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑧\">ordered map</a> is to remove\nall <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry③\">entries</a> from the map that match a given condition, or do nothing if none do. If\nthe condition is having a certain <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-key\" id=\"ref-for-map-key④\">key</a>, then we can also denote this by saying, for\nan <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑨\">ordered map</a> <var>map</var> and key <var>key</var>, \"<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-remove\" id=\"ref-for-map-remove\">remove</a> <var>map</var>[<var>key</var>]\".",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/clear",
      "href": "https://infra.spec.whatwg.org/#map-clear",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" id=\"map-clear\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clear</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①⓪\">ordered map</a> is to remove all <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry④\">entries</a>\nfrom the map.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/getting the keys",
      "href": "https://infra.spec.whatwg.org/#map-getting-the-keys",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"getting the keys|get the keys|keys\" id=\"map-getting-the-keys\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the keys</dfn> of an\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①③\">ordered map</a>, return a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set②⑨\">ordered set</a> whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②④\">items</a> are each of the\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-getting-the-keys\" id=\"ref-for-map-getting-the-keys\">keys</a> in the map’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry⑥\">entries</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/getting the values",
      "href": "https://infra.spec.whatwg.org/#map-getting-the-values",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"getting the values|get the values|values\" id=\"map-getting-the-values\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the values</dfn> of an\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①④\">ordered map</a>, return a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤⑥\">list</a> whose <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item②⑤\">items</a> are each of the\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-getting-the-values\" id=\"ref-for-map-getting-the-values\">values</a> in the map’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry⑦\">entries</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/iterate",
      "href": "https://infra.spec.whatwg.org/#map-iterate",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"iterate|for each\" id=\"map-iterate\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">iterate</dfn> over an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①⑦\">ordered map</a>, performing\na set of steps on each <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry⑧\">entry</a> in order, use phrasing of the form\n\"<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate①\">For each</a> <var>key</var> → <var>value</var> of <var>map</var>\", and then operate on <var>key</var> and <var>value</var> in the\nsubsequent prose.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/clone",
      "href": "https://infra.spec.whatwg.org/#map-clone",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" id=\"map-clone\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clone</dfn> an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①⑧\">ordered map</a> <var>map</var> is to create a new\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①⑨\">ordered map</a> <var>clone</var>, and, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate②\">for each</a> <var>key</var> → <var>value</var> of <var>map</var>,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set①\">set</a> <var>clone</var>[<var>key</var>] to <var>value</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/sort in ascending order",
      "href": "https://infra.spec.whatwg.org/#map-sort-in-ascending-order",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"sort in ascending order|sorting in ascending order|sort|sorting\" id=\"map-sort-in-ascending-order\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">sort in ascending order</dfn>\na <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②②\">map</a> <var>map</var>, with a less than algorithm <var>lessThanAlgo</var>, is to create a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②③\">map</a>\n<var>sorted</var>, containing the same <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry⑨\">entries</a> as <var>map</var> but sorted so that according to\n<var>lessThanAlgo</var>, each entry is less than the one following it, if any. For entries that sort the same\n(i.e., for which <var>lessThanAlgo</var> returns false for both comparisons), their relative order in\n<var>sorted</var> must be the same as it was in <var>map</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "map/sort in descending order",
      "href": "https://infra.spec.whatwg.org/#map-sort-in-descending-order",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"map\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"sort in descending order|sorting in descending order\" id=\"map-sort-in-descending-order\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">sort in descending order</dfn>\na <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②④\">map</a> <var>map</var>, with a less than algorithm <var>lessThanAlgo</var>, is to create a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②⑤\">map</a>\n<var>sorted</var>, containing the same <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-entry\" id=\"ref-for-map-entry①⓪\">entries</a> as <var>map</var> but sorted so that according to\n<var>lessThanAlgo</var>, each entry is less than the one preceding it, if any. For entries that sort the same\n(i.e., for which <var>lessThanAlgo</var> returns false for both comparisons), their relative order in\n<var>sorted</var> must be the same as it was in <var>map</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "parse a JSON string to a JavaScript value",
      "href": "https://infra.spec.whatwg.org/#parse-a-json-string-to-a-javascript-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-json-string-to-a-javascript-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a JSON string to a JavaScript value</dfn>, given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⓪\">string</a> <var>string</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return ? <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-call\" id=\"ref-for-sec-call\">Call</a>(<a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-json.parse\" id=\"ref-for-sec-json.parse\">%JSON.parse%</a>, undefined, « <var>string</var> »).\n</p>"
        }
      ]
    },
    {
      "name": "parse JSON bytes to a JavaScript value",
      "href": "https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"parse JSON bytes to a JavaScript value|parse JSON from bytes\" id=\"parse-json-bytes-to-a-javascript-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse JSON bytes to a JavaScript value</dfn>,\ngiven a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①⑨\">byte sequence</a> <var>bytes</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>string</var> be the result of running <a data-link-type=\"dfn\" href=\"https://encoding.spec.whatwg.org/#utf-8-decode\" id=\"ref-for-utf-8-decode③\">UTF-8 decode</a> on <var>bytes</var>. <a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-encoding\" title=\"Encoding Standard\">[ENCODING]</a>\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#parse-a-json-string-to-a-javascript-value\" id=\"ref-for-parse-a-json-string-to-a-javascript-value\">parsing a JSON string to a JavaScript value</a> given <var>string</var>.\n</p>"
        }
      ]
    },
    {
      "name": "serialize a JavaScript value to a JSON string",
      "href": "https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-javascript-value-to-a-json-string\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a JavaScript value to a JSON string</dfn>, given a JavaScript value\n<var>value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be ? <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-call\" id=\"ref-for-sec-call①\">Call</a>(<a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-json.stringify\" id=\"ref-for-sec-json.stringify\">%JSON.stringify%</a>, undefined, « <var>value</var> »).\n\n  </p>"
        },
        {
          "html": "<p>If <var>result</var> is undefined, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①\">TypeError</a></code>.\n\n  </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert①④\">Assert</a>: <var>result</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦①\">string</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "serialize a JavaScript value to JSON bytes",
      "href": "https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-json-bytes",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"serialize a JavaScript value to JSON bytes|serialize JSON to bytes\" id=\"serialize-a-javascript-value-to-json-bytes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a JavaScript value to JSON bytes</dfn>,\ngiven a JavaScript value <var>value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>string</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string\" id=\"ref-for-serialize-a-javascript-value-to-a-json-string\">serializing a JavaScript value to a JSON string</a> given\n <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://encoding.spec.whatwg.org/#utf-8-encode\" id=\"ref-for-utf-8-encode③\">UTF-8 encode</a> on <var>string</var>. <a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-encoding\" title=\"Encoding Standard\">[ENCODING]</a>\n</p>"
        }
      ]
    },
    {
      "name": "parse a JSON string to an Infra value",
      "href": "https://infra.spec.whatwg.org/#parse-a-json-string-to-an-infra-value",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"parse a JSON string to an Infra value|parse JSON into Infra values\" id=\"parse-a-json-string-to-an-infra-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a JSON string to an Infra value</dfn>,\ngiven a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦③\">string</a> <var>string</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsValue</var> be ? <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-call\" id=\"ref-for-sec-call②\">Call</a>(<a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-json.parse\" id=\"ref-for-sec-json.parse①\">%JSON.parse%</a>, undefined, « <var>string</var> »).\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-a-json-derived-javascript-value-to-an-infra-value\" id=\"ref-for-convert-a-json-derived-javascript-value-to-an-infra-value\">converting a JSON-derived JavaScript value to an Infra value</a>, given\n <var>jsValue</var>.\n</p>"
        }
      ]
    },
    {
      "name": "parse JSON bytes to an Infra value",
      "href": "https://infra.spec.whatwg.org/#parse-json-bytes-to-an-infra-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-json-bytes-to-an-infra-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse JSON bytes to an Infra value</dfn>, given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence②⓪\">byte sequence</a> <var>bytes</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>string</var> be the result of running <a data-link-type=\"dfn\" href=\"https://encoding.spec.whatwg.org/#utf-8-decode\" id=\"ref-for-utf-8-decode④\">UTF-8 decode</a> on <var>bytes</var>. <a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-encoding\" title=\"Encoding Standard\">[ENCODING]</a>\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#parse-a-json-string-to-an-infra-value\" id=\"ref-for-parse-a-json-string-to-an-infra-value\">parsing a JSON string to an Infra value</a> given <var>string</var>.\n</p>"
        }
      ]
    },
    {
      "name": "convert a JSON-derived JavaScript value to an Infra value",
      "href": "https://infra.spec.whatwg.org/#convert-a-json-derived-javascript-value-to-an-infra-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"convert-a-json-derived-javascript-value-to-an-infra-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert a JSON-derived JavaScript value to an Infra value</dfn>, given a JavaScript value\n<var>jsValue</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>jsValue</var> is <emu-val>null</emu-val>, <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-ecmascript-language-types-boolean-type\" id=\"ref-for-sec-ecmascript-language-types-boolean-type\">is a Boolean</a>, <var>jsValue</var>\n <a data-link-type=\"dfn\" data-refhint-key=\"383964c1\" href=\"https://tc39.github.io/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type①\">is a String</a>, or <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type\">is a Number</a>, then return <var>jsValue</var>.\n\n </p>"
        },
        {
          "html": "If <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-isarray\" id=\"ref-for-sec-isarray\">IsArray</a>(<var>jsValue</var>) is true:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>result</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤⑨\">list</a>.\n\n    </p>"
            },
            {
              "html": "<p>Let <var>length</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-tolength\" id=\"ref-for-sec-tolength\">ToLength</a>(! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-get-o-p\" id=\"ref-for-sec-get-o-p\">Get</a>(<var>jsValue</var>, \"<code>length</code>\")).\n\n    </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑧\">For each</a> <var>index</var> of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①\">the range</a> 0 to <var>length</var> − 1, inclusive:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>indexName</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-tostring\" id=\"ref-for-sec-tostring\">ToString</a>(<var>index</var>).\n\n       </p>"
                },
                {
                  "html": "<p>Let <var>jsValueAtIndex</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-get-o-p\" id=\"ref-for-sec-get-o-p①\">Get</a>(<var>jsValue</var>, <var>indexName</var>).\n\n       </p>"
                },
                {
                  "html": "<p>Let <var>infraValueAtIndex</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-a-json-derived-javascript-value-to-an-infra-value\" id=\"ref-for-convert-a-json-derived-javascript-value-to-an-infra-value①\">converting a JSON-derived JavaScript value to an Infra value</a>,\n       given <var>jsValueAtIndex</var>.\n\n       </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append②⓪\">Append</a> <var>infraValueAtIndex</var> to <var>result</var>.\n      </p>"
                }
              ]
            },
            {
              "html": "<p>Return <var>result</var>.\n   </p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>result</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②⑦\">ordered map</a>.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑨\">For each</a> <var>key</var> of ! <var>jsValue</var>.[[OwnPropertyKeys]]():",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>jsValueAtKey</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-get-o-p\" id=\"ref-for-sec-get-o-p②\">Get</a>(<var>jsValue</var>, <var>key</var>).\n\n    </p>"
            },
            {
              "html": "<p>Let <var>infraValueAtKey</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-a-json-derived-javascript-value-to-an-infra-value\" id=\"ref-for-convert-a-json-derived-javascript-value-to-an-infra-value②\">converting a JSON-derived JavaScript value to an Infra value</a>,\n    given <var>jsValueAtKey</var>.\n\n    </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set③\">Set</a> <var>result</var>[<var>key</var>] to <var>infraValueAtKey</var>.\n   </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "serialize an Infra value to a JSON string",
      "href": "https://infra.spec.whatwg.org/#serialize-an-infra-value-to-a-json-string",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-an-infra-value-to-a-json-string\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize an Infra value to a JSON string</dfn>, given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦④\">string</a>,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#boolean\" id=\"ref-for-boolean③\">boolean</a>, number, null, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥⓪\">list</a>, or <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⑤\">string</a>-keyed <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②⑧\">map</a> <var>value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsValue</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-an-infra-value-to-a-json-compatible-javascript-value\" id=\"ref-for-convert-an-infra-value-to-a-json-compatible-javascript-value\">converting an Infra value to a JSON-compatible JavaScript value</a>, given <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p>Return ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-call\" id=\"ref-for-sec-call③\">Call</a>(<a data-link-type=\"dfn\" href=\"https://tc39.github.io/ecma262/#sec-json.stringify\" id=\"ref-for-sec-json.stringify②\">%JSON.stringify%</a>, undefined, « <var>jsValue</var> »).\n\n  </p>"
        }
      ]
    },
    {
      "name": "serialize an Infra value to JSON bytes",
      "href": "https://infra.spec.whatwg.org/#serialize-an-infra-value-to-json-bytes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-an-infra-value-to-json-bytes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize an Infra value to JSON bytes</dfn>, given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⑥\">string</a>,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#boolean\" id=\"ref-for-boolean④\">boolean</a>, number, null, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥①\">list</a>, or <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⑦\">string</a>-keyed <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map②⑨\">map</a> <var>value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>string</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#serialize-an-infra-value-to-a-json-string\" id=\"ref-for-serialize-an-infra-value-to-a-json-string\">serializing an Infra value to a JSON string</a>, given\n <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://encoding.spec.whatwg.org/#utf-8-encode\" id=\"ref-for-utf-8-encode④\">UTF-8 encode</a> on <var>string</var>. <a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-encoding\" title=\"Encoding Standard\">[ENCODING]</a>\n</p>"
        }
      ]
    },
    {
      "name": "convert an Infra value to a JSON-compatible JavaScript value",
      "href": "https://infra.spec.whatwg.org/#convert-an-infra-value-to-a-json-compatible-javascript-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"convert-an-infra-value-to-a-json-compatible-javascript-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert an Infra value to a JSON-compatible JavaScript value</dfn>, given <var>value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>value</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⑧\">string</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#boolean\" id=\"ref-for-boolean⑤\">boolean</a>, number, or null, then return <var>value</var>.\n\n </p>"
        },
        {
          "html": "If <var>value</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥②\">list</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>jsValue</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-arraycreate\" id=\"ref-for-sec-arraycreate\">ArrayCreate</a>(0).\n\n   </p>"
            },
            {
              "html": "<p>Let <var>i</var> be 0.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⓪\">For each</a> <var>listItem</var> of <var>value</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>listItemJSValue</var> be the result of\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-an-infra-value-to-a-json-compatible-javascript-value\" id=\"ref-for-convert-an-infra-value-to-a-json-compatible-javascript-value①\">converting an Infra value to a JSON-compatible JavaScript value</a>, given <var>listItem</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Perform ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a>(<var>jsValue</var>, ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-tostring\" id=\"ref-for-sec-tostring①\">ToString</a>(<var>i</var>),\n     <var>listItemJSValue</var>).\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>i</var> to <var>i</var> + 1.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Return <var>jsValue</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Assert: <var>value</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map③⓪\">map</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>jsValue</var> be ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a>(null).\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②①\">For each</a> <var>mapKey</var> → <var>mapValue</var> of <var>value</var>:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: <var>mapKey</var> is a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string⑦⑨\">string</a>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>mapValueJSValue</var> be the result of\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#convert-an-infra-value-to-a-json-compatible-javascript-value\" id=\"ref-for-convert-an-infra-value-to-a-json-compatible-javascript-value②\">converting an Infra value to a JSON-compatible JavaScript value</a>, given <var>mapValue</var>.\n\n   </p>"
            },
            {
              "html": "<p>Perform ! <a data-link-type=\"abstract-op\" href=\"https://tc39.github.io/ecma262/#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①\">CreateDataPropertyOrThrow</a>(<var>jsValue</var>, <var>mapKey</var>, <var>mapValueJSValue</var>).\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>jsValue</var>.\n</p>"
        }
      ]
    },
    {
      "name": "forgiving-base64 encode",
      "href": "https://infra.spec.whatwg.org/#forgiving-base64-encode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"forgiving-base64-encode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">forgiving-base64 encode</dfn> given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence②①\">byte sequence</a> <var>data</var>, apply\nthe base64 algorithm defined in section 4 of RFC 4648 to <var>data</var> and return the result.\n<a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-rfc4648\" title=\"The Base16, Base32, and Base64 Data Encodings\">[RFC4648]</a>",
      "rationale": "To <dfn>"
    },
    {
      "name": "forgiving-base64 decode",
      "href": "https://infra.spec.whatwg.org/#forgiving-base64-decode",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"forgiving-base64-decode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">forgiving-base64 decode</dfn> given a string <var>data</var>, run these steps:",
      "rationale": "remove",
      "steps": [
        {
          "html": "<p>Remove all <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace⑦\">ASCII whitespace</a> from <var>data</var>.\n\n </p>"
        },
        {
          "html": "If <var>data</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-code-point-length\" id=\"ref-for-string-code-point-length④\">code point length</a> divides by 4 leaving no remainder:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>data</var> ends with one or two U+003D (=) <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤③\">code points</a>, then remove them\n   from <var>data</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>If <var>data</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-code-point-length\" id=\"ref-for-string-code-point-length⑤\">code point length</a> divides by 4 leaving a remainder of\n 1, then return failure.\n\n </p>"
        },
        {
          "html": "<p>If <var>data</var> contains a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤④\">code point</a> that is not one of\n\n  </p>\n     <ul class=\"brief\">\n      <li>U+002B (+)\n   \n      </li><li>U+002F (/)\n   \n      </li><li><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-alphanumeric\" id=\"ref-for-ascii-alphanumeric\">ASCII alphanumeric</a>\n  \n     </li></ul>\n     <p>then return failure.\n\n </p>"
        },
        {
          "html": "<p>Let <var>output</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence②②\">byte sequence</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>buffer</var> be an empty buffer that can have bits appended to it.\n\n </p>"
        },
        {
          "html": "<p>Let <var>position</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-position-variable\" id=\"ref-for-string-position-variable⑤\">position variable</a> for <var>data</var>, initially\n pointing at the start of <var>data</var>.\n\n </p>"
        },
        {
          "html": "While <var>position</var> does not point past the end of <var>data</var>:",
          "rationale": "find",
          "steps": [
            {
              "html": "<p>Find the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point⑤⑤\">code point</a> pointed to by <var>position</var> in the second column of\n   Table 1: The Base 64 Alphabet of RFC 4648. Let <var>n</var> be the number given in the first cell\n   of the same row. <a data-link-type=\"biblio\" href=\"https://infra.spec.whatwg.org/#biblio-rfc4648\" title=\"The Base16, Base32, and Base64 Data Encodings\">[RFC4648]</a>\n\n   </p>"
            },
            {
              "html": "<p>Append the six bits corresponding to <var>n</var>, most significant bit first, to\n   <var>buffer</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>buffer</var> has accumulated 24 bits, interpret them as three 8-bit big-endian\n   numbers. Append three bytes with values equal to those numbers to <var>output</var>, in the same\n   order, and then empty <var>buffer</var>.\n\n   </p>"
            },
            {
              "html": "<p>Advance <var>position</var> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>If <var>buffer</var> is not empty, it contains either 12 or 18 bits. If it contains 12 bits,\n  then discard the last four and interpret the remaining eight as an 8-bit big-endian number. If it\n  contains 18 bits, then discard the last two and interpret the remaining 16 as two 8-bit big-endian\n  numbers. Append the one or two bytes with values equal to those one or two numbers to\n  <var>output</var>, in the same order.</p>"
        },
        {
          "html": "<p>Return <var>output</var>.\n</p>"
        }
      ]
    }
  ]
}