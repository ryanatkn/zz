{
  "spec": {
    "title": "WebCodecs",
    "url": "https://w3c.github.io/webcodecs/"
  },
  "algorithms": [
    {
      "name": "Process the control message queue",
      "href": "https://w3c.github.io/webcodecs/#process-the-control-message-queue",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"process-the-control-message-queue\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Process the control message queue</dfn>, run these steps:",
      "rationale": "while",
      "steps": [
        {
          "html": "While <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#message-queue-blocked\" id=\"ref-for-message-queue-blocked①\">[[message queue blocked]]</a> is <code>false</code> and\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message-queue-slot\" id=\"ref-for-control-message-queue-slot①\">[[control message queue]]</a> is not empty:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>front message</var> be the first message in\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message-queue-slot\" id=\"ref-for-control-message-queue-slot②\">[[control message queue]]</a>.</p>"
            },
            {
              "html": "<p>Let <var>outcome</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message\">control message steps</a>\ndescribed by <var>front message</var>.</p>"
            },
            {
              "html": "<p>If <var>outcome</var> equals <code>\"not processed\"</code>, break.</p>"
            },
            {
              "html": "<p>Otherwise, dequeue <var>front message</var> from the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message-queue-slot\" id=\"ref-for-control-message-queue-slot③\">[[control message queue]]</a>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "codec task source",
      "href": "https://w3c.github.io/webcodecs/#codec-task-source",
      "html": "Each <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec⑥\">codec</a> instance has a unique <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"codec-task-source\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">codec task source</dfn>. Tasks\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queued</a> from the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-work-queue\" id=\"ref-for-codec-work-queue①\">[[codec work queue]]</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop\" id=\"ref-for-event-loop\">event loop</a>\nwill use the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-task-source\" id=\"ref-for-codec-task-source\">codec task source</a>.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let d be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodecoder\" id=\"ref-for-audiodecoder②\">AudioDecoder</a></code> object.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue②\">queue</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-control-message-queue-slot\" id=\"ref-for-dom-audiodecoder-control-message-queue-slot①\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-audiodecoder-message-queue-blocked-slot\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot②\">[[codec implementation]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue③\">parallel queue</a> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-work-queue-slot\" id=\"ref-for-dom-audiodecoder-codec-work-queue-slot\">[[codec work queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-saturated-slot\" id=\"ref-for-dom-audiodecoder-codec-saturated-slot\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.output to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-output-callback-slot\" id=\"ref-for-dom-audiodecoder-output-callback-slot\">[[output callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.error to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-error-callback-slot\" id=\"ref-for-dom-audiodecoder-error-callback-slot\">[[error callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-key-chunk-required-slot\" id=\"ref-for-dom-audiodecoder-key-chunk-required-slot\">[[key chunk required]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>\"unconfigured\"</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot\">[[state]]</a></code></p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-decodequeuesize-slot\" id=\"ref-for-dom-audiodecoder-decodequeuesize-slot\">[[decodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-audiodecoder-pending-flush-promises-slot\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audiodecoder-dequeue-event-scheduled-slot\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<p>Return d.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-configure",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-audiodecoderconfig\" id=\"ref-for-valid-audiodecoderconfig\">valid AudioDecoderConfig</a>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot②\">[[state]]</a></code> is <code>“closed”</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot③\">[[state]]</a></code> to <code>\"configured\"</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-key-chunk-required-slot\" id=\"ref-for-dom-audiodecoder-key-chunk-required-slot①\">[[key chunk required]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①\">Queue a control message</a> to configure the decoder with <var>config</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-configure",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①\">Running a control message</a> to configure the decoder means running\n    these steps:",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-audiodecoder-message-queue-blocked-slot①\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "Enqueue the following steps to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-work-queue-slot\" id=\"ref-for-dom-audiodecoder-codec-work-queue-slot①\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support\">Check Configuration\nSupport</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<p>If <var>supported</var> is <code>false</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①\">queue a task</a> to run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-audiodecoder\" id=\"ref-for-close-audiodecoder\">Close\nAudioDecoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①\">NotSupportedError</a></code> and abort\nthese steps.</p>"
            },
            {
              "html": "<p>If needed, assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot③\">[[codec implementation]]</a></code> with an\nimplementation supporting <var>config</var>.</p>"
            },
            {
              "html": "<p>Configure <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot④\">[[codec implementation]]</a></code> with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②\">queue a task</a> to run the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-audiodecoder-message-queue-blocked-slot②\">[[message queue blocked]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③\">Queue a task</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②\">Process the control message queue</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/decode(chunk)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-decode",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot④\">[[state]]</a></code> is not <code>\"configured\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-key-chunk-required-slot\" id=\"ref-for-dom-audiodecoder-key-chunk-required-slot②\">[[key chunk required]]</a></code> is <code>true</code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>chunk</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-type-slot\" id=\"ref-for-dom-encodedaudiochunk-type-slot①\">[[type]]</a></code> is not\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunktype-key\" id=\"ref-for-dom-encodedaudiochunktype-key\">key</a></code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror\">DataError</a></code>.</p>"
            },
            {
              "html": "<p>Implementers <em class=\"rfc2119\">SHOULD</em> inspect the <var>chunk</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-internal-data-slot\" id=\"ref-for-dom-encodedaudiochunk-internal-data-slot\">[[internal data]]</a></code> to verify that\nit is truly a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#key-chunk\" id=\"ref-for-key-chunk①\">key chunk</a>. If a mismatch is detected, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror①\">DataError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, assign <code>false</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-key-chunk-required-slot\" id=\"ref-for-dom-audiodecoder-key-chunk-required-slot③\">[[key chunk required]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Increment <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-decodequeuesize-slot\" id=\"ref-for-dom-audiodecoder-decodequeuesize-slot②\">[[decodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message③\">Queue a control message</a> to decode the <var>chunk</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue③\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/decode(chunk)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-decode",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message②\">Running a control message</a> to decode the chunk means performing these\n    steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-saturated-slot\" id=\"ref-for-dom-audiodecoder-codec-saturated-slot①\">[[codec saturated]]</a></code> equals <code>true</code>, return <code>\"not         processed\"</code>.</p>"
        },
        {
          "html": "<p>If decoding chunk will cause the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot⑤\">[[codec implementation]]</a></code> to become <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated\">saturated</a>,\nassign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-saturated-slot\" id=\"ref-for-dom-audiodecoder-codec-saturated-slot②\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Decrement <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-decodequeuesize-slot\" id=\"ref-for-dom-audiodecoder-decodequeuesize-slot③\">[[decodeQueueSize]]</a></code> and run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#audiodecoder-schedule-dequeue-event\" id=\"ref-for-audiodecoder-schedule-dequeue-event\">Schedule Dequeue Event</a> algorithm.</p>"
        },
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-work-queue-slot\" id=\"ref-for-dom-audiodecoder-codec-work-queue-slot②\">[[codec work queue]]</a></code>:",
          "rationale": "attempt",
          "steps": [
            {
              "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot⑥\">[[codec implementation]]</a></code> to decode\nthe chunk.</p>"
            },
            {
              "html": "<p>If decoding results in an error, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-audiodecoder\" id=\"ref-for-close-audiodecoder①\">Close AudioDecoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#encodingerror\" id=\"ref-for-encodingerror\">EncodingError</a></code> and return.</p>"
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-saturated-slot\" id=\"ref-for-dom-audiodecoder-codec-saturated-slot③\">[[codec saturated]]</a></code> equals <code>true</code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot⑦\">[[codec implementation]]</a></code> is no longer\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated①\">saturated</a>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task⑤\">queue a task</a> to perform the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-saturated-slot\" id=\"ref-for-dom-audiodecoder-codec-saturated-slot④\">[[codec saturated]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue④\">Process the control message queue</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>decoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①\">list</a> of decoded audio data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot⑧\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<p>If <var>decoded outputs</var> is not empty, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task⑥\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-audiodata\" id=\"ref-for-output-audiodata\">Output AudioData</a> algorithm with <var>decoded outputs</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-flush",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot⑤\">[[state]]</a></code> is not <code>\"configured\"</code>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-key-chunk-required-slot\" id=\"ref-for-dom-audiodecoder-key-chunk-required-slot④\">[[key chunk required]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-audiodecoder-pending-flush-promises-slot①\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message④\">Queue a control message</a> to flush the codec with <var>promise</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue⑤\">Process the control message queue</a>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-flush",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message③\">Running a control message</a> to flush the codec means performing these\n    steps with <var>promise</var>.",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-work-queue-slot\" id=\"ref-for-dom-audiodecoder-codec-work-queue-slot③\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot⑨\">[[codec implementation]]</a></code> to emit all\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#internal-pending-output\" id=\"ref-for-internal-pending-output\">internal pending outputs</a>.</p>"
            },
            {
              "html": "<p>Let <var>decoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②\">list</a> of decoded audio data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot①⓪\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task⑦\">Queue a task</a> to perform these steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>decoded outputs</var> is not empty, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-audiodata\" id=\"ref-for-output-audiodata①\">Output AudioData</a>\nalgorithm with <var>decoded outputs</var>.</p>"
                },
                {
                  "html": "<p>Remove <var>promise</var> from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-audiodecoder-pending-flush-promises-slot②\">[[pending flush promises]]</a></code>.</p>"
                },
                {
                  "html": "<p>Resolve <var>promise</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/isConfigSupported(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodecoder-isconfigsupported",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-audiodecoderconfig\" id=\"ref-for-valid-audiodecoderconfig①\">valid AudioDecoderConfig</a>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with①\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Let <var>checkSupportQueue</var> be the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue④\">parallel\nqueue</a>.</p>"
        },
        {
          "html": "Enqueue the following steps to <var>checkSupportQueue</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support①\">Check Configuration Support</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task⑧\">Queue a task</a> to run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>decoderSupport</var> be a newly constructed\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audiodecodersupport\" id=\"ref-for-dictdef-audiodecodersupport②\">AudioDecoderSupport</a></code>, initialized as follows:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecodersupport-config\" id=\"ref-for-dom-audiodecodersupport-config②\">config</a></code> to the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration\">Clone Configuration</a> algorithm with <var>config</var>.</p>"
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecodersupport-supported\" id=\"ref-for-dom-audiodecodersupport-supported\">supported</a></code> to <var>supported</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Resolve <var>p</var> with <var>decoderSupport</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioDecoder/Schedule Dequeue Event",
      "href": "https://w3c.github.io/webcodecs/#audiodecoder-schedule-dequeue-event",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audiodecoder-dequeue-event-scheduled-slot①\">[[dequeue event scheduled]]</a></code> equals <code>true</code>, return.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audiodecoder-dequeue-event-scheduled-slot②\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task⑨\">Queue a task</a> to run the following steps:",
          "rationale": "fire",
          "steps": [
            {
              "html": "<p>Fire a simple event named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#eventdef-audiodecoder-dequeue\" id=\"ref-for-eventdef-audiodecoder-dequeue②\">dequeue</a></code> at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this\">this</a>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audiodecoder-dequeue-event-scheduled-slot③\">[[dequeue event scheduled]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Output AudioData",
      "href": "https://w3c.github.io/webcodecs/#output-audiodata",
      "html": "Run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each <var>output</var> in <var>outputs</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>data</var> be an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata②\">AudioData</a></code>, initialized as follows:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached\">[[Detached]]</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource\">media resource</a> described by <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <var>resourceReference</var> be a reference to <var>resource</var>.</p>"
                },
                {
                  "html": "<p>Assign <var>resourceReference</var> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot\">[[resource reference]]</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>timestamp</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-timestamp-slot\" id=\"ref-for-dom-encodedaudiochunk-timestamp-slot\">[[timestamp]]</a></code> of the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk①\">EncodedAudioChunk</a></code> associated with <var>output</var>.</p>"
                },
                {
                  "html": "<p>Assign <var>timestamp</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-timestamp-slot\" id=\"ref-for-dom-audiodata-timestamp-slot\">[[timestamp]]</a></code>.</p>"
                },
                {
                  "html": "<p>If <var>output</var> uses a recognized <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat\">AudioSampleFormat</a></code>, assign that\nformat to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot\">[[format]]</a></code>. Otherwise, assign <code>null</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot①\">[[format]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign values to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-sample-rate-slot\" id=\"ref-for-dom-audiodata-sample-rate-slot\">[[sample rate]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-frames-slot\" id=\"ref-for-dom-audiodata-number-of-frames-slot\">[[number of frames]]</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot\">[[number of channels]]</a></code> as determined by <var>output</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-output-callback-slot\" id=\"ref-for-dom-audiodecoder-output-callback-slot①\">[[output callback]]</a></code> with <var>data</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Reset AudioDecoder",
      "href": "https://w3c.github.io/webcodecs/#reset-audiodecoder",
      "html": "Run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot⑥\">[[state]]</a></code> is <code>\"closed\"</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot⑦\">[[state]]</a></code> to <code>\"unconfigured\"</code>.</p>"
        },
        {
          "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot①①\">[[codec implementation]]</a></code> to cease producing\noutput for the previous configuration.</p>"
        },
        {
          "html": "<p>Remove all <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message\" id=\"ref-for-control-message⑤\">control messages</a> from the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-control-message-queue-slot\" id=\"ref-for-dom-audiodecoder-control-message-queue-slot②\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-decodequeuesize-slot\" id=\"ref-for-dom-audiodecoder-decodequeuesize-slot④\">[[decodeQueueSize]]</a></code> is greater than zero:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-decodequeuesize-slot\" id=\"ref-for-dom-audiodecoder-decodequeuesize-slot⑤\">[[decodeQueueSize]]</a></code> to zero.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#audiodecoder-schedule-dequeue-event\" id=\"ref-for-audiodecoder-schedule-dequeue-event①\">Schedule Dequeue Event</a> algorithm.</p>"
            }
          ]
        },
        {
          "html": "For each <var>promise</var> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-audiodecoder-pending-flush-promises-slot③\">[[pending flush promises]]</a></code>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>promise</var> with <var>exception</var>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-audiodecoder-pending-flush-promises-slot④\">[[pending flush promises]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Close AudioDecoder",
      "href": "https://w3c.github.io/webcodecs/#close-audiodecoder",
      "html": "Run these steps:",
      "rationale": "run",
      "steps": [
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#reset-audiodecoder\" id=\"ref-for-reset-audiodecoder①\">Reset AudioDecoder</a> algorithm with <var>exception</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-state-slot\" id=\"ref-for-dom-audiodecoder-state-slot⑧\">[[state]]</a></code> to <code>\"closed\"</code>.</p>"
        },
        {
          "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-codec-implementation-slot\" id=\"ref-for-dom-audiodecoder-codec-implementation-slot①②\">[[codec implementation]]</a></code> and release associated\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#system-resources\" id=\"ref-for-system-resources①\">system resources</a>.</p>"
        },
        {
          "html": "<p>If <var>exception</var> is not an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror②\">AbortError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>,\ninvoke the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoder-error-callback-slot\" id=\"ref-for-dom-audiodecoder-error-callback-slot①\">[[error callback]]</a></code> with <var>exception</var>.</p>"
        }
      ]
    },
    {
      "name": "codec task source",
      "href": "https://w3c.github.io/webcodecs/#codec-task-source",
      "html": "Each <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec⑥\">codec</a> instance has a unique <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"codec-task-source\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">codec task source</dfn>. Tasks\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queued</a> from the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-work-queue\" id=\"ref-for-codec-work-queue①\">[[codec work queue]]</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop\" id=\"ref-for-event-loop\">event loop</a>\nwill use the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-task-source\" id=\"ref-for-codec-task-source\">codec task source</a>.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let d be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videodecoder\" id=\"ref-for-videodecoder②\">VideoDecoder</a></code> object.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue④\">queue</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-control-message-queue-slot\" id=\"ref-for-dom-videodecoder-control-message-queue-slot①\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-videodecoder-message-queue-blocked-slot\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot②\">[[codec implementation]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue⑥\">parallel queue</a> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-work-queue-slot\" id=\"ref-for-dom-videodecoder-codec-work-queue-slot\">[[codec work queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-saturated-slot\" id=\"ref-for-dom-videodecoder-codec-saturated-slot\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.output to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-output-callback-slot\" id=\"ref-for-dom-videodecoder-output-callback-slot\">[[output callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.error to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-error-callback-slot\" id=\"ref-for-dom-videodecoder-error-callback-slot\">[[error callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-active-decoder-config-slot\" id=\"ref-for-dom-videodecoder-active-decoder-config-slot\">[[active decoder config]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-key-chunk-required-slot\" id=\"ref-for-dom-videodecoder-key-chunk-required-slot\">[[key chunk required]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>\"unconfigured\"</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state-slot\" id=\"ref-for-dom-videodecoder-state-slot\">[[state]]</a></code></p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-decodequeuesize-slot\" id=\"ref-for-dom-videodecoder-decodequeuesize-slot\">[[decodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-videodecoder-pending-flush-promises-slot\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videodecoder-dequeue-event-scheduled-slot\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<p>Return d.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-configure",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-videodecoderconfig\" id=\"ref-for-valid-videodecoderconfig\">valid VideoDecoderConfig</a>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state-slot\" id=\"ref-for-dom-videodecoder-state-slot②\">[[state]]</a></code> is <code>“closed”</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state-slot\" id=\"ref-for-dom-videodecoder-state-slot③\">[[state]]</a></code> to <code>\"configured\"</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-key-chunk-required-slot\" id=\"ref-for-dom-videodecoder-key-chunk-required-slot①\">[[key chunk required]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message⑥\">Queue a control message</a> to configure the decoder with <var>config</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue⑥\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-configure",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message④\">Running a control message</a> to configure the decoder means running\n    these steps:",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-videodecoder-message-queue-blocked-slot①\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "Enqueue the following steps to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-work-queue-slot\" id=\"ref-for-dom-videodecoder-codec-work-queue-slot①\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support②\">Check Configuration\nSupport</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<p>If <var>supported</var> is <code>false</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⓪\">queue a task</a> to run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-videodecoder\" id=\"ref-for-close-videodecoder\">Close\nVideoDecoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③\">NotSupportedError</a></code> and abort\nthese steps.</p>"
            },
            {
              "html": "<p>If needed, assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot③\">[[codec implementation]]</a></code> with an\nimplementation supporting <var>config</var>.</p>"
            },
            {
              "html": "<p>Configure <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot④\">[[codec implementation]]</a></code> with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①①\">queue a task</a> to run the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-message-queue-blocked-slot\" id=\"ref-for-dom-videodecoder-message-queue-blocked-slot②\">[[message queue blocked]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①②\">Queue a task</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue⑦\">Process the control message queue</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/decode(chunk)",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-decode",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state-slot\" id=\"ref-for-dom-videodecoder-state-slot④\">[[state]]</a></code> is not <code>\"configured\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑤\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-key-chunk-required-slot\" id=\"ref-for-dom-videodecoder-key-chunk-required-slot②\">[[key chunk required]]</a></code> is <code>true</code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>chunk</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-type\" id=\"ref-for-dom-encodedvideochunk-type①\">type</a></code> is not\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunktype-key\" id=\"ref-for-dom-encodedvideochunktype-key\">key</a></code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror②\">DataError</a></code>.</p>"
            },
            {
              "html": "<p>Implementers <em class=\"rfc2119\">SHOULD</em> inspect the <var>chunk</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-internal-data-slot\" id=\"ref-for-dom-encodedvideochunk-internal-data-slot\">[[internal data]]</a></code> to verify that\nit is truly a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#key-chunk\" id=\"ref-for-key-chunk③\">key chunk</a>. If a mismatch is detected, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror③\">DataError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, assign <code>false</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-key-chunk-required-slot\" id=\"ref-for-dom-videodecoder-key-chunk-required-slot③\">[[key chunk required]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Increment <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-decodequeuesize-slot\" id=\"ref-for-dom-videodecoder-decodequeuesize-slot②\">[[decodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message⑧\">Queue a control message</a> to decode the <var>chunk</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue⑧\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/decode(chunk)",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-decode",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message⑤\">Running a control message</a> to decode the chunk means performing these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-saturated-slot\" id=\"ref-for-dom-videodecoder-codec-saturated-slot①\">[[codec saturated]]</a></code> equals <code>true</code>, return <code>\"not         processed\"</code>.</p>"
        },
        {
          "html": "<p>If decoding chunk will cause the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot⑥\">[[codec implementation]]</a></code> to become <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated②\">saturated</a>,\nassign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-saturated-slot\" id=\"ref-for-dom-videodecoder-codec-saturated-slot②\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Decrement <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-decodequeuesize-slot\" id=\"ref-for-dom-videodecoder-decodequeuesize-slot③\">[[decodeQueueSize]]</a></code> and run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videodecoder-schedule-dequeue-event\" id=\"ref-for-videodecoder-schedule-dequeue-event\">Schedule Dequeue Event</a> algorithm.</p>"
        },
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-work-queue-slot\" id=\"ref-for-dom-videodecoder-codec-work-queue-slot②\">[[codec work queue]]</a></code>:",
          "rationale": "attempt",
          "steps": [
            {
              "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot⑦\">[[codec implementation]]</a></code> to decode\nthe chunk.</p>"
            },
            {
              "html": "<p>If decoding results in an error, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①③\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-videodecoder\" id=\"ref-for-close-videodecoder①\">Close VideoDecoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#encodingerror\" id=\"ref-for-encodingerror①\">EncodingError</a></code> and return.</p>"
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-saturated-slot\" id=\"ref-for-dom-videodecoder-codec-saturated-slot③\">[[codec saturated]]</a></code> equals <code>true</code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot⑧\">[[codec implementation]]</a></code> is no longer\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated③\">saturated</a>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①④\">queue a task</a> to perform the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-saturated-slot\" id=\"ref-for-dom-videodecoder-codec-saturated-slot④\">[[codec saturated]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue⑨\">Process the control message queue</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>decoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list④\">list</a> of decoded video data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot⑨\">[[codec implementation]]</a></code> in\npresentation order.</p>"
            },
            {
              "html": "<p>If <var>decoded outputs</var> is not empty, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⑤\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-videoframes\" id=\"ref-for-output-videoframes\">Output VideoFrame</a> algorithm with <var>decoded outputs</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-flush",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state-slot\" id=\"ref-for-dom-videodecoder-state-slot⑤\">[[state]]</a></code> is not <code>\"configured\"</code>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with②\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑥\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-key-chunk-required-slot\" id=\"ref-for-dom-videodecoder-key-chunk-required-slot④\">[[key chunk required]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-videodecoder-pending-flush-promises-slot①\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message⑨\">Queue a control message</a> to flush the codec with <var>promise</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⓪\">Process the control message queue</a>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-flush",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message⑥\">Running a control message</a> to flush the codec means performing these\n    steps with <var>promise</var>.",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-work-queue-slot\" id=\"ref-for-dom-videodecoder-codec-work-queue-slot③\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot①⓪\">[[codec implementation]]</a></code> to emit all\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#internal-pending-output\" id=\"ref-for-internal-pending-output①\">internal pending outputs</a>.</p>"
            },
            {
              "html": "<p>Let <var>decoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤\">list</a> of decoded video data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot①①\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⑥\">Queue a task</a> to perform these steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>decoded outputs</var> is not empty, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-videoframes\" id=\"ref-for-output-videoframes①\">Output VideoFrame</a>\nalgorithm with <var>decoded outputs</var>.</p>"
                },
                {
                  "html": "<p>Remove <var>promise</var> from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-videodecoder-pending-flush-promises-slot②\">[[pending flush promises]]</a></code>.</p>"
                },
                {
                  "html": "<p>Resolve <var>promise</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/isConfigSupported(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videodecoder-isconfigsupported",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-videodecoderconfig\" id=\"ref-for-valid-videodecoderconfig①\">valid VideoDecoderConfig</a>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with③\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Let <var>checkSupportQueue</var> be the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue⑦\">parallel\nqueue</a>.</p>"
        },
        {
          "html": "Enqueue the following steps to <var>checkSupportQueue</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support③\">Check Configuration Support</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⑦\">Queue a task</a> to run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>decoderSupport</var> be a newly constructed\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videodecodersupport\" id=\"ref-for-dictdef-videodecodersupport②\">VideoDecoderSupport</a></code>, initialized as follows:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecodersupport-config\" id=\"ref-for-dom-videodecodersupport-config②\">config</a></code> to the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration①\">Clone Configuration</a> algorithm with <var>config</var>.</p>"
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecodersupport-supported\" id=\"ref-for-dom-videodecodersupport-supported\">supported</a></code> to <var>supported</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Resolve <var>p</var> with <var>decoderSupport</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoDecoder/Schedule Dequeue Event",
      "href": "https://w3c.github.io/webcodecs/#videodecoder-schedule-dequeue-event",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videodecoder-dequeue-event-scheduled-slot①\">[[dequeue event scheduled]]</a></code> equals <code>true</code>, return.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videodecoder-dequeue-event-scheduled-slot②\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⑧\">Queue a task</a> to run the following steps:",
          "rationale": "fire",
          "steps": [
            {
              "html": "<p>Fire a simple event named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#eventdef-videodecoder-dequeue\" id=\"ref-for-eventdef-videodecoder-dequeue②\">dequeue</a></code> at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①\">this</a>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videodecoder-dequeue-event-scheduled-slot③\">[[dequeue event scheduled]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Output VideoFrames",
      "href": "https://w3c.github.io/webcodecs/#output-videoframes",
      "html": "Run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each <var>output</var> in <var>outputs</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>timestamp</var> and <var>duration</var> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-timestamp\" id=\"ref-for-dom-encodedvideochunk-timestamp\">timestamp</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-duration\" id=\"ref-for-dom-encodedvideochunk-duration\">duration</a></code>\nfrom the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedvideochunk\" id=\"ref-for-encodedvideochunk②\">EncodedVideoChunk</a></code> associated with <var>output</var>.</p>"
            },
            {
              "html": "<p>Let <var>displayAspectWidth</var> and <var>displayAspectHeight</var> be undefined.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectwidth\" id=\"ref-for-dom-videodecoderconfig-displayaspectwidth\">displayAspectWidth</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectheight\" id=\"ref-for-dom-videodecoderconfig-displayaspectheight\">displayAspectHeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">exist</a> in the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-active-decoder-config-slot\" id=\"ref-for-dom-videodecoder-active-decoder-config-slot①\">[[active decoder config]]</a></code>, assign their values to\n<var>displayAspectWidth</var> and <var>displayAspectHeight</var> respectively.</p>"
            },
            {
              "html": "<p>Let <var>colorSpace</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace③\">VideoColorSpace</a></code> for <var>output</var> as detected\nby the codec implementation. If no <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace④\">VideoColorSpace</a></code> is detected,\nlet <var>colorSpace</var> be <code>undefined</code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-colorspace\" id=\"ref-for-dom-videodecoderconfig-colorspace①\">colorSpace</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a> in the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-active-decoder-config-slot\" id=\"ref-for-dom-videodecoder-active-decoder-config-slot②\">[[active decoder config]]</a></code>, assign its value to\n<var>colorSpace</var>.</p>"
            },
            {
              "html": "<p>Assign the values of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-rotation\" id=\"ref-for-dom-videodecoderconfig-rotation\">rotation</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-flip\" id=\"ref-for-dom-videodecoderconfig-flip\">flip</a></code> to <var>rotation</var> and <var>flip</var> respectively.</p>"
            },
            {
              "html": "<p>Let <var>frame</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#create-a-videoframe\" id=\"ref-for-create-a-videoframe\">Create a VideoFrame</a>\nalgorithm with <var>output</var>, <var>timestamp</var>, <var>duration</var>,\n<var>displayAspectWidth</var>, <var>displayAspectHeight</var>, <var>colorSpace</var>,\n<var>rotation</var>, and <var>flip</var>.</p>"
            },
            {
              "html": "<p>Invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-output-callback-slot\" id=\"ref-for-dom-videodecoder-output-callback-slot①\">[[output callback]]</a></code> with <var>frame</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Reset VideoDecoder",
      "href": "https://w3c.github.io/webcodecs/#reset-videodecoder",
      "html": "Run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state\" id=\"ref-for-dom-videodecoder-state①\">state</a></code> is <code>\"closed\"</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑦\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state\" id=\"ref-for-dom-videodecoder-state②\">state</a></code> to <code>\"unconfigured\"</code>.</p>"
        },
        {
          "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot①②\">[[codec implementation]]</a></code> to cease producing\noutput for the previous configuration.</p>"
        },
        {
          "html": "<p>Remove all <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message\" id=\"ref-for-control-message①⓪\">control messages</a> from the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-control-message-queue-slot\" id=\"ref-for-dom-videodecoder-control-message-queue-slot②\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-decodequeuesize-slot\" id=\"ref-for-dom-videodecoder-decodequeuesize-slot④\">[[decodeQueueSize]]</a></code> is greater than zero:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-decodequeuesize-slot\" id=\"ref-for-dom-videodecoder-decodequeuesize-slot⑤\">[[decodeQueueSize]]</a></code> to zero.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videodecoder-schedule-dequeue-event\" id=\"ref-for-videodecoder-schedule-dequeue-event①\">Schedule Dequeue Event</a> algorithm.</p>"
            }
          ]
        },
        {
          "html": "For each <var>promise</var> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-videodecoder-pending-flush-promises-slot③\">[[pending flush promises]]</a></code>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>promise</var> with <var>exception</var>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-pending-flush-promises-slot\" id=\"ref-for-dom-videodecoder-pending-flush-promises-slot④\">[[pending flush promises]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Close VideoDecoder",
      "href": "https://w3c.github.io/webcodecs/#close-videodecoder",
      "html": "Run these steps:",
      "rationale": "run",
      "steps": [
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#reset-videodecoder\" id=\"ref-for-reset-videodecoder①\">Reset VideoDecoder</a> algorithm with <var>exception</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-state\" id=\"ref-for-dom-videodecoder-state③\">state</a></code> to <code>\"closed\"</code>.</p>"
        },
        {
          "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-codec-implementation-slot\" id=\"ref-for-dom-videodecoder-codec-implementation-slot①③\">[[codec implementation]]</a></code> and release associated\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#system-resources\" id=\"ref-for-system-resources③\">system resources</a>.</p>"
        },
        {
          "html": "<p>If <var>exception</var> is not an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror⑤\">AbortError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦\">DOMException</a></code>,\ninvoke the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoder-error-callback-slot\" id=\"ref-for-dom-videodecoder-error-callback-slot①\">[[error callback]]</a></code> with <var>exception</var>.</p>"
        }
      ]
    },
    {
      "name": "codec task source",
      "href": "https://w3c.github.io/webcodecs/#codec-task-source",
      "html": "Each <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec⑥\">codec</a> instance has a unique <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"codec-task-source\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">codec task source</dfn>. Tasks\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queued</a> from the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-work-queue\" id=\"ref-for-codec-work-queue①\">[[codec work queue]]</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop\" id=\"ref-for-event-loop\">event loop</a>\nwill use the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-task-source\" id=\"ref-for-codec-task-source\">codec task source</a>.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let e be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audioencoder\" id=\"ref-for-audioencoder②\">AudioEncoder</a></code> object.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue⑥\">queue</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-control-message-queue-slot\" id=\"ref-for-dom-audioencoder-control-message-queue-slot①\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-message-queue-blocked-slot\" id=\"ref-for-dom-audioencoder-message-queue-blocked-slot\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot②\">[[codec implementation]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue⑨\">parallel queue</a> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-work-queue-slot\" id=\"ref-for-dom-audioencoder-codec-work-queue-slot\">[[codec work queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-saturated-slot\" id=\"ref-for-dom-audioencoder-codec-saturated-slot\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.output to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-output-callback-slot\" id=\"ref-for-dom-audioencoder-output-callback-slot\">[[output callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.error to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-error-callback-slot\" id=\"ref-for-dom-audioencoder-error-callback-slot\">[[error callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-encoder-config-slot\" id=\"ref-for-dom-audioencoder-active-encoder-config-slot\">[[active encoder config]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-output-config-slot\" id=\"ref-for-dom-audioencoder-active-output-config-slot\">[[active output config]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>\"unconfigured\"</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot\">[[state]]</a></code></p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-encodequeuesize-slot\" id=\"ref-for-dom-audioencoder-encodequeuesize-slot\">[[encodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-pending-flush-promises-slot\" id=\"ref-for-dom-audioencoder-pending-flush-promises-slot\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audioencoder-dequeue-event-scheduled-slot\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<p>Return e.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-configure",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-audioencoderconfig\" id=\"ref-for-valid-audioencoderconfig\">valid AudioEncoderConfig</a>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot②\">[[state]]</a></code> is <code>\"closed\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑧\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot③\">[[state]]</a></code> to <code>\"configured\"</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①①\">Queue a control message</a> to configure the encoder using <var>config</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①①\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-configure",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message⑦\">Running a control message</a> to configure the encoder means performing\n    these steps:",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-message-queue-blocked-slot\" id=\"ref-for-dom-audioencoder-message-queue-blocked-slot①\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "Enqueue the following steps to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-work-queue-slot\" id=\"ref-for-dom-audioencoder-codec-work-queue-slot①\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support④\">Check Configuration\nSupport</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<p>If <var>supported</var> is <code>false</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①⑨\">queue a task</a> to run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-audioencoder\" id=\"ref-for-close-audioencoder\">Close\nAudioEncoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑤\">NotSupportedError</a></code> and abort\nthese steps.</p>"
            },
            {
              "html": "<p>If needed, assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot③\">[[codec implementation]]</a></code> with an\nimplementation supporting <var>config</var>.</p>"
            },
            {
              "html": "<p>Configure <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot④\">[[codec implementation]]</a></code> with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⓪\">queue a task</a> to run the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-message-queue-blocked-slot\" id=\"ref-for-dom-audioencoder-message-queue-blocked-slot②\">[[message queue blocked]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②①\">Queue a task</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①②\">Process the control message queue</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/encode(data)",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-encode",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the value of <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①\">[[Detached]]</a></code> internal slot\nis <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot④\">[[state]]</a></code> is not <code>\"configured\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑨\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>dataClone</var> hold the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-audiodata\" id=\"ref-for-clone-audiodata\">Clone AudioData</a>\nalgorithm with <var>data</var>.</p>"
        },
        {
          "html": "<p>Increment <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-encodequeuesize-slot\" id=\"ref-for-dom-audioencoder-encodequeuesize-slot②\">[[encodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①③\">Queue a control message</a> to encode <var>dataClone</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①③\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/encode(data)",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-encode",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message⑧\">Running a control message</a> to encode the data means performing these\n    steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-saturated-slot\" id=\"ref-for-dom-audioencoder-codec-saturated-slot①\">[[codec saturated]]</a></code> equals <code>true</code>, return <code>\"not         processed\"</code>.</p>"
        },
        {
          "html": "<p>If encoding <var>data</var> will cause the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot⑤\">[[codec implementation]]</a></code> to become <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated④\">saturated</a>,\nassign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-saturated-slot\" id=\"ref-for-dom-audioencoder-codec-saturated-slot②\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Decrement <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-encodequeuesize-slot\" id=\"ref-for-dom-audioencoder-encodequeuesize-slot③\">[[encodeQueueSize]]</a></code> and run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#audioencoder-schedule-dequeue-event\" id=\"ref-for-audioencoder-schedule-dequeue-event\">Schedule Dequeue Event</a> algorithm.</p>"
        },
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-work-queue-slot\" id=\"ref-for-dom-audioencoder-codec-work-queue-slot②\">[[codec work queue]]</a></code>:",
          "rationale": "attempt",
          "steps": [
            {
              "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot⑥\">[[codec implementation]]</a></code> to encode\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②\">media resource</a> described by <var>dataClone</var>.</p>"
            },
            {
              "html": "<p>If encoding results in an error, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②②\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-audioencoder\" id=\"ref-for-close-audioencoder①\">Close AudioEncoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#encodingerror\" id=\"ref-for-encodingerror②\">EncodingError</a></code> and return.</p>"
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-saturated-slot\" id=\"ref-for-dom-audioencoder-codec-saturated-slot③\">[[codec saturated]]</a></code> equals <code>true</code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot⑦\">[[codec implementation]]</a></code> is no longer\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated⑤\">saturated</a>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②③\">queue a task</a> to perform the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-saturated-slot\" id=\"ref-for-dom-audioencoder-codec-saturated-slot④\">[[codec saturated]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①④\">Process the control message queue</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>encoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑦\">list</a> of encoded audio data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot⑧\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<p>If <var>encoded outputs</var> is not empty, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②④\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-encodedaudiochunks\" id=\"ref-for-output-encodedaudiochunks\">Output EncodedAudioChunks</a> algorithm with <var>encoded outputs</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-flush",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot⑤\">[[state]]</a></code> is not <code>\"configured\"</code>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with④\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⓪\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-pending-flush-promises-slot\" id=\"ref-for-dom-audioencoder-pending-flush-promises-slot①\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①④\">Queue a control message</a> to flush the codec with <var>promise</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⑤\">Process the control message queue</a>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-flush",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message⑨\">Running a control message</a> to flush the codec means performing these\n    steps with <var>promise</var>.",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-work-queue-slot\" id=\"ref-for-dom-audioencoder-codec-work-queue-slot③\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot⑨\">[[codec implementation]]</a></code> to emit all\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#internal-pending-output\" id=\"ref-for-internal-pending-output②\">internal pending outputs</a>.</p>"
            },
            {
              "html": "<p>Let <var>encoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑧\">list</a> of encoded audio data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot①⓪\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⑤\">Queue a task</a> to perform these steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>encoded outputs</var> is not empty, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-encodedaudiochunks\" id=\"ref-for-output-encodedaudiochunks①\">Output EncodedAudioChunks</a> algorithm with <var>encoded outputs</var>.</p>"
                },
                {
                  "html": "<p>Remove <var>promise</var> from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-pending-flush-promises-slot\" id=\"ref-for-dom-audioencoder-pending-flush-promises-slot②\">[[pending flush promises]]</a></code>.</p>"
                },
                {
                  "html": "<p>Resolve <var>promise</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/isConfigSupported(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-audioencoder-isconfigsupported",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-audioencoderconfig\" id=\"ref-for-valid-audioencoderconfig①\">valid AudioEncoderConfig</a>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with⑤\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Let <var>checkSupportQueue</var> be the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue①⓪\">parallel\nqueue</a>.</p>"
        },
        {
          "html": "Enqueue the following steps to <var>checkSupportQueue</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support⑤\">Check Configuration Support</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⑥\">Queue a task</a> to run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>encoderSupport</var> be a newly constructed\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audioencodersupport\" id=\"ref-for-dictdef-audioencodersupport②\">AudioEncoderSupport</a></code>, initialized as follows:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencodersupport-config\" id=\"ref-for-dom-audioencodersupport-config②\">config</a></code> to the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration②\">Clone Configuration</a> algorithm with <var>config</var>.</p>"
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencodersupport-supported\" id=\"ref-for-dom-audioencodersupport-supported\">supported</a></code> to <var>supported</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Resolve <var>p</var> with <var>encoderSupport</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioEncoder/Schedule Dequeue Event",
      "href": "https://w3c.github.io/webcodecs/#audioencoder-schedule-dequeue-event",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audioencoder-dequeue-event-scheduled-slot①\">[[dequeue event scheduled]]</a></code> equals <code>true</code>, return.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audioencoder-dequeue-event-scheduled-slot②\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⑦\">Queue a task</a> to run the following steps:",
          "rationale": "fire",
          "steps": [
            {
              "html": "<p>Fire a simple event named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#eventdef-audioencoder-dequeue\" id=\"ref-for-eventdef-audioencoder-dequeue②\">dequeue</a></code> at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②\">this</a>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-audioencoder-dequeue-event-scheduled-slot③\">[[dequeue event scheduled]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Output EncodedAudioChunks",
      "href": "https://w3c.github.io/webcodecs/#output-encodedaudiochunks",
      "html": "Run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each <var>output</var> in <var>outputs</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>chunkInit</var> be an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-encodedaudiochunkinit\" id=\"ref-for-dictdef-encodedaudiochunkinit\">EncodedAudioChunkInit</a></code> with the following\nkeys:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-data\" id=\"ref-for-dom-encodedaudiochunkinit-data\">data</a></code> contain the encoded audio data\nfrom <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-type\" id=\"ref-for-dom-encodedaudiochunkinit-type\">type</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-encodedaudiochunktype\" id=\"ref-for-enumdef-encodedaudiochunktype\">EncodedAudioChunkType</a></code> of <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-timestamp\" id=\"ref-for-dom-encodedaudiochunkinit-timestamp\">timestamp</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-timestamp\" id=\"ref-for-dom-audiodata-timestamp\">timestamp</a></code> from the AudioData associated with\n<var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-duration\" id=\"ref-for-dom-encodedaudiochunkinit-duration\">duration</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-duration\" id=\"ref-for-dom-audiodata-duration\">duration</a></code> from the AudioData associated with\n<var>output</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>chunk</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk④\">EncodedAudioChunk</a></code> constructed with\n<var>chunkInit</var>.</p>"
            },
            {
              "html": "<p>Let <var>chunkMetadata</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-encodedaudiochunkmetadata\" id=\"ref-for-dictdef-encodedaudiochunkmetadata①\">EncodedAudioChunkMetadata</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>encoderConfig</var> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-encoder-config-slot\" id=\"ref-for-dom-audioencoder-active-encoder-config-slot①\">[[active encoder config]]</a></code>.</p>"
            },
            {
              "html": "Let <var>outputConfig</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audiodecoderconfig\" id=\"ref-for-dictdef-audiodecoderconfig③\">AudioDecoderConfig</a></code> that describes\n<var>output</var>. Initialize <var>outputConfig</var> as follows:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>encoderConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-codec\" id=\"ref-for-dom-audioencoderconfig-codec\">codec</a></code> to\n<var>outputConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-codec\" id=\"ref-for-dom-audiodecoderconfig-codec\">codec</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>encoderConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-samplerate\" id=\"ref-for-dom-audioencoderconfig-samplerate\">sampleRate</a></code> to\n<var>outputConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-samplerate\" id=\"ref-for-dom-audiodecoderconfig-samplerate\">sampleRate</a></code>.</p>"
                },
                {
                  "html": "<p>Assign to\n<var>encoderConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-numberofchannels\" id=\"ref-for-dom-audioencoderconfig-numberofchannels\">numberOfChannels</a></code> to\n<var>outputConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-numberofchannels\" id=\"ref-for-dom-audiodecoderconfig-numberofchannels\">numberOfChannels</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>outputConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-description\" id=\"ref-for-dom-audiodecoderconfig-description\">description</a></code> with a\nsequence of codec specific bytes as determined by the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot①①\">[[codec implementation]]</a></code>. The User Agent <em class=\"rfc2119\">MUST</em> ensure that the provided description\ncould be used to correctly decode output.</p>"
                }
              ]
            },
            {
              "html": "If <var>outputConfig</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-output-config-slot\" id=\"ref-for-dom-audioencoder-active-output-config-slot①\">[[active output config]]</a></code> are\nnot <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#equal-dictionaries\" id=\"ref-for-equal-dictionaries\">equal dictionaries</a>:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>outputConfig</var> to\n<var>chunkMetadata</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkmetadata-decoderconfig\" id=\"ref-for-dom-encodedaudiochunkmetadata-decoderconfig\">decoderConfig</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>outputConfig</var> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-output-config-slot\" id=\"ref-for-dom-audioencoder-active-output-config-slot②\">[[active output config]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-output-callback-slot\" id=\"ref-for-dom-audioencoder-output-callback-slot①\">[[output callback]]</a></code> with <var>chunk</var> and\n<var>chunkMetadata</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Reset AudioEncoder",
      "href": "https://w3c.github.io/webcodecs/#reset-audioencoder",
      "html": "Run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot⑥\">[[state]]</a></code> is <code>\"closed\"</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①①\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot⑦\">[[state]]</a></code> to <code>\"unconfigured\"</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-encoder-config-slot\" id=\"ref-for-dom-audioencoder-active-encoder-config-slot②\">[[active encoder config]]</a></code> to <code>null</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-active-output-config-slot\" id=\"ref-for-dom-audioencoder-active-output-config-slot③\">[[active output config]]</a></code> to <code>null</code>.</p>"
        },
        {
          "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot①②\">[[codec implementation]]</a></code> to cease producing\noutput for the previous configuration.</p>"
        },
        {
          "html": "<p>Remove all <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message\" id=\"ref-for-control-message①⑤\">control messages</a> from the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-control-message-queue-slot\" id=\"ref-for-dom-audioencoder-control-message-queue-slot②\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-encodequeuesize-slot\" id=\"ref-for-dom-audioencoder-encodequeuesize-slot④\">[[encodeQueueSize]]</a></code> is greater than zero:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-encodequeuesize-slot\" id=\"ref-for-dom-audioencoder-encodequeuesize-slot⑤\">[[encodeQueueSize]]</a></code> to zero.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#audioencoder-schedule-dequeue-event\" id=\"ref-for-audioencoder-schedule-dequeue-event①\">Schedule Dequeue Event</a> algorithm.</p>"
            }
          ]
        },
        {
          "html": "For each <var>promise</var> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-pending-flush-promises-slot\" id=\"ref-for-dom-audioencoder-pending-flush-promises-slot③\">[[pending flush promises]]</a></code>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>promise</var> with <var>exception</var>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-pending-flush-promises-slot\" id=\"ref-for-dom-audioencoder-pending-flush-promises-slot④\">[[pending flush promises]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Close AudioEncoder",
      "href": "https://w3c.github.io/webcodecs/#close-audioencoder",
      "html": "Run these steps:",
      "rationale": "run",
      "steps": [
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#reset-audioencoder\" id=\"ref-for-reset-audioencoder①\">Reset AudioEncoder</a> algorithm with <var>exception</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-state-slot\" id=\"ref-for-dom-audioencoder-state-slot⑧\">[[state]]</a></code> to <code>\"closed\"</code>.</p>"
        },
        {
          "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-codec-implementation-slot\" id=\"ref-for-dom-audioencoder-codec-implementation-slot①③\">[[codec implementation]]</a></code> and release associated\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#system-resources\" id=\"ref-for-system-resources⑤\">system resources</a>.</p>"
        },
        {
          "html": "<p>If <var>exception</var> is not an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror⑧\">AbortError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①①\">DOMException</a></code>,\ninvoke the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoder-error-callback-slot\" id=\"ref-for-dom-audioencoder-error-callback-slot①\">[[error callback]]</a></code> with <var>exception</var>.</p>"
        }
      ]
    },
    {
      "name": "codec task source",
      "href": "https://w3c.github.io/webcodecs/#codec-task-source",
      "html": "Each <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec⑥\">codec</a> instance has a unique <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"codec-task-source\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">codec task source</dfn>. Tasks\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queued</a> from the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-work-queue\" id=\"ref-for-codec-work-queue①\">[[codec work queue]]</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop\" id=\"ref-for-event-loop\">event loop</a>\nwill use the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-task-source\" id=\"ref-for-codec-task-source\">codec task source</a>.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let e be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoencoder\" id=\"ref-for-videoencoder②\">VideoEncoder</a></code> object.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue⑧\">queue</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-control-message-queue-slot\" id=\"ref-for-dom-videoencoder-control-message-queue-slot①\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-message-queue-blocked-slot\" id=\"ref-for-dom-videoencoder-message-queue-blocked-slot\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot②\">[[codec implementation]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue①②\">parallel queue</a> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-work-queue-slot\" id=\"ref-for-dom-videoencoder-codec-work-queue-slot\">[[codec work queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-saturated-slot\" id=\"ref-for-dom-videoencoder-codec-saturated-slot\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.output to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-output-callback-slot\" id=\"ref-for-dom-videoencoder-output-callback-slot\">[[output callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign init.error to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-error-callback-slot\" id=\"ref-for-dom-videoencoder-error-callback-slot\">[[error callback]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-encoder-config-slot\" id=\"ref-for-dom-videoencoder-active-encoder-config-slot\">[[active encoder config]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-output-config-slot\" id=\"ref-for-dom-videoencoder-active-output-config-slot\">[[active output config]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>\"unconfigured\"</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot\">[[state]]</a></code></p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-encodequeuesize-slot\" id=\"ref-for-dom-videoencoder-encodequeuesize-slot\">[[encodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑨\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-pending-flush-promises-slot\" id=\"ref-for-dom-videoencoder-pending-flush-promises-slot\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videoencoder-dequeue-event-scheduled-slot\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<p>Return e.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-configure",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-videoencoderconfig\" id=\"ref-for-valid-videoencoderconfig\">valid VideoEncoderConfig</a>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot②\">[[state]]</a></code> is <code>\"closed\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①②\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot③\">[[state]]</a></code> to <code>\"configured\"</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-orientation-slot\" id=\"ref-for-dom-videoencoder-active-orientation-slot\">[[active orientation]]</a></code> to <code>null</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①⑥\">Queue a control message</a> to configure the encoder using <var>config</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⑥\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/configure(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-configure",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①⓪\">Running a control message</a> to configure the encoder means performing\n    these steps:",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-message-queue-blocked-slot\" id=\"ref-for-dom-videoencoder-message-queue-blocked-slot①\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "Enqueue the following steps to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-work-queue-slot\" id=\"ref-for-dom-videoencoder-codec-work-queue-slot①\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support⑥\">Check Configuration\nSupport</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<p>If <var>supported</var> is <code>false</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⑧\">queue a task</a> to run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-videoencoder\" id=\"ref-for-close-videoencoder\">Close\nVideoEncoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑦\">NotSupportedError</a></code> and abort\nthese steps.</p>"
            },
            {
              "html": "<p>If needed, assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot③\">[[codec implementation]]</a></code> with an\nimplementation supporting <var>config</var>.</p>"
            },
            {
              "html": "<p>Configure <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot④\">[[codec implementation]]</a></code> with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task②⑨\">queue a task</a> to run the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-message-queue-blocked-slot\" id=\"ref-for-dom-videoencoder-message-queue-blocked-slot②\">[[message queue blocked]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⓪\">Queue a task</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⑦\">Process the control message queue</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/encode(frame, options)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-encode",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the value of <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②\">[[Detached]]</a></code> internal slot\nis <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot④\">[[state]]</a></code> is not <code>\"configured\"</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①③\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-orientation-slot\" id=\"ref-for-dom-videoencoder-active-orientation-slot①\">[[active orientation]]</a></code> is not <code>null</code> and does not match\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot①\">[[rotation]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot①\">[[flip]]</a></code> throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror④\">DataError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-orientation-slot\" id=\"ref-for-dom-videoencoder-active-orientation-slot②\">[[active orientation]]</a></code> is <code>null</code>, set it to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot②\">[[rotation]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot②\">[[flip]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>frameClone</var> hold the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-videoframe\" id=\"ref-for-clone-videoframe\">Clone VideoFrame</a>\nalgorithm with <var>frame</var>.</p>"
        },
        {
          "html": "<p>Increment <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-encodequeuesize-slot\" id=\"ref-for-dom-videoencoder-encodequeuesize-slot②\">[[encodeQueueSize]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①⑧\">Queue a control message</a> to encode <var>frameClone</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⑧\">Process the control message queue</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/encode(frame, options)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-encode",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①①\">Running a control message</a> to encode the frame means performing these\n    steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-saturated-slot\" id=\"ref-for-dom-videoencoder-codec-saturated-slot①\">[[codec saturated]]</a></code> equals <code>true</code>, return <code>\"not         processed\"</code>.</p>"
        },
        {
          "html": "<p>If encoding <var>frame</var> will cause the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot⑤\">[[codec implementation]]</a></code> to become <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated⑥\">saturated</a>,\nassign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-saturated-slot\" id=\"ref-for-dom-videoencoder-codec-saturated-slot②\">[[codec saturated]]</a></code>.</p>"
        },
        {
          "html": "<p>Decrement <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-encodequeuesize-slot\" id=\"ref-for-dom-videoencoder-encodequeuesize-slot③\">[[encodeQueueSize]]</a></code> and run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoencoder-schedule-dequeue-event\" id=\"ref-for-videoencoder-schedule-dequeue-event\">Schedule Dequeue Event</a> algorithm.</p>"
        },
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-work-queue-slot\" id=\"ref-for-dom-videoencoder-codec-work-queue-slot②\">[[codec work queue]]</a></code>:",
          "rationale": "attempt",
          "steps": [
            {
              "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot⑥\">[[codec implementation]]</a></code> to encode\nthe <var>frameClone</var> according to <var>options</var>.</p>"
            },
            {
              "html": "<p>If encoding results in an error, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③①\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-videoencoder\" id=\"ref-for-close-videoencoder①\">Close VideoEncoder</a> algorithm with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#encodingerror\" id=\"ref-for-encodingerror③\">EncodingError</a></code> and return.</p>"
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-saturated-slot\" id=\"ref-for-dom-videoencoder-codec-saturated-slot③\">[[codec saturated]]</a></code> equals <code>true</code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot⑦\">[[codec implementation]]</a></code> is no longer\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#saturated\" id=\"ref-for-saturated⑦\">saturated</a>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③②\">queue a task</a> to perform the following steps:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-saturated-slot\" id=\"ref-for-dom-videoencoder-codec-saturated-slot④\">[[codec saturated]]</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue①⑨\">Process the control message queue</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>encoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⓪\">list</a> of encoded video data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot⑧\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<p>If <var>encoded outputs</var> is not empty, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③③\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-encodedvideochunks\" id=\"ref-for-output-encodedvideochunks\">Output EncodedVideoChunks</a> algorithm with <var>encoded outputs</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-flush",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot⑤\">[[state]]</a></code> is not <code>\"configured\"</code>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with⑥\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①④\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-pending-flush-promises-slot\" id=\"ref-for-dom-videoencoder-pending-flush-promises-slot①\">[[pending flush promises]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message①⑨\">Queue a control message</a> to flush the codec with <var>promise</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②⓪\">Process the control message queue</a>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/flush()",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-flush",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①②\">Running a control message</a> to flush the codec means performing these\n    steps with <var>promise</var>:",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-work-queue-slot\" id=\"ref-for-dom-videoencoder-codec-work-queue-slot③\">[[codec work queue]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot⑨\">[[codec implementation]]</a></code> to emit all\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#internal-pending-output\" id=\"ref-for-internal-pending-output③\">internal pending outputs</a>.</p>"
            },
            {
              "html": "<p>Let <var>encoded outputs</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①①\">list</a> of encoded video data outputs\nemitted by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot①⓪\">[[codec implementation]]</a></code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③④\">Queue a task</a> to perform these steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>encoded outputs</var> is not empty, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#output-encodedvideochunks\" id=\"ref-for-output-encodedvideochunks①\">Output EncodedVideoChunks</a> algorithm with <var>encoded outputs</var>.</p>"
                },
                {
                  "html": "<p>Remove <var>promise</var> from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-pending-flush-promises-slot\" id=\"ref-for-dom-videoencoder-pending-flush-promises-slot②\">[[pending flush promises]]</a></code>.</p>"
                },
                {
                  "html": "<p>Resolve <var>promise</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/isConfigSupported(config)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoencoder-isconfigsupported",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>config</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-videoencoderconfig\" id=\"ref-for-valid-videoencoderconfig①\">valid VideoEncoderConfig</a>, return\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with⑦\">a promise rejected with</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Let <var>checkSupportQueue</var> be the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue①③\">parallel\nqueue</a>.</p>"
        },
        {
          "html": "Enqueue the following steps to <var>checkSupportQueue</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>supported</var> be the result of running\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#check-configuration-support\" id=\"ref-for-check-configuration-support⑦\">Check Configuration Support</a> algorithm with <var>config</var>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⑤\">Queue a task</a> to run the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>encoderSupport</var> be a newly constructed\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videoencodersupport\" id=\"ref-for-dictdef-videoencodersupport②\">VideoEncoderSupport</a></code>, initialized as follows:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencodersupport-config\" id=\"ref-for-dom-videoencodersupport-config②\">config</a></code> to the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration③\">Clone Configuration</a> algorithm with <var>config</var>.</p>"
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencodersupport-supported\" id=\"ref-for-dom-videoencodersupport-supported\">supported</a></code> to <var>supported</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Resolve <var>p</var> with <var>encoderSupport</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoEncoder/Schedule Dequeue Event",
      "href": "https://w3c.github.io/webcodecs/#videoencoder-schedule-dequeue-event",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videoencoder-dequeue-event-scheduled-slot①\">[[dequeue event scheduled]]</a></code> equals <code>true</code>, return.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videoencoder-dequeue-event-scheduled-slot②\">[[dequeue event scheduled]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⑥\">Queue a task</a> to run the following steps:",
          "rationale": "fire",
          "steps": [
            {
              "html": "<p>Fire a simple event named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#eventdef-videoencoder-dequeue\" id=\"ref-for-eventdef-videoencoder-dequeue②\">dequeue</a></code> at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③\">this</a>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-dequeue-event-scheduled-slot\" id=\"ref-for-dom-videoencoder-dequeue-event-scheduled-slot③\">[[dequeue event scheduled]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Output EncodedVideoChunks",
      "href": "https://w3c.github.io/webcodecs/#output-encodedvideochunks",
      "html": "Run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each <var>output</var> in <var>outputs</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>chunkInit</var> be an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-encodedvideochunkinit\" id=\"ref-for-dictdef-encodedvideochunkinit\">EncodedVideoChunkInit</a></code> with the following\nkeys:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-data\" id=\"ref-for-dom-encodedvideochunkinit-data\">data</a></code> contain the encoded video data\nfrom <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-type\" id=\"ref-for-dom-encodedvideochunkinit-type\">type</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-encodedvideochunktype\" id=\"ref-for-enumdef-encodedvideochunktype\">EncodedVideoChunkType</a></code> of <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-timestamp\" id=\"ref-for-dom-encodedvideochunkinit-timestamp\">timestamp</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot\">[[timestamp]]</a></code> from the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑥\">VideoFrame</a></code>\nassociated with <var>output</var>.</p>"
                },
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-duration\" id=\"ref-for-dom-encodedvideochunkinit-duration\">duration</a></code> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot\">[[duration]]</a></code> from the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑦\">VideoFrame</a></code> associated\nwith <var>output</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>chunk</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedvideochunk\" id=\"ref-for-encodedvideochunk⑤\">EncodedVideoChunk</a></code> constructed with\n<var>chunkInit</var>.</p>"
            },
            {
              "html": "<p>Let <var>chunkMetadata</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-encodedvideochunkmetadata\" id=\"ref-for-dictdef-encodedvideochunkmetadata①\">EncodedVideoChunkMetadata</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>encoderConfig</var> be the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-encoder-config-slot\" id=\"ref-for-dom-videoencoder-active-encoder-config-slot①\">[[active encoder config]]</a></code>.</p>"
            },
            {
              "html": "Let <var>outputConfig</var> be a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videodecoderconfig\" id=\"ref-for-dictdef-videodecoderconfig⑤\">VideoDecoderConfig</a></code> that describes\n<var>output</var>. Initialize <var>outputConfig</var> as follows:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>encoderConfig.codec</code> to <code>outputConfig.codec</code>.</p>"
                },
                {
                  "html": "<p>Assign <code>encoderConfig.width</code> to\n<code>outputConfig.codedWidth</code>.</p>"
                },
                {
                  "html": "<p>Assign <code>encoderConfig.height</code> to\n<code>outputConfig.codedHeight</code>.</p>"
                },
                {
                  "html": "<p>Assign <code>encoderConfig.displayWidth</code> to\n<code>outputConfig.displayAspectWidth</code>.</p>"
                },
                {
                  "html": "<p>Assign <code>encoderConfig.displayHeight</code> to\n<code>outputConfig.displayAspectHeight</code>.</p>"
                },
                {
                  "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot③\">[[rotation]]</a></code> from the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑧\">VideoFrame</a></code>\nassociated with <var>output</var> to <code>outputConfig.rotation</code>.</p>"
                },
                {
                  "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot③\">[[flip]]</a></code> from the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑨\">VideoFrame</a></code>\nassociated with <var>output</var> to <code>outputConfig.flip</code>.</p>"
                },
                {
                  "html": "<p>Assign the remaining keys of <code>outputConfig</code> as determined by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot①①\">[[codec implementation]]</a></code>. The User Agent\n<em class=\"rfc2119\">MUST</em> ensure that the configuration is\ncompletely described such that <var>outputConfig</var> could be used to\ncorrectly decode <var>output</var>.</p>"
                }
              ]
            },
            {
              "html": "If <var>outputConfig</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-output-config-slot\" id=\"ref-for-dom-videoencoder-active-output-config-slot①\">[[active output config]]</a></code> are\nnot <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#equal-dictionaries\" id=\"ref-for-equal-dictionaries①\">equal dictionaries</a>:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>outputConfig</var> to\n<var>chunkMetadata</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkmetadata-decoderconfig\" id=\"ref-for-dom-encodedvideochunkmetadata-decoderconfig\">decoderConfig</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>outputConfig</var> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-output-config-slot\" id=\"ref-for-dom-videoencoder-active-output-config-slot②\">[[active output config]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "If <var>encoderConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-scalabilitymode\" id=\"ref-for-dom-videoencoderconfig-scalabilitymode①\">scalabilityMode</a></code>\ndescribes multiple <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#temporal-layer\" id=\"ref-for-temporal-layer\">temporal layers</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>svc</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-svcoutputmetadata\" id=\"ref-for-dictdef-svcoutputmetadata\">SvcOutputMetadata</a></code> instance.</p>"
                },
                {
                  "html": "<p>Let <var>temporal_layer_id</var> be the zero-based index describing the\ntemporal layer for <var>output</var>.</p>"
                },
                {
                  "html": "<p>Assign <var>temporal_layer_id</var> to\n<var>svc</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-svcoutputmetadata-temporallayerid\" id=\"ref-for-dom-svcoutputmetadata-temporallayerid\">temporalLayerId</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>svc</var> to\n<var>chunkMetadata</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkmetadata-svc\" id=\"ref-for-dom-encodedvideochunkmetadata-svc\">svc</a></code>.</p>"
                }
              ]
            },
            {
              "html": "If <var>encoderConfig</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-alpha\" id=\"ref-for-dom-videoencoderconfig-alpha\">alpha</a></code> is set to <code>\"keep\"</code>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>alphaSideData</var> be the encoded alpha data in <var>output</var>.</p>"
                },
                {
                  "html": "<p>Assign <var>alphaSideData</var> to\n<var>chunkMetadata</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkmetadata-alphasidedata\" id=\"ref-for-dom-encodedvideochunkmetadata-alphasidedata\">alphaSideData</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-output-callback-slot\" id=\"ref-for-dom-videoencoder-output-callback-slot①\">[[output callback]]</a></code> with <var>chunk</var> and\n<var>chunkMetadata</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Reset VideoEncoder",
      "href": "https://w3c.github.io/webcodecs/#reset-videoencoder",
      "html": "Run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot⑥\">[[state]]</a></code> is <code>\"closed\"</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑤\">InvalidStateError</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot⑦\">[[state]]</a></code> to <code>\"unconfigured\"</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-encoder-config-slot\" id=\"ref-for-dom-videoencoder-active-encoder-config-slot②\">[[active encoder config]]</a></code> to <code>null</code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-active-output-config-slot\" id=\"ref-for-dom-videoencoder-active-output-config-slot③\">[[active output config]]</a></code> to <code>null</code>.</p>"
        },
        {
          "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot①②\">[[codec implementation]]</a></code> to cease producing\noutput for the previous configuration.</p>"
        },
        {
          "html": "<p>Remove all <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message\" id=\"ref-for-control-message②⓪\">control messages</a> from the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-control-message-queue-slot\" id=\"ref-for-dom-videoencoder-control-message-queue-slot②\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-encodequeuesize-slot\" id=\"ref-for-dom-videoencoder-encodequeuesize-slot④\">[[encodeQueueSize]]</a></code> is greater than zero:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-encodequeuesize-slot\" id=\"ref-for-dom-videoencoder-encodequeuesize-slot⑤\">[[encodeQueueSize]]</a></code> to zero.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoencoder-schedule-dequeue-event\" id=\"ref-for-videoencoder-schedule-dequeue-event①\">Schedule Dequeue Event</a> algorithm.</p>"
            }
          ]
        },
        {
          "html": "For each <var>promise</var> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-pending-flush-promises-slot\" id=\"ref-for-dom-videoencoder-pending-flush-promises-slot③\">[[pending flush promises]]</a></code>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>promise</var> with <var>exception</var>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-pending-flush-promises-slot\" id=\"ref-for-dom-videoencoder-pending-flush-promises-slot④\">[[pending flush promises]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Close VideoEncoder",
      "href": "https://w3c.github.io/webcodecs/#close-videoencoder",
      "html": "Run these steps:",
      "rationale": "run",
      "steps": [
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#reset-videoencoder\" id=\"ref-for-reset-videoencoder①\">Reset VideoEncoder</a> algorithm with <var>exception</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-state-slot\" id=\"ref-for-dom-videoencoder-state-slot⑧\">[[state]]</a></code> to <code>\"closed\"</code>.</p>"
        },
        {
          "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-codec-implementation-slot\" id=\"ref-for-dom-videoencoder-codec-implementation-slot①③\">[[codec implementation]]</a></code> and release associated\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#system-resources\" id=\"ref-for-system-resources⑦\">system resources</a>.</p>"
        },
        {
          "html": "<p>If <var>exception</var> is not an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror①①\">AbortError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑤\">DOMException</a></code>,\ninvoke the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoder-error-callback-slot\" id=\"ref-for-dom-videoencoder-error-callback-slot①\">[[error callback]]</a></code> with <var>exception</var>.</p>"
        }
      ]
    },
    {
      "name": "codec task source",
      "href": "https://w3c.github.io/webcodecs/#codec-task-source",
      "html": "Each <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec⑥\">codec</a> instance has a unique <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"codec-task-source\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">codec task source</dfn>. Tasks\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queued</a> from the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-work-queue\" id=\"ref-for-codec-work-queue①\">[[codec work queue]]</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop\" id=\"ref-for-event-loop\">event loop</a>\nwill use the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-task-source\" id=\"ref-for-codec-task-source\">codec task source</a>.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-string\" id=\"ref-for-codec-string\">codec string</a> in <var>config</var>.codec is not a\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-codec-string\" id=\"ref-for-valid-codec-string\">valid codec string</a> or is otherwise unrecognized by the User Agent,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If <var>config</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audiodecoderconfig\" id=\"ref-for-dictdef-audiodecoderconfig⑦\">AudioDecoderConfig</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videodecoderconfig\" id=\"ref-for-dictdef-videodecoderconfig⑨\">VideoDecoderConfig</a></code> and the\nUser Agent can’t provide a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec①①\">codec</a> that can decode the exact profile\n(where present), level (where present), and constraint bits (where present)\nindicated by the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-string\" id=\"ref-for-codec-string①\">codec string</a> in <var>config</var>.codec, return <code>false</code>.</p>"
        },
        {
          "html": "If <var>config</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audioencoderconfig\" id=\"ref-for-dictdef-audioencoderconfig③\">AudioEncoderConfig</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videoencoderconfig\" id=\"ref-for-dictdef-videoencoderconfig③\">VideoEncoderConfig</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-string\" id=\"ref-for-codec-string②\">codec string</a> in <var>config</var>.codec contains a profile and the\nUser Agent can’t provide a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec①②\">codec</a> that can encode the exact\nprofile indicated by <var>config</var>.codec, return <code>false</code>.</p>"
            },
            {
              "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-string\" id=\"ref-for-codec-string③\">codec string</a> in <var>config</var>.codec contains a level and the\nUser Agent can’t provide a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec①③\">codec</a> that can encode to a level less\nthan or equal to the level indicated by <var>config</var>.codec, return <code>false</code>.</p>"
            },
            {
              "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec-string\" id=\"ref-for-codec-string④\">codec string</a> in <var>config</var>.codec contains constraint bits and\nthe User Agent can’t provide a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec①④\">codec</a> that can produce an encoded\nbitstream at least as constrained as indicated by <var>config</var>.codec, return\n<code>false</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If the User Agent can provide a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#codec\" id=\"ref-for-codec①⑤\">codec</a> to support all entries of the\n<var>config</var>, including applicable default values for keys that are not\nincluded, return <code>true</code>.</p>"
        },
        {
          "html": "<p>Otherwise, return false.</p>"
        }
      ]
    },
    {
      "html": "Run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>dictType</var> be the type of dictionary <var>config</var>.</p>"
        },
        {
          "html": "<p>Let <var>clone</var> be a new empty instance of <var>dictType</var>.</p>"
        },
        {
          "html": "For each dictionary member <var>m</var> defined on <var>dictType</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>m</var> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②\">exist</a> in <var>config</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue\">continue</a>.</p>"
            },
            {
              "html": "<p>If <code>config[m]</code> is a nested dictionary, set <code>clone[m]</code> to the result of\nrecursively running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration④\">Clone Configuration</a> algorithm with\n<code>config[m]</code>.</p>"
            },
            {
              "html": "<p>Otherwise, assign a copy of <code>config[m]</code> to <code>clone[m]</code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "valid AudioDecoderConfig",
      "href": "https://w3c.github.io/webcodecs/#valid-audiodecoderconfig",
      "html": "To check if an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audiodecoderconfig\" id=\"ref-for-dictdef-audiodecoderconfig①②\">AudioDecoderConfig</a></code> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"valid-audiodecoderconfig\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid AudioDecoderConfig</dfn>,\n    run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-codec\" id=\"ref-for-dom-audiodecoderconfig-codec②\">codec</a></code> is empty after\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\" id=\"ref-for-strip-leading-and-trailing-ascii-whitespace\">stripping leading and trailing ASCII whitespace</a>,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodecoderconfig-description\" id=\"ref-for-dom-audiodecoderconfig-description③\">description</a></code> is [<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-detached\" id=\"ref-for-buffersource-detached\">detached</a>], return\n false.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "valid VideoDecoderConfig",
      "href": "https://w3c.github.io/webcodecs/#valid-videodecoderconfig",
      "html": "To check if a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videodecoderconfig\" id=\"ref-for-dictdef-videodecoderconfig①④\">VideoDecoderConfig</a></code> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"valid-videodecoderconfig\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid VideoDecoderConfig</dfn>,\nrun these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-codec\" id=\"ref-for-dom-videodecoderconfig-codec①\">codec</a></code> is empty after\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\" id=\"ref-for-strip-leading-and-trailing-ascii-whitespace①\">stripping leading and trailing ASCII whitespace</a>,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-codedwidth\" id=\"ref-for-dom-videodecoderconfig-codedwidth①\">codedWidth</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-codedheight\" id=\"ref-for-dom-videodecoderconfig-codedheight①\">codedHeight</a></code> is provided but the other isn’t,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-codedwidth\" id=\"ref-for-dom-videodecoderconfig-codedwidth②\">codedWidth</a></code> = 0 or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-codedheight\" id=\"ref-for-dom-videodecoderconfig-codedheight②\">codedHeight</a></code> = 0, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectwidth\" id=\"ref-for-dom-videodecoderconfig-displayaspectwidth②\">displayAspectWidth</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectheight\" id=\"ref-for-dom-videodecoderconfig-displayaspectheight②\">displayAspectHeight</a></code> is provided but the other isn’t,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectwidth\" id=\"ref-for-dom-videodecoderconfig-displayaspectwidth③\">displayAspectWidth</a></code> = 0 or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-displayaspectheight\" id=\"ref-for-dom-videodecoderconfig-displayaspectheight③\">displayAspectHeight</a></code> = 0, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videodecoderconfig-description\" id=\"ref-for-dom-videodecoderconfig-description②\">description</a></code> is [<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-detached\" id=\"ref-for-buffersource-detached①\">detached</a>],\nreturn false.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "valid AudioEncoderConfig",
      "href": "https://w3c.github.io/webcodecs/#valid-audioencoderconfig",
      "html": "To check if an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audioencoderconfig\" id=\"ref-for-dictdef-audioencoderconfig⑨\">AudioEncoderConfig</a></code> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-audioencoderconfig\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid AudioEncoderConfig</dfn>,\nrun these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-codec\" id=\"ref-for-dom-audioencoderconfig-codec②\">codec</a></code> is empty after\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\" id=\"ref-for-strip-leading-and-trailing-ascii-whitespace②\">stripping leading and trailing ASCII whitespace</a>,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-audioencoderconfig\" id=\"ref-for-dictdef-audioencoderconfig①⓪\">AudioEncoderConfig</a></code> has a codec-specific extension and the corresponding\nregistration in the <a data-link-type=\"biblio\" href=\"https://w3c.github.io/webcodecs/#biblio-webcodecs-codec-registry\" title=\"WebCodecs Codec Registry\">[WEBCODECS-CODEC-REGISTRY]</a> defines steps to check whether\nthe extension is a valid extension, return the result of running those steps.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-samplerate\" id=\"ref-for-dom-audioencoderconfig-samplerate②\">sampleRate</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audioencoderconfig-numberofchannels\" id=\"ref-for-dom-audioencoderconfig-numberofchannels②\">numberOfChannels</a></code> are\n equal to zero, return <code>false</code>.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "valid VideoEncoderConfig",
      "href": "https://w3c.github.io/webcodecs/#valid-videoencoderconfig",
      "html": "To check if a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videoencoderconfig\" id=\"ref-for-dictdef-videoencoderconfig⑨\">VideoEncoderConfig</a></code> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-videoencoderconfig\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid VideoEncoderConfig</dfn>,\n    run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-codec\" id=\"ref-for-dom-videoencoderconfig-codec①\">codec</a></code> is empty after\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\" id=\"ref-for-strip-leading-and-trailing-ascii-whitespace③\">stripping leading and trailing ASCII whitespace</a>,\nreturn <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-width\" id=\"ref-for-dom-videoencoderconfig-width①\">width</a></code> = 0 or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-height\" id=\"ref-for-dom-videoencoderconfig-height①\">height</a></code>\n= 0, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-displaywidth\" id=\"ref-for-dom-videoencoderconfig-displaywidth①\">displayWidth</a></code> = 0 or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoencoderconfig-displayheight\" id=\"ref-for-dom-videoencoderconfig-displayheight①\">displayHeight</a></code> = 0, return <code>false</code>.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "html": "Describes how the user agent <em class=\"rfc2119\">SHOULD</em> behave when dealing\nwith alpha channels, for a variety of different operations.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-transfer\" id=\"ref-for-dom-encodedaudiochunkinit-transfer\">transfer</a></code> contains more than one reference\n to the same <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①\">ArrayBuffer</a></code>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-transfer\" id=\"ref-for-dom-encodedaudiochunkinit-transfer①\">transfer</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached③\">[[Detached]]</a></code> internal slot is <code>true</code>,\n then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑧\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>chunk</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk⑦\">EncodedAudioChunk</a></code> object, initialized as follows",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>init.type</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-type-slot\" id=\"ref-for-dom-encodedaudiochunk-type-slot②\">[[type]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.timestamp</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-timestamp-slot\" id=\"ref-for-dom-encodedaudiochunk-timestamp-slot①\">[[timestamp]]</a></code>.</p>"
            },
            {
              "html": "<p>If <code>init.duration</code> exists, assign it to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-duration-slot\" id=\"ref-for-dom-encodedaudiochunk-duration-slot\">[[duration]]</a></code>, or assign <code>null</code> otherwise.</p>"
            },
            {
              "html": "<p>Assign <code>init.data.byteLength</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-byte-length-slot\" id=\"ref-for-dom-encodedaudiochunk-byte-length-slot\">[[byte length]]</a></code>;</p>"
            },
            {
              "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-transfer\" id=\"ref-for-dom-encodedaudiochunkinit-transfer②\">transfer</a></code> contains an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer②\">ArrayBuffer</a></code>\nreferenced by <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-data\" id=\"ref-for-dom-encodedaudiochunkinit-data①\">data</a></code> the User Agent\n<em class=\"rfc2119\">MAY</em> choose to:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③\">media resource</a> referencing sample data\n   in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-data\" id=\"ref-for-dom-encodedaudiochunkinit-data②\">data</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign a copy of <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-data\" id=\"ref-for-dom-encodedaudiochunkinit-data③\">data</a></code>\n  to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-internal-data-slot\" id=\"ref-for-dom-encodedaudiochunk-internal-data-slot②\">[[internal data]]</a></code>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunkinit-transfer\" id=\"ref-for-dom-encodedaudiochunkinit-transfer③\">transfer</a></code>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a href=\"https://tc39.es/ecma262/#sec-detacharraybuffer\">DetachArrayBuffer</a>\non <var>transferable</var></p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>chunk</var>.</p>"
        }
      ]
    },
    {
      "name": "EncodedAudioChunk/copyTo(destination)",
      "href": "https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-copyto",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-byte-length-slot\" id=\"ref-for-dom-encodedaudiochunk-byte-length-slot②\">[[byte length]]</a></code> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk⑧\">EncodedAudioChunk</a></code> is\ngreater than in <var>destination</var>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Copy the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedaudiochunk-internal-data-slot\" id=\"ref-for-dom-encodedaudiochunk-internal-data-slot③\">[[internal data]]</a></code> into <var>destination</var>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>forStorage</var> is <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror②\">DataCloneError</a></code>.</p>"
        },
        {
          "html": "<p>For each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk①⓪\">EncodedAudioChunk</a></code> internal slot in <var>value</var>, assign the value\nof each internal slot to a field in <var>serialized</var> with the same name as\nthe internal slot.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>serialized</var>, assign the value of each named field\nto the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedaudiochunk\" id=\"ref-for-encodedaudiochunk①②\">EncodedAudioChunk</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "html": "Describes how the user agent <em class=\"rfc2119\">SHOULD</em> behave when dealing\nwith alpha channels, for a variety of different operations.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-transfer\" id=\"ref-for-dom-encodedvideochunkinit-transfer\">transfer</a></code> contains more than one reference\n to the same <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer④\">ArrayBuffer</a></code>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror③\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-transfer\" id=\"ref-for-dom-encodedvideochunkinit-transfer①\">transfer</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached④\">[[Detached]]</a></code> internal slot is <code>true</code>,\n then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror④\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⓪\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>chunk</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedvideochunk\" id=\"ref-for-encodedvideochunk①⑦\">EncodedVideoChunk</a></code> object, initialized as follows",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>init.type</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-type-slot\" id=\"ref-for-dom-encodedvideochunk-type-slot\">[[type]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.timestamp</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-timestamp-slot\" id=\"ref-for-dom-encodedvideochunk-timestamp-slot\">[[timestamp]]</a></code>.</p>"
            },
            {
              "html": "<p>If duration is present in init, assign <code>init.duration</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-duration-slot\" id=\"ref-for-dom-encodedvideochunk-duration-slot\">[[duration]]</a></code>. Otherwise, assign <code>null</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-duration-slot\" id=\"ref-for-dom-encodedvideochunk-duration-slot①\">[[duration]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.data.byteLength</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-byte-length-slot\" id=\"ref-for-dom-encodedvideochunk-byte-length-slot\">[[byte length]]</a></code>;</p>"
            },
            {
              "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-transfer\" id=\"ref-for-dom-encodedvideochunkinit-transfer②\">transfer</a></code> contains an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑤\">ArrayBuffer</a></code>\nreferenced by <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-data\" id=\"ref-for-dom-encodedvideochunkinit-data①\">data</a></code> the User Agent\n<em class=\"rfc2119\">MAY</em> choose to:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource④\">media resource</a> referencing sample data\n   in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-data\" id=\"ref-for-dom-encodedvideochunkinit-data②\">data</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign a copy of <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-data\" id=\"ref-for-dom-encodedvideochunkinit-data③\">data</a></code>\n  to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-internal-data-slot\" id=\"ref-for-dom-encodedvideochunk-internal-data-slot②\">[[internal data]]</a></code>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunkinit-transfer\" id=\"ref-for-dom-encodedvideochunkinit-transfer③\">transfer</a></code>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a href=\"https://tc39.es/ecma262/#sec-detacharraybuffer\">DetachArrayBuffer</a>\non <var>transferable</var></p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>chunk</var>.</p>"
        }
      ]
    },
    {
      "name": "EncodedVideoChunk/copyTo(destination)",
      "href": "https://w3c.github.io/webcodecs/#dom-encodedvideochunk-copyto",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-byte-length-slot\" id=\"ref-for-dom-encodedvideochunk-byte-length-slot②\">[[byte length]]</a></code> is greater than\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-byte-length-slot\" id=\"ref-for-dom-encodedvideochunk-byte-length-slot③\">[[byte length]]</a></code> of <var>destination</var>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Copy the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-encodedvideochunk-internal-data-slot\" id=\"ref-for-dom-encodedvideochunk-internal-data-slot③\">[[internal data]]</a></code> into <var>destination</var>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>forStorage</var> is <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror⑤\">DataCloneError</a></code>.</p>"
        },
        {
          "html": "<p>For each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedvideochunk\" id=\"ref-for-encodedvideochunk①⑨\">EncodedVideoChunk</a></code> internal slot in <var>value</var>, assign the value\nof each internal slot to a field in <var>serialized</var> with the same name as\nthe internal slot.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>serialized</var>, assign the value of each named field\nto the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#encodedvideochunk\" id=\"ref-for-encodedvideochunk②①\">EncodedVideoChunk</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "html": "Serializing an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata①①\">AudioData</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe②⑦\">VideoFrame</a></code> effectively clones (as in\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-clone\" id=\"ref-for-dom-videoframe-clone①\">clone()</a></code>) the source object, resulting in two objects that\nreference the same <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①①\">media resource</a>. Authors <em class=\"rfc2119\">MAY</em> use\nthis facility to clone an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata①②\">AudioData</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe②⑧\">VideoFrame</a></code> to another realm\nwithout copying the underlying <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①②\">media resource</a>.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-audiodatainit\" id=\"ref-for-valid-audiodatainit\">valid AudioDataInit</a>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-transfer\" id=\"ref-for-dom-audiodatainit-transfer\">transfer</a></code> contains more than one reference\n to the same <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑦\">ArrayBuffer</a></code>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror⑥\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②①\">DOMException</a></code>.</p>"
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-transfer\" id=\"ref-for-dom-audiodatainit-transfer①\">transfer</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached⑥\">[[Detached]]</a></code> internal slot is <code>true</code>,\n then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror⑦\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②②\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>frame</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata②⓪\">AudioData</a></code> object, initialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached⑦\">[[Detached]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-format\" id=\"ref-for-dom-audiodatainit-format\">format</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot②\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-samplerate\" id=\"ref-for-dom-audiodatainit-samplerate\">sampleRate</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-sample-rate-slot\" id=\"ref-for-dom-audiodata-sample-rate-slot①\">[[sample rate]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofframes\" id=\"ref-for-dom-audiodatainit-numberofframes\">numberOfFrames</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-frames-slot\" id=\"ref-for-dom-audiodata-number-of-frames-slot①\">[[number of frames]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofchannels\" id=\"ref-for-dom-audiodatainit-numberofchannels\">numberOfChannels</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot①\">[[number of channels]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-timestamp\" id=\"ref-for-dom-audiodatainit-timestamp\">timestamp</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-timestamp-slot\" id=\"ref-for-dom-audiodata-timestamp-slot①\">[[timestamp]]</a></code>.</p>"
            },
            {
              "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-transfer\" id=\"ref-for-dom-audiodatainit-transfer②\">transfer</a></code> contains an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑧\">ArrayBuffer</a></code>\nreferenced by <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-data\" id=\"ref-for-dom-audiodatainit-data\">data</a></code> the User Agent\n<em class=\"rfc2119\">MAY</em> choose to:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①④\">media resource</a> referencing sample data\n   in <var>data</var>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>resource</var> be a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①⑤\">media resource</a> containing a copy of\n<var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-data\" id=\"ref-for-dom-audiodatainit-data①\">data</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>resourceReference</var> be a reference to <var>resource</var>.</p>"
            },
            {
              "html": "<p>Assign <var>resourceReference</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot②\">[[resource reference]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-transfer\" id=\"ref-for-dom-audiodatainit-transfer③\">transfer</a></code>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a href=\"https://tc39.es/ecma262/#sec-detacharraybuffer\">DetachArrayBuffer</a>\non <var>transferable</var></p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>frame</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioData/duration",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodata-duration",
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-duration\" id=\"ref-for-dom-audiodata-duration②\">duration</a></code> getter steps are to:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>microsecondsPerSecond</var> be <code>1,000,000</code>.</p>"
        },
        {
          "html": "<p>Let <var>durationInSeconds</var> be the result of dividing\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-frames-slot\" id=\"ref-for-dom-audiodata-number-of-frames-slot③\">[[number of frames]]</a></code> by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-sample-rate-slot\" id=\"ref-for-dom-audiodata-sample-rate-slot③\">[[sample rate]]</a></code>.</p>"
        },
        {
          "html": "<p>Return the product of <var>durationInSeconds</var> and <var>microsecondsPerSecond</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioData/allocationSize(options)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodata-allocationsize",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached⑨\">[[Detached]]</a></code> is <code>true</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑥\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>copyElementCount</var> be the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#compute-copy-element-count\" id=\"ref-for-compute-copy-element-count\">Compute Copy Element Count</a> algorithm with <var>options</var>.</p>"
        },
        {
          "html": "<p>Let <var>destFormat</var> be the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot④\">[[format]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format\">format</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exists</a>, assign\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format①\">format</a></code> to <var>destFormat</var>.</p>"
        },
        {
          "html": "<p>Let <var>bytesPerSample</var> be the number of bytes per sample, as defined by\nthe <var>destFormat</var>.</p>"
        },
        {
          "html": "<p>Return the product of multiplying <var>bytesPerSample</var> by\n<var>copyElementCount</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioData/copyTo(destination, options)",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodata-copyto",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①⓪\">[[Detached]]</a></code> is <code>true</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑦\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>copyElementCount</var> be the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#compute-copy-element-count\" id=\"ref-for-compute-copy-element-count①\">Compute Copy Element Count</a> algorithm with <var>options</var>.</p>"
        },
        {
          "html": "<p>Let <var>destFormat</var> be the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot⑤\">[[format]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format②\">format</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤\">exists</a>, assign\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format③\">format</a></code> to <var>destFormat</var>.</p>"
        },
        {
          "html": "<p>Let <var>bytesPerSample</var> be the number of bytes per sample, as defined by\nthe <var>destFormat</var>.</p>"
        },
        {
          "html": "<p>If the product of multiplying <var>bytesPerSample</var> by <var>copyElementCount</var> is\ngreater than <code>destination.byteLength</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror\">RangeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①⑥\">media resource</a> referenced by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot③\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>planeFrames</var> be the region of <var>resource</var> corresponding to\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-planeindex\" id=\"ref-for-dom-audiodatacopytooptions-planeindex\">planeIndex</a></code>.</p>"
        },
        {
          "html": "<p>Copy elements of <var>planeFrames</var> into <var>destination</var>, starting with the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#frame\" id=\"ref-for-frame②\">frame</a> positioned at <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-frameoffset\" id=\"ref-for-dom-audiodatacopytooptions-frameoffset\">frameOffset</a></code>\nand stopping after <var>copyElementCount</var> samples have been copied. If\n<var>destFormat</var> does not equal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot⑥\">[[format]]</a></code>, convert elements\nto the <var>destFormat</var> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat⑧\">AudioSampleFormat</a></code> while making the copy.</p>"
        }
      ]
    },
    {
      "name": "AudioData/clone()",
      "href": "https://w3c.github.io/webcodecs/#dom-audiodata-clone",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①①\">[[Detached]]</a></code> is <code>true</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑧\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Return the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-audiodata\" id=\"ref-for-clone-audiodata①\">Clone AudioData</a> algorithm with\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④\">this</a>.</p>"
        }
      ]
    },
    {
      "name": "Compute Copy Element Count",
      "href": "https://w3c.github.io/webcodecs/#compute-copy-element-count",
      "html": "Run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>destFormat</var> be the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot⑦\">[[format]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format④\">format</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥\">exists</a>, assign\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-format\" id=\"ref-for-dom-audiodatacopytooptions-format⑤\">format</a></code> to <var>destFormat</var>.</p>"
        },
        {
          "html": "<p>If <var>destFormat</var> describes an <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#interleaved\" id=\"ref-for-interleaved\">interleaved</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat⑨\">AudioSampleFormat</a></code> and\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-planeindex\" id=\"ref-for-dom-audiodatacopytooptions-planeindex①\">planeIndex</a></code> is greater than <code>0</code>,\nthrow a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror①\">RangeError</a></code>.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>destFormat</var> describes a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#planar\" id=\"ref-for-planar\">planar</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat①⓪\">AudioSampleFormat</a></code>\nand if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-planeindex\" id=\"ref-for-dom-audiodatacopytooptions-planeindex②\">planeIndex</a></code> is greater or\nequal to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot③\">[[number of channels]]</a></code>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror②\">RangeError</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot⑧\">[[format]]</a></code> does not equal <var>destFormat</var> and the User\nAgent does not support the requested <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat①①\">AudioSampleFormat</a></code> conversion,\nthrow a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑧\">NotSupportedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑥\">DOMException</a></code>.\nConversion to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiosampleformat-f32-planar\" id=\"ref-for-dom-audiosampleformat-f32-planar\">f32-planar</a></code> <em class=\"rfc2119\">MUST</em> always be\nsupported.</p>"
        },
        {
          "html": "<p>Let <var>frameCount</var> be the number of frames in the plane identified by\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-planeindex\" id=\"ref-for-dom-audiodatacopytooptions-planeindex③\">planeIndex</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-frameoffset\" id=\"ref-for-dom-audiodatacopytooptions-frameoffset①\">frameOffset</a></code> is greater than or\nequal to <var>frameCount</var>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror③\">RangeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>copyFrameCount</var> be the difference of subtracting\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-frameoffset\" id=\"ref-for-dom-audiodatacopytooptions-frameoffset②\">frameOffset</a></code> from <var>frameCount</var>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-framecount\" id=\"ref-for-dom-audiodatacopytooptions-framecount\">frameCount</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑦\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-framecount\" id=\"ref-for-dom-audiodatacopytooptions-framecount①\">frameCount</a></code> is greater than\n<var>copyFrameCount</var>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror④\">RangeError</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise, assign <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatacopytooptions-framecount\" id=\"ref-for-dom-audiodatacopytooptions-framecount②\">frameCount</a></code>\nto <var>copyFrameCount</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>elementCount</var> be <var>copyFrameCount</var>.</p>"
        },
        {
          "html": "<p>If <var>destFormat</var> describes an <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#interleaved\" id=\"ref-for-interleaved①\">interleaved</a>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-audiosampleformat\" id=\"ref-for-enumdef-audiosampleformat①②\">AudioSampleFormat</a></code>, multiply <var>elementCount</var> by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot④\">[[number of channels]]</a></code></p>"
        },
        {
          "html": "<p>return <var>elementCount</var>.</p>"
        }
      ]
    },
    {
      "name": "Clone AudioData",
      "href": "https://w3c.github.io/webcodecs/#clone-audiodata",
      "html": "Run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>clone</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata②⑧\">AudioData</a></code> initialized as follows:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource①⑨\">media resource</a> referenced by <var>data</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot④\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>reference</var> be a new reference to <var>resource</var>.</p>"
            },
            {
              "html": "<p>Assign <var>reference</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot⑤\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign the values of <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①②\">[[Detached]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot⑨\">[[format]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-sample-rate-slot\" id=\"ref-for-dom-audiodata-sample-rate-slot④\">[[sample rate]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-frames-slot\" id=\"ref-for-dom-audiodata-number-of-frames-slot④\">[[number of frames]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot⑤\">[[number of channels]]</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-timestamp-slot\" id=\"ref-for-dom-audiodata-timestamp-slot③\">[[timestamp]]</a></code> slots to the corresponding slots in\n<var>clone</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>clone</var>.</p>"
        }
      ]
    },
    {
      "name": "Close AudioData",
      "href": "https://w3c.github.io/webcodecs/#close-audiodata",
      "html": "Run these steps:",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>true</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①③\">[[Detached]]</a></code> internal slot.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot⑥\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-sample-rate-slot\" id=\"ref-for-dom-audiodata-sample-rate-slot⑤\">[[sample rate]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-frames-slot\" id=\"ref-for-dom-audiodata-number-of-frames-slot⑤\">[[number of frames]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-number-of-channels-slot\" id=\"ref-for-dom-audiodata-number-of-channels-slot⑥\">[[number of channels]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <var>data</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-format-slot\" id=\"ref-for-dom-audiodata-format-slot①⓪\">[[format]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "valid AudioDataInit",
      "href": "https://w3c.github.io/webcodecs/#valid-audiodatainit",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-samplerate\" id=\"ref-for-dom-audiodatainit-samplerate①\">sampleRate</a></code> less than or equal to <code>0</code>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofframes\" id=\"ref-for-dom-audiodatainit-numberofframes①\">numberOfFrames</a></code> = <code>0</code>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofchannels\" id=\"ref-for-dom-audiodatainit-numberofchannels①\">numberOfChannels</a></code> = <code>0</code>, return <code>false</code>.</p>"
        },
        {
          "html": "Verify <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-data\" id=\"ref-for-dom-audiodatainit-data②\">data</a></code> has enough data by running the following\nsteps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>totalSamples</var> be the product of multiplying\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofframes\" id=\"ref-for-dom-audiodatainit-numberofframes②\">numberOfFrames</a></code> by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-numberofchannels\" id=\"ref-for-dom-audiodatainit-numberofchannels②\">numberOfChannels</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>bytesPerSample</var> be the number of bytes per sample, as defined by\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-format\" id=\"ref-for-dom-audiodatainit-format①\">format</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>totalSize</var> be the product of multiplying <var>bytesPerSample</var> with\n<var>totalSamples</var>.</p>"
            },
            {
              "html": "<p>Let <var>dataSize</var> be the size in bytes of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodatainit-data\" id=\"ref-for-dom-audiodatainit-data③\">data</a></code>.</p>"
            },
            {
              "html": "<p>If <var>dataSize</var> is less than <var>totalSize</var>, return false.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①④\">[[Detached]]</a></code> is <code>true</code>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror⑧\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>For all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata③⓪\">AudioData</a></code> internal slots in <var>value</var>, assign the value of\neach internal slot to a field in <var>dataHolder</var> with the same name as the\ninternal slot.</p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-audiodata\" id=\"ref-for-close-audiodata①\">Close AudioData</a> algorithm with <var>value</var>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>dataHolder</var>, assign the value of each named\nfield to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata③②\">AudioData</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①⑤\">[[Detached]]</a></code> is <code>true</code>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror⑨\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>forStorage</var> is <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①⓪\">DataCloneError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②⓪\">media resource</a> referenced by\n    <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot⑦\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>newReference</var> be a new reference to <var>resource</var>.</p>"
        },
        {
          "html": "<p>Assign <var>newReference</var> to |serialized.resource reference|.</p>"
        },
        {
          "html": "<p>For all remaining <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata③④\">AudioData</a></code> internal slots (excluding\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-audiodata-resource-reference-slot\" id=\"ref-for-dom-audiodata-resource-reference-slot⑧\">[[resource reference]]</a></code>) in <var>value</var>, assign the value of\neach internal slot to a field in <var>serialized</var> with the same name as the\ninternal slot.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>serialized</var>, assign the value of each named\nfield to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#audiodata\" id=\"ref-for-audiodata③⑥\">AudioData</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/VideoFrame(image, init)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-videoframe",
      "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VideoFrame\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"VideoFrame(image, init)|constructor(image, init)|VideoFrame(image)|constructor(image)\" id=\"dom-videoframe-videoframe\" title=\"VideoFrame(image, init)\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>\n  VideoFrame(image, init)\n</code></dfn>",
      "rationale": "check",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#check-the-usability-of-the-image-argument\" id=\"ref-for-check-the-usability-of-the-image-argument\">Check the usability of the image argument</a>. If this throws an\nexception or returns <var>bad</var>, then throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑨\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>image</var> <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#the-image-argument-is-not-origin-clean\" id=\"ref-for-the-image-argument-is-not-origin-clean\">is not origin-clean</a>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>frame</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe④①\">VideoFrame</a></code>.</p>"
        },
        {
          "html": "<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://svgwg.org/svg2-draft/embedded.html#InterfaceSVGImageElement\" id=\"ref-for-InterfaceSVGImageElement\">SVGImageElement</a></code>",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-timestamp\" id=\"ref-for-dom-videoframeinit-timestamp\">timestamp</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑧\">exist</a> in\n<var>init</var>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①③\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <var>image</var>’s media data has no <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-images-3/#natural-dimensions\" id=\"ref-for-natural-dimensions\">natural dimensions</a>\n(e.g., it’s a vector graphic with no specified content size), then\nthrow an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⓪\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③①\">DOMException</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②②\">media resource</a> containing a copy of\n<var>image</var>’s media data. If this is an animated image, <var>image</var>’s\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#concept-imagebitmap-bitmap-data\" id=\"ref-for-concept-imagebitmap-bitmap-data\">bitmap data</a> <em class=\"rfc2119\">MUST</em> only be taken from the\ndefault image of the animation (the one that the format defines is\nto be used when animation is not supported or is disabled), or, if\nthere is no such image, the first frame of the animation.</p>"
            },
            {
              "html": "<p>Let <var>codedWidth</var> and <var>codedHeight</var> be the width and height of\n<var>resource</var>.</p>"
            },
            {
              "html": "<p>Let <var>baseRotation</var> and <var>baseFlip</var> describe the rotation and flip of\n<var>image</var> relative to <var>resource</var>.</p>"
            },
            {
              "html": "<p>Let <var>defaultDisplayWidth</var> and <var>defaultDisplayHeight</var> be the\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-images-3/#natural-width\" id=\"ref-for-natural-width\">natural width</a> and <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-images-3/#natural-height\" id=\"ref-for-natural-height\">natural height</a> of <var>image</var>.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-frame-with-resource\" id=\"ref-for-videoframe-initialize-frame-with-resource\">Initialize Frame With Resource</a>\nalgorithm with <var>init</var>, <var>frame</var>, <var>resource</var>, <var>codedWidth</var>,\n<var>codedHeight</var>, <var>baseRotation</var>, <var>baseFlip</var>, <var>defaultDisplayWidth</var>,\nand <var>defaultDisplayHeight</var>.</p>"
            }
          ],
          "additional": [
            {
              "html": "<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/media.html#htmlvideoelement\" id=\"ref-for-htmlvideoelement\">HTMLVideoElement</a></code>",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>image</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/media.html#dom-media-networkstate\" id=\"ref-for-dom-media-networkstate\">networkState</a></code> attribute is\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/media.html#dom-media-network_empty\" id=\"ref-for-dom-media-network_empty\">NETWORK_EMPTY</a></code>, then throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②①\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③②\">DOMException</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>currentPlaybackFrame</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe④③\">VideoFrame</a></code> at the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#current-playback-position\" id=\"ref-for-current-playback-position\">current playback position</a>.</p>"
                },
                {
                  "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-metadata\" id=\"ref-for-dom-videoframeinit-metadata\">metadata</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑨\">exist</a> in <var>init</var>,\nassign <var>currentPlaybackFrame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-metadata-slot\" id=\"ref-for-dom-videoframe-metadata-slot\">[[metadata]]</a></code> to it.</p>"
                },
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-frame-from-other-frame\" id=\"ref-for-videoframe-initialize-frame-from-other-frame\">Initialize Frame From Other Frame</a> algorithm\nwith <var>init</var>, <var>frame</var>, and <var>currentPlaybackFrame</var>.</p>"
                }
              ]
            },
            {
              "html": "<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#offscreencanvas\" id=\"ref-for-offscreencanvas\">OffscreenCanvas</a></code>",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-timestamp\" id=\"ref-for-dom-videoframeinit-timestamp①\">timestamp</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⓪\">exist</a> in\n<var>init</var>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②③\">media resource</a> containing a copy of\n<var>image</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#concept-imagebitmap-bitmap-data\" id=\"ref-for-concept-imagebitmap-bitmap-data①\">bitmap data</a>.</p>"
                },
                {
                  "html": "<p>Let <var>width</var> be <code>image.width</code> and <var>height</var> be <code>image.height</code>.</p>"
                },
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-frame-with-resource\" id=\"ref-for-videoframe-initialize-frame-with-resource①\">Initialize Frame With Resource</a>\nalgorithm with <var>init</var>, <var>frame</var>, <var>resource</var>, <var>width</var>, <var>height</var>,\n<code>0</code>, <code>false</code>, <var>width</var>, and <var>height</var>.</p>"
                }
              ]
            },
            {
              "html": "<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe④④\">VideoFrame</a></code>",
              "rationale": "run",
              "steps": [
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-frame-from-other-frame\" id=\"ref-for-videoframe-initialize-frame-from-other-frame①\">Initialize Frame From Other Frame</a> algorithm\nwith <var>init</var>, <var>frame</var>, and <var>image</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>frame</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/VideoFrame(data, init)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-videoframe-data-init",
      "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VideoFrame\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"VideoFrame(data, init)|constructor(data, init)\" id=\"dom-videoframe-videoframe-data-init\" title=\"VideoFrame(data, init)\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>\n  VideoFrame(data, init)\n</code></dfn>",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-videoframebufferinit\" id=\"ref-for-valid-videoframebufferinit\">valid VideoFrameBufferInit</a>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>defaultRect</var> be «[ \"x:\" → <code>0</code>, \"y\" → <code>0</code>,\n\"width\" → <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedwidth\" id=\"ref-for-dom-videoframebufferinit-codedwidth\">codedWidth</a></code>, \"height\" →\n    <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedwidth\" id=\"ref-for-dom-videoframebufferinit-codedwidth①\">codedWidth</a></code> ]».</p>"
        },
        {
          "html": "<p>Let <var>overrideRect</var> be <code>undefined</code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect\">visibleRect</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①①\">exists</a>, assign its\nvalue to <var>overrideRect</var>.</p>"
        },
        {
          "html": "<p>Let <var>parsedRect</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-visible-rect\" id=\"ref-for-videoframe-parse-visible-rect\">Parse Visible Rect</a> algorithm with <var>defaultRect</var>, <var>overrideRect</var>,\n    <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedwidth\" id=\"ref-for-dom-videoframebufferinit-codedwidth②\">codedWidth</a></code>,\n    <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedheight\" id=\"ref-for-dom-videoframebufferinit-codedheight\">codedHeight</a></code>, and\n    <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-format\" id=\"ref-for-dom-videoframebufferinit-format\">format</a></code>.</p>"
        },
        {
          "html": "<p>If <var>parsedRect</var> is an exception, return <var>parsedRect</var>.</p>"
        },
        {
          "html": "<p>Let <var>optLayout</var> be <code>undefined</code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-layout\" id=\"ref-for-dom-videoframebufferinit-layout\">layout</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①②\">exists</a>, assign its value\nto <var>optLayout</var>.</p>"
        },
        {
          "html": "<p>Let <var>combinedLayout</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-compute-layout-and-allocation-size\" id=\"ref-for-videoframe-compute-layout-and-allocation-size\">Compute Layout and Allocation Size</a> algorithm with <var>parsedRect</var>,\n<var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-format\" id=\"ref-for-dom-videoframebufferinit-format①\">format</a></code>, and <var>optLayout</var>.</p>"
        },
        {
          "html": "<p>If <var>combinedLayout</var> is an exception, throw <var>combinedLayout</var>.</p>"
        },
        {
          "html": "<p>If <code>data.byteLength</code> is less than <var>combinedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-allocationsize\" id=\"ref-for-combined-buffer-layout-allocationsize\">allocationSize</a>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-transfer\" id=\"ref-for-dom-videoframebufferinit-transfer\">transfer</a></code> contains more than one reference\n to the same <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①⓪\">ArrayBuffer</a></code>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①①\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③③\">DOMException</a></code>.</p>"
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-transfer\" id=\"ref-for-dom-videoframebufferinit-transfer①\">transfer</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①⑦\">[[Detached]]</a></code> internal slot is <code>true</code>,\n then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①②\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③④\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-transfer\" id=\"ref-for-dom-videoframebufferinit-transfer②\">transfer</a></code> contains an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①①\">ArrayBuffer</a></code>\nreferenced by <var>data</var> the User Agent <em class=\"rfc2119\">MAY</em> choose to:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②④\">media resource</a> referencing pixel data in\n<var>data</var>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②⑤\">media resource</a> containing a copy of <var>data</var>.\nUse <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect①\">visibleRect</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-layout\" id=\"ref-for-dom-videoframebufferinit-layout①\">layout</a></code>\nto determine where in <var>data</var> the pixels for each plane reside.</p>\n       <p>The User Agent <em class=\"rfc2119\">MAY</em> choose to allocate\n<var>resource</var> with a larger coded size and plane strides to improve memory\nalignment. Increases will be reflected by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-codedwidth\" id=\"ref-for-dom-videoframe-codedwidth①\">codedWidth</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-codedheight\" id=\"ref-for-dom-videoframe-codedheight①\">codedHeight</a></code>.  Additionally, the User Agent <em class=\"rfc2119\">MAY</em> use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect②\">visibleRect</a></code> to\ncopy only the visible rectangle.  It <em class=\"rfc2119\">MAY</em> also\nreposition the visible rectangle within <var>resource</var>. The final position\nwill be reflected by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visiblerect\" id=\"ref-for-dom-videoframe-visiblerect①\">visibleRect</a></code>.</p>"
            }
          ]
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-transfer\" id=\"ref-for-dom-videoframebufferinit-transfer③\">transfer</a></code>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a href=\"https://tc39.es/ecma262/#sec-detacharraybuffer\">DetachArrayBuffer</a>\non <var>transferable</var></p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>resourceCodedWidth</var> be the coded width of <var>resource</var>.</p>"
        },
        {
          "html": "<p>Let <var>resourceCodedHeight</var> be the coded height of <var>resource</var>.</p>"
        },
        {
          "html": "<p>Let <var>resourceVisibleLeft</var> be the left offset for the visible rectangle of\n<var>resource</var>.</p>"
        },
        {
          "html": "<p>Let <var>resourceVisibleTop</var> be the top offset for the visible rectangle of\n<var>resource</var>.</p>"
        },
        {
          "html": "Let <var>frame</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe④⑤\">VideoFrame</a></code> object initialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <var>resourceCodedWidth</var>, <var>resourceCodedHeight</var>,\n<var>resourceVisibleLeft</var>, and <var>resourceVisibleTop</var> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot\">[[coded width]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot\">[[coded height]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot①\">[[visible left]]</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot①\">[[visible top]]</a></code>\nrespectively.</p>"
            },
            {
              "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect③\">visibleRect</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①③\">exists</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>truncatedVisibleWidth</var> be the value of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect④\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width\">width</a></code> after\ntruncating.</p>"
                },
                {
                  "html": "<p>Assign <var>truncatedVisibleWidth</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot①\">[[visible width]]</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>truncatedVisibleHeight</var> be the value of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect⑤\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height\">height</a></code> after\ntruncating.</p>"
                },
                {
                  "html": "<p>Assign <var>truncatedVisibleHeight</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot①\">[[visible height]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot①\">[[coded width]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot②\">[[visible width]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot①\">[[coded height]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot②\">[[visible height]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Assign the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-rotation\" id=\"ref-for-videoframe-parse-rotation\">Parse Rotation</a> algorithm,\nwith <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-rotation\" id=\"ref-for-dom-videoframebufferinit-rotation\">rotation</a></code>, to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot④\">[[rotation]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-flip\" id=\"ref-for-dom-videoframebufferinit-flip\">flip</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot④\">[[flip]]</a></code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displaywidth\" id=\"ref-for-dom-videoframebufferinit-displaywidth\">displayWidth</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displayheight\" id=\"ref-for-dom-videoframebufferinit-displayheight\">displayHeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①④\">exist</a> in <var>init</var>, assign\nthem to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot\">[[display width]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot\">[[display height]]</a></code> respectively.</p>"
            },
            {
              "html": "Otherwise:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot⑤\">[[rotation]]</a></code> is equal to <code>0</code> or <code>180</code>:",
                  "rationale": "assign",
                  "steps": [
                    {
                      "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot③\">[[visible width]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot①\">[[display width]]</a></code>.</p>"
                    },
                    {
                      "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot③\">[[visible height]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot①\">[[display height]]</a></code>.</p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise:",
                  "rationale": "assign",
                  "steps": [
                    {
                      "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot④\">[[visible height]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot②\">[[display width]]</a></code>.</p>"
                    },
                    {
                      "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot④\">[[visible width]]</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot②\">[[display height]]</a></code>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Assign <var>init</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-timestamp\" id=\"ref-for-dom-videoframebufferinit-timestamp\">timestamp</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-duration\" id=\"ref-for-dom-videoframebufferinit-duration\">duration</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot①\">[[timestamp]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot①\">[[duration]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Let <var>colorSpace</var> be <code>undefined</code>.</p>"
            },
            {
              "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-colorspace\" id=\"ref-for-dom-videoframebufferinit-colorspace\">colorSpace</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑤\">exists</a>, assign its\nvalue to <var>colorSpace</var>.</p>"
            },
            {
              "html": "<p>Assign <var>init</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-format\" id=\"ref-for-dom-videoframebufferinit-format②\">format</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-pick-color-space\" id=\"ref-for-videoframe-pick-color-space\">Pick Color Space</a>\nalgorithm, with <var>colorSpace</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot②\">[[format]]</a></code>, to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot\">[[color space]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign the result of calling <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-copy-videoframe-metadata\" id=\"ref-for-videoframe-copy-videoframe-metadata\">Copy VideoFrame metadata</a>\nwith <var>init</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-metadata\" id=\"ref-for-dom-videoframebufferinit-metadata\">metadata</a></code> to\n<var>frame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-metadata-slot\" id=\"ref-for-dom-videoframe-metadata-slot①\">[[metadata]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>frame</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/codedRect",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-codedrect",
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-codedrect\" id=\"ref-for-dom-videoframe-codedrect①\">codedRect</a></code> getter steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached①⑨\">[[Detached]]</a></code> is <code>true</code>, return <code>null</code>.</p>"
        },
        {
          "html": "Let <var>rect</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrectreadonly\" id=\"ref-for-domrectreadonly④\">DOMRectReadOnly</a></code>, initialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>0</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-x\" id=\"ref-for-dom-domrectreadonly-x①\">x</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-y\" id=\"ref-for-dom-domrectreadonly-y①\">y</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot③\">[[coded width]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot③\">[[coded height]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-width\" id=\"ref-for-dom-domrectreadonly-width①\">width</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-height\" id=\"ref-for-dom-domrectreadonly-height①\">height</a></code> respectively.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>rect</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/visibleRect",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-visiblerect",
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visiblerect\" id=\"ref-for-dom-videoframe-visiblerect②\">visibleRect</a></code> getter steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⓪\">[[Detached]]</a></code> is <code>true</code>, return <code>null</code>.</p>"
        },
        {
          "html": "Let <var>rect</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrectreadonly\" id=\"ref-for-domrectreadonly⑦\">DOMRectReadOnly</a></code>, initialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot②\">[[visible left]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot②\">[[visible top]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot⑤\">[[visible width]]</a></code>,\nand <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot⑤\">[[visible height]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-x\" id=\"ref-for-dom-domrectreadonly-x②\">x</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-y\" id=\"ref-for-dom-domrectreadonly-y②\">y</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-width\" id=\"ref-for-dom-domrectreadonly-width②\">width</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-height\" id=\"ref-for-dom-domrectreadonly-height②\">height</a></code> respectively.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>rect</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/allocationSize(options)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-allocationsize",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②①\">[[Detached]]</a></code> is <code>true</code>, throw an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②②\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot④\">[[format]]</a></code> is <code>null</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⓪\">NotSupportedError</a></code>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>combinedLayout</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-videoframecopytooptions\" id=\"ref-for-videoframe-parse-videoframecopytooptions\">Parse VideoFrameCopyToOptions</a> algorithm with <var>options</var>.</p>"
        },
        {
          "html": "<p>If <var>combinedLayout</var> is an exception, throw <var>combinedLayout</var>.</p>"
        },
        {
          "html": "<p>Return <var>combinedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-allocationsize\" id=\"ref-for-combined-buffer-layout-allocationsize①\">allocationSize</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/copyTo(destination, options)",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-copyto",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②②\">[[Detached]]</a></code> is <code>true</code>, return a promise rejected\nwith a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②③\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot⑤\">[[format]]</a></code> is <code>null</code>, return a promise rejected with a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①①\">NotSupportedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑧\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>combinedLayout</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-videoframecopytooptions\" id=\"ref-for-videoframe-parse-videoframecopytooptions①\">Parse VideoFrameCopyToOptions</a> algorithm with <var>options</var>.</p>"
        },
        {
          "html": "<p>If <var>combinedLayout</var> is an exception, return a promise rejected with\n<var>combinedLayout</var>.</p>"
        },
        {
          "html": "<p>If <code>destination.byteLength</code> is less than <var>combinedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-allocationsize\" id=\"ref-for-combined-buffer-layout-allocationsize②\">allocationSize</a>, return a promise rejected with a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format①\">format</a></code> is equal to one of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgba\" id=\"ref-for-dom-videopixelformat-rgba\">RGBA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgbx\" id=\"ref-for-dom-videopixelformat-rgbx\">RGBX</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgra\" id=\"ref-for-dom-videopixelformat-bgra\">BGRA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgrx\" id=\"ref-for-dom-videopixelformat-bgrx\">BGRX</a></code> then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>newOptions</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-configuration\" id=\"ref-for-clone-configuration⑤\">Clone Configuration</a>\n   algorithm with <var>options</var>.</p>"
            },
            {
              "html": "<p>Assign <code>undefined</code> to <var>newOptions</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format②\">format</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>rgbFrame</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-convert-to-rgb-frame\" id=\"ref-for-videoframe-convert-to-rgb-frame\">Convert to RGB frame</a>\n   algorithm with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧\">this</a>, <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format③\">format</a></code>,\n   and <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-colorspace\" id=\"ref-for-dom-videoframecopytooptions-colorspace\">colorSpace</a></code>.</p>"
            },
            {
              "html": "<p>Return the result of calling <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-copyto\" id=\"ref-for-dom-videoframe-copyto④\">copyTo()</a></code> on <var>rgbFrame</var> with\n   <var>destination</var> and <var>newOptions</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise⑨\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>copyStepsQueue</var> be the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue①④\">parallel queue</a>.</p>"
        },
        {
          "html": "<p>Let <var>planeLayouts</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①③\">list</a>.</p>"
        },
        {
          "html": "Enqueue the following steps to <var>copyStepsQueue</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let resource be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②⑥\">media resource</a> referenced by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot①\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>numPlanes</var> be the number of planes as defined by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot⑥\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>planeIndex</var> be <code>0</code>.</p>"
            },
            {
              "html": "While <var>planeIndex</var> is less than <var>combinedLayout</var>’s <var>numPlanes</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>sourceStride</var> be the stride of the plane in <var>resource</var> as\nidentified by <var>planeIndex</var>.</p>"
                },
                {
                  "html": "<p>Let <var>computedLayout</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout\" id=\"ref-for-computed-plane-layout①\">computed plane layout</a> in\n<var>combinedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-computedlayouts\" id=\"ref-for-combined-buffer-layout-computedlayouts\">computedLayouts</a> at\nthe position of <var>planeIndex</var></p>"
                },
                {
                  "html": "<p>Let <var>sourceOffset</var> be the product of multiplying\n<var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcetop\" id=\"ref-for-computed-plane-layout-sourcetop\">sourceTop</a> by\n<var>sourceStride</var></p>"
                },
                {
                  "html": "<p>Add <var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourceleftbytes\" id=\"ref-for-computed-plane-layout-sourceleftbytes\">sourceLeftBytes</a>\nto <var>sourceOffset</var>.</p>"
                },
                {
                  "html": "<p>Let <var>destinationOffset</var> be <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset\">destinationOffset</a>.</p>"
                },
                {
                  "html": "<p>Let <var>rowBytes</var> be <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcewidthbytes\" id=\"ref-for-computed-plane-layout-sourcewidthbytes\">sourceWidthBytes</a>.</p>"
                },
                {
                  "html": "<p>Let <var>layout</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-planelayout\" id=\"ref-for-dictdef-planelayout②\">PlaneLayout</a></code>, with\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-planelayout-offset\" id=\"ref-for-dom-planelayout-offset\">offset</a></code> set to <var>destinationOffset</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-planelayout-stride\" id=\"ref-for-dom-planelayout-stride\">stride</a></code> set to <var>rowBytes</var>.</p>"
                },
                {
                  "html": "<p>Let <var>row</var> be <code>0</code>.</p>"
                },
                {
                  "html": "While <var>row</var> is less than <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourceheight\" id=\"ref-for-computed-plane-layout-sourceheight\">sourceHeight</a>:",
                  "rationale": "copy",
                  "steps": [
                    {
                      "html": "<p>Copy <var>rowBytes</var> bytes from <var>resource</var> starting at\n<var>sourceOffset</var> to <var>destination</var> starting at\n<var>destinationOffset</var>.</p>"
                    },
                    {
                      "html": "<p>Increment <var>sourceOffset</var> by <var>sourceStride</var>.</p>"
                    },
                    {
                      "html": "<p>Increment <var>destinationOffset</var> by <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationstride\" id=\"ref-for-computed-plane-layout-destinationstride\">destinationStride</a>.</p>"
                    },
                    {
                      "html": "<p>Increment <var>row</var> by <code>1</code>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Increment <var>planeIndex</var> by <code>1</code>.</p>"
                },
                {
                  "html": "<p>Append <var>layout</var> to <var>planeLayouts</var>.</p>"
                }
              ]
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⑦\">Queue a task</a> to resolve <var>p</var> with <var>planeLayouts</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/clone()",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-clone",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the value of <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②③\">[[Detached]]</a></code> internal slot is\n<code>true</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②④\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑨\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Return the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#clone-videoframe\" id=\"ref-for-clone-videoframe①\">Clone VideoFrame</a> algorithm with\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨\">this</a>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/metadata()",
      "href": "https://w3c.github.io/webcodecs/#dom-videoframe-metadata",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②④\">[[Detached]]</a></code> is <code>true</code>,\nthrow an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑤\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Return the result of calling <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-copy-videoframe-metadata\" id=\"ref-for-videoframe-copy-videoframe-metadata①\">Copy VideoFrame metadata</a>\nwith <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-metadata-slot\" id=\"ref-for-dom-videoframe-metadata-slot②\">[[metadata]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "Create a VideoFrame",
      "href": "https://w3c.github.io/webcodecs/#create-a-videoframe",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>frame</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑤④\">VideoFrame</a></code>, constructed as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⑤\">[[Detached]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource②⑨\">media resource</a> described by <var>output</var>.</p>"
            },
            {
              "html": "<p>Let <var>resourceReference</var> be a reference to <var>resource</var>.</p>"
            },
            {
              "html": "<p>Assign <var>resourceReference</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot②\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>If <var>output</var> uses a recognized <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-videopixelformat\" id=\"ref-for-enumdef-videopixelformat⑦\">VideoPixelFormat</a></code>, assign that format to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot⑦\">[[format]]</a></code>. Otherwise, assign <code>null</code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot⑧\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>codedWidth</var> and <var>codedHeight</var> be the coded width and height of the\n<var>output</var> in pixels.</p>"
            },
            {
              "html": "<p>Let <var>visibleLeft</var>, <var>visibleTop</var>, <var>visibleWidth</var>, and <var>visibleHeight</var> be\nthe left, top, width and height for the visible rectangle of <var>output</var>.</p>"
            },
            {
              "html": "<p>Let <var>displayWidth</var> and <var>displayHeight</var> be the display size of\n<var>output</var> in pixels.</p>"
            },
            {
              "html": "<p>If <var>displayAspectWidth</var> and <var>displayAspectHeight</var> are provided,\nincrease <var>displayWidth</var> or <var>displayHeight</var> until the ratio of\n<var>displayWidth</var> to <var>displayHeight</var> matches the ratio of\n<var>displayAspectWidth</var> to <var>displayAspectHeight</var>.</p>"
            },
            {
              "html": "<p>Assign <var>codedWidth</var>, <var>codedHeight</var>, <var>visibleLeft</var>, <var>visibleTop</var>,\n<var>visibleWidth</var>, <var>visibleHeight</var>, <var>displayWidth</var>, and\n<var>displayHeight</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot④\">[[coded width]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot④\">[[coded height]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot③\">[[visible left]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot③\">[[visible top]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot⑥\">[[visible width]]</a></code>,\nand <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot⑥\">[[visible height]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Assign <var>duration</var> and <var>timestamp</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot③\">[[duration]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot③\">[[timestamp]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot②\">[[color space]]</a></code> with the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-pick-color-space\" id=\"ref-for-videoframe-pick-color-space①\">Pick Color Space</a> algorithm, with <var>colorSpace</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot⑨\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation\" id=\"ref-for-dom-videoframe-rotation③\">rotation</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip\" id=\"ref-for-dom-videoframe-flip③\">flip</a></code> to <var>rotation</var>\nand <var>flip</var> respectively.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>frame</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Pick Color Space",
      "href": "https://w3c.github.io/webcodecs/#videoframe-pick-color-space",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>overrideColorSpace</var> is provided, return a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace①①\">VideoColorSpace</a></code>\nconstructed with <var>overrideColorSpace</var>.</p>\n       <p>User Agents <em class=\"rfc2119\">MAY</em> replace <code>null</code> members of the\nprovided <var>overrideColorSpace</var> with guessed values as determined by implementer\ndefined heuristics.</p>"
        },
        {
          "html": "<p>Otherwise, if <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①⓪\">[[format]]</a></code> is an <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#rgb-format\" id=\"ref-for-rgb-format\">RGB format</a> return a new\ninstance of the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#srgb-color-space\" id=\"ref-for-srgb-color-space\">sRGB Color Space</a></p>"
        },
        {
          "html": "<p>Otherwise, return a new instance of the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#rec709-color-space\" id=\"ref-for-rec709-color-space\">REC709 Color Space</a>.</p>"
        }
      ]
    },
    {
      "name": "Validate VideoFrameInit",
      "href": "https://w3c.github.io/webcodecs/#validate-videoframeinit",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect\">visibleRect</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑦\">exists</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>validAlignment</var> be the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-verify-rect-offset-alignment\" id=\"ref-for-videoframe-verify-rect-offset-alignment\">Verify Rect Offset Alignment</a> with <var>format</var> and\n<var>visibleRect</var>.</p>"
            },
            {
              "html": "<p>If <var>validAlignment</var> is <code>false</code>, return <code>false</code>.</p>"
            },
            {
              "html": "<p>If any attribute of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect①\">visibleRect</a></code> is negative or\nnot finite, return <code>false</code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect②\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width①\">width</a></code> == <code>0</code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect③\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height①\">height</a></code> == <code>0</code> return\n<code>false</code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect④\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-y\" id=\"ref-for-dom-domrectinit-y\">y</a></code> +\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect⑤\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height②\">height</a></code> &gt;\n<var>codedHeight</var>, return <code>false</code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect⑥\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-x\" id=\"ref-for-dom-domrectinit-x\">x</a></code> +\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect⑦\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width②\">width</a></code> &gt;\n<var>codedWidth</var>, return <code>false</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>codedWidth</var> = 0 or <var>codedHeight</var> = 0,return <code>false</code>.</p>"
        },
        {
          "html": "<p>If only one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displaywidth\" id=\"ref-for-dom-videoframeinit-displaywidth\">displayWidth</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displayheight\" id=\"ref-for-dom-videoframeinit-displayheight\">displayHeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑧\">exists</a>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displaywidth\" id=\"ref-for-dom-videoframeinit-displaywidth①\">displayWidth</a></code> == <code>0</code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displayheight\" id=\"ref-for-dom-videoframeinit-displayheight①\">displayHeight</a></code> == <code>0</code>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "valid VideoFrameBufferInit",
      "href": "https://w3c.github.io/webcodecs/#valid-videoframebufferinit",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedwidth\" id=\"ref-for-dom-videoframebufferinit-codedwidth③\">codedWidth</a></code> = 0 or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedheight\" id=\"ref-for-dom-videoframebufferinit-codedheight①\">codedHeight</a></code> = 0,return <code>false</code>.</p>"
        },
        {
          "html": "<p>If any attribute of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect⑥\">visibleRect</a></code> is negative or\nnot finite, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect⑦\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-y\" id=\"ref-for-dom-domrectinit-y①\">y</a></code> +\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect⑧\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height③\">height</a></code> &gt;\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedheight\" id=\"ref-for-dom-videoframebufferinit-codedheight②\">codedHeight</a></code>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect⑨\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-x\" id=\"ref-for-dom-domrectinit-x①\">x</a></code> +\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-visiblerect\" id=\"ref-for-dom-videoframebufferinit-visiblerect①⓪\">visibleRect</a></code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width③\">width</a></code> &gt;\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-codedwidth\" id=\"ref-for-dom-videoframebufferinit-codedwidth④\">codedWidth</a></code>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If only one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displaywidth\" id=\"ref-for-dom-videoframebufferinit-displaywidth①\">displayWidth</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displayheight\" id=\"ref-for-dom-videoframebufferinit-displayheight①\">displayHeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⑨\">exists</a>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displaywidth\" id=\"ref-for-dom-videoframebufferinit-displaywidth②\">displayWidth</a></code> = 0 or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframebufferinit-displayheight\" id=\"ref-for-dom-videoframebufferinit-displayheight②\">displayHeight</a></code> = 0, return <code>false</code>.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Initialize Frame From Other Frame",
      "href": "https://w3c.github.io/webcodecs/#videoframe-initialize-frame-from-other-frame",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>format</var> be <var>otherFrame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format\" id=\"ref-for-dom-videoframe-format③\">format</a></code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-alpha\" id=\"ref-for-dom-videoframeinit-alpha\">alpha</a></code> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-alphaoption-discard\" id=\"ref-for-dom-alphaoption-discard②\">discard</a></code>,\nassign <var>otherFrame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format\" id=\"ref-for-dom-videoframe-format④\">format</a></code>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#equivalent-opaque-format\" id=\"ref-for-equivalent-opaque-format\">equivalent opaque format</a>\n<var>format</var>.</p>"
        },
        {
          "html": "<p>Let <var>validInit</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#validate-videoframeinit\" id=\"ref-for-validate-videoframeinit\">Validate VideoFrameInit</a>\nalgorithm with <var>format</var> and <var>otherFrame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot⑤\">[[coded width]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot⑤\">[[coded height]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>validInit</var> is <code>false</code>, throw a  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③⓪\">media resource</a> referenced by <var>otherFrame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot③\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new reference for <var>resource</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot④\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the following attributes from <var>otherFrame</var> to <var>frame</var>:\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-codedwidth\" id=\"ref-for-dom-videoframe-codedwidth④\">codedWidth</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-codedheight\" id=\"ref-for-dom-videoframe-codedheight④\">codedHeight</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-colorspace\" id=\"ref-for-dom-videoframe-colorspace③\">colorSpace</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>defaultVisibleRect</var> be the result of performing the getter steps\nfor <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visiblerect\" id=\"ref-for-dom-videoframe-visiblerect③\">visibleRect</a></code> on <var>otherFrame</var>.</p>"
        },
        {
          "html": "<p>Let <var>baseRotation</var> and <var>baseFlip</var> be <var>otherFrame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot⑦\">[[rotation]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot⑥\">[[flip]]</a></code>, respectively.</p>"
        },
        {
          "html": "<p>Let <var>defaultDisplayWidth</var> and <var>defaultDisplayHeight</var> be <var>otherFrame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot④\">[[display width]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot④\">[[display height]]</a></code>,\nrespectively.</p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-visible-rect-orientation-and-display-size\" id=\"ref-for-videoframe-initialize-visible-rect-orientation-and-display-size\">Initialize Visible Rect, Orientation, and Display Size</a>\nalgorithm with <var>init</var>, <var>frame</var>, <var>defaultVisibleRect</var>, <var>baseRotation</var>,\n<var>baseFlip</var>, <var>defaultDisplayWidth</var>, and <var>defaultDisplayHeight</var>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-duration\" id=\"ref-for-dom-videoframeinit-duration\">duration</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⓪\">exists</a> in <var>init</var>, assign it to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot④\">[[duration]]</a></code>. Otherwise, assign\n<var>otherFrame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration\" id=\"ref-for-dom-videoframe-duration②\">duration</a></code> to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot⑤\">[[duration]]</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-timestamp\" id=\"ref-for-dom-videoframeinit-timestamp②\">timestamp</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②①\">exists</a> in <var>init</var>, assign it to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot④\">[[timestamp]]</a></code>. Otherwise, assign\n<var>otherFrame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp\" id=\"ref-for-dom-videoframe-timestamp④\">timestamp</a></code> to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot⑤\">[[timestamp]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <var>format</var> to <var>frame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①①\">[[format]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of calling <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-copy-videoframe-metadata\" id=\"ref-for-videoframe-copy-videoframe-metadata②\">Copy VideoFrame metadata</a>\nwith <var>init</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-metadata\" id=\"ref-for-dom-videoframeinit-metadata①\">metadata</a></code> to <var>frame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-metadata-slot\" id=\"ref-for-dom-videoframe-metadata-slot③\">[[metadata]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Initialize Frame With Resource",
      "href": "https://w3c.github.io/webcodecs/#videoframe-initialize-frame-with-resource",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>format</var> be <code>null</code>.</p>"
        },
        {
          "html": "<p>If <var>resource</var> uses a recognized <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-videopixelformat\" id=\"ref-for-enumdef-videopixelformat⑧\">VideoPixelFormat</a></code>, assign the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#enumdef-videopixelformat\" id=\"ref-for-enumdef-videopixelformat⑨\">VideoPixelFormat</a></code> of <var>resource</var> to <var>format</var>.</p>"
        },
        {
          "html": "<p>Let <var>validInit</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#validate-videoframeinit\" id=\"ref-for-validate-videoframeinit①\">Validate VideoFrameInit</a>\nalgorithm with <var>format</var>, <var>width</var> and <var>height</var>.</p>"
        },
        {
          "html": "<p>If <var>validInit</var> is <code>false</code>, throw a  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new reference for <var>resource</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot⑤\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-alpha\" id=\"ref-for-dom-videoframeinit-alpha①\">alpha</a></code> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-alphaoption-discard\" id=\"ref-for-dom-alphaoption-discard③\">discard</a></code>, assign\n<var>format</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#equivalent-opaque-format\" id=\"ref-for-equivalent-opaque-format①\">equivalent opaque format</a> to <var>format</var>.</p>"
        },
        {
          "html": "<p>Assign <var>format</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①②\">[[format]]</a></code></p>"
        },
        {
          "html": "<p>Assign <var>codedWidth</var> and <var>codedHeight</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot⑥\">[[coded width]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot⑥\">[[coded height]]</a></code>\nrespectively.</p>"
        },
        {
          "html": "<p>Let <var>defaultVisibleRect</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect\">DOMRect</a></code> constructed with\n«[ \"x:\" → <code>0</code>, \"y\" → <code>0</code>, \"width\" → <var>codedWidth</var>, \"height\" → <var>codedHeight</var> ]»</p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-initialize-visible-rect-orientation-and-display-size\" id=\"ref-for-videoframe-initialize-visible-rect-orientation-and-display-size①\">Initialize Visible Rect, Orientation, and Display Size</a>\nalgorithm with <var>init</var>, <var>frame</var>, <var>defaultVisibleRect</var>,\n<var>defaultDisplayWidth</var>, and <var>defaultDisplayHeight</var>.</p>"
        },
        {
          "html": "<p>Assign <code>init</code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-duration\" id=\"ref-for-dom-videoframeinit-duration①\">duration</a></code> to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot⑥\">[[duration]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>init</code>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-timestamp\" id=\"ref-for-dom-videoframeinit-timestamp③\">timestamp</a></code> to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot⑥\">[[timestamp]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>resource</var> has a known <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace①②\">VideoColorSpace</a></code>, assign its value to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot③\">[[color space]]</a></code>.</p>"
        },
        {
          "html": "<p>Otherwise, assign a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace①③\">VideoColorSpace</a></code>, constructed with an empty\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videocolorspaceinit\" id=\"ref-for-dictdef-videocolorspaceinit③\">VideoColorSpaceInit</a></code>, to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot④\">[[color space]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Initialize Visible Rect, Orientation, and Display Size",
      "href": "https://w3c.github.io/webcodecs/#videoframe-initialize-visible-rect-orientation-and-display-size",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>visibleRect</var> be <var>defaultVisibleRect</var>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-visiblerect\" id=\"ref-for-dom-videoframeinit-visiblerect⑧\">visibleRect</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②②\">exists</a>, assign it to\n<var>visibleRect</var>.</p>"
        },
        {
          "html": "<p>Assign <var>visibleRect</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-x\" id=\"ref-for-dom-domrect-x\">x</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-y\" id=\"ref-for-dom-domrect-y\">y</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-width\" id=\"ref-for-dom-domrect-width\">width</a></code>,\nand <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-height\" id=\"ref-for-dom-domrect-height\">height</a></code>, to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot④\">[[visible left]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot④\">[[visible top]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot⑦\">[[visible width]]</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot⑦\">[[visible height]]</a></code> respectively.</p>"
        },
        {
          "html": "<p>Let <var>rotation</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-rotation\" id=\"ref-for-videoframe-parse-rotation①\">Parse Rotation</a>\nalgorithm, with <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-rotation\" id=\"ref-for-dom-videoframeinit-rotation\">rotation</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-add-rotations\" id=\"ref-for-videoframe-add-rotations\">Add Rotations</a> algorithm,\nwith <var>baseRotation</var>, <var>baseFlip</var>, and <var>rotation</var>, to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot⑧\">[[rotation]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>baseFlip</var> is equal to <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-flip\" id=\"ref-for-dom-videoframeinit-flip\">flip</a></code>, assign <code>false</code>\nto <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot⑦\">[[flip]]</a></code>. Otherwise, assign <code>true</code> to\n<var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot⑧\">[[flip]]</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displaywidth\" id=\"ref-for-dom-videoframeinit-displaywidth②\">displayWidth</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframeinit-displayheight\" id=\"ref-for-dom-videoframeinit-displayheight②\">displayHeight</a></code>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②③\">exist</a> in <var>init</var>, assign them to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot⑤\">[[display width]]</a></code>\nand <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot⑤\">[[display height]]</a></code> respectively.</p>"
        },
        {
          "html": "Otherwise:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>baseRotation</var> is equal to <code>0</code> or <code>180</code>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>widthScale</var> be the result of dividing <var>defaultDisplayWidth</var>\nby <var>defaultVisibleRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-width\" id=\"ref-for-dom-domrect-width①\">width</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>heightScale</var> be the result of dividing\n<var>defaultDisplayHeight</var> by\n<var>defaultVisibleRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-height\" id=\"ref-for-dom-domrect-height①\">height</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>widthScale</var> be the result of dividing <var>defaultDisplayHeight</var>\nby <var>defaultVisibleRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-width\" id=\"ref-for-dom-domrect-width②\">width</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>heightScale</var> be the result of dividing <var>defaultDisplayWidth</var>\nby <var>defaultVisibleRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-height\" id=\"ref-for-dom-domrect-height②\">height</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>displayWidth</var> be\n<code>|frame|'s {{VideoFrame/[[visible width]]}} * |widthScale|</code>, rounded\nto the nearest integer.</p>"
            },
            {
              "html": "<p>Let <var>displayHeight</var> be\n<code>|frame|'s {{VideoFrame/[[visible height]]}} * |heightScale|</code>,\nrounded to the nearest integer.</p>"
            },
            {
              "html": "If <var>rotation</var> is equal to <code>0</code> or <code>180</code>:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>displayWidth</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot⑥\">[[display width]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>displayHeight</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot⑥\">[[display height]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>displayHeight</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot⑦\">[[display width]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>displayWidth</var> to <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot⑦\">[[display height]]</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Clone VideoFrame",
      "href": "https://w3c.github.io/webcodecs/#clone-videoframe",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>clone</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑤⑤\">VideoFrame</a></code> initialized as follows:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③①\">media resource</a> referenced by <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot⑥\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>newReference</var> be a new reference to <var>resource</var>.</p>"
            },
            {
              "html": "<p>Assign <var>newReference</var> to <var>clone</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot⑦\">[[resource reference]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign all remaining internal slots of <var>frame</var> (excluding\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot⑧\">[[resource reference]]</a></code>) to those of the same name\nin <var>clone</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>clone</var>.</p>"
        }
      ]
    },
    {
      "name": "Close VideoFrame",
      "href": "https://w3c.github.io/webcodecs/#close-videoframe",
      "html": "",
      "rationale": "assign",
      "steps": [
        {
          "html": "<p>Assign <code>null</code> to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot⑨\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⑥\">[[Detached]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format\" id=\"ref-for-dom-videoframe-format⑤\">format</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>0</code> to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot⑦\">[[coded width]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot⑦\">[[coded height]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot⑤\">[[visible left]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot⑤\">[[visible top]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot⑧\">[[visible width]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot⑧\">[[visible height]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-rotation-slot\" id=\"ref-for-dom-videoframe-rotation-slot⑨\">[[rotation]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-width-slot\" id=\"ref-for-dom-videoframe-display-width-slot⑧\">[[display width]]</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-display-height-slot\" id=\"ref-for-dom-videoframe-display-height-slot⑧\">[[display height]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-flip-slot\" id=\"ref-for-dom-videoframe-flip-slot⑨\">[[flip]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-videoframemetadata\" id=\"ref-for-dictdef-videoframemetadata⑥\">VideoFrameMetadata</a></code> to <var>frame</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-metadata-slot\" id=\"ref-for-dom-videoframe-metadata-slot④\">[[metadata]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Parse Rotation",
      "href": "https://w3c.github.io/webcodecs/#videoframe-parse-rotation",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>alignedRotation</var> be the nearest multiple of <code>90</code> to <var>rotation</var>,\nrounding ties towards positive infinity.</p>"
        },
        {
          "html": "<p>Let <var>fullTurns</var> be the greatest multiple of <code>360</code> less than or equal to\n<var>alignedRotation</var>.</p>"
        },
        {
          "html": "<p>Return <code>|alignedRotation| - |fullTurns|</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Add Rotations",
      "href": "https://w3c.github.io/webcodecs/#videoframe-add-rotations",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>baseFlip</var> is <code>false</code>, let <var>combinedRotation</var> be\n<code>|baseRotation| + |rotation|</code>. Otherwise, let <var>combinedRotation</var> be\n<code>|baseRotation| - |rotation|</code>.</p>"
        },
        {
          "html": "<p>Let <var>fullTurns</var> be the greatest multiple of <code>360</code> less than or equal to\n<var>combinedRotation</var>.</p>"
        },
        {
          "html": "<p>Return <code>|combinedRotation| - |fullTurns|</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Parse VideoFrameCopyToOptions",
      "href": "https://w3c.github.io/webcodecs/#videoframe-parse-videoframecopytooptions",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>defaultRect</var> be the result of performing the getter steps for\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visiblerect\" id=\"ref-for-dom-videoframe-visiblerect④\">visibleRect</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>overrideRect</var> be <code>undefined</code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-rect\" id=\"ref-for-dom-videoframecopytooptions-rect\">rect</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②④\">exists</a>, assign the\nvalue of <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-rect\" id=\"ref-for-dom-videoframecopytooptions-rect①\">rect</a></code> to <var>overrideRect</var>.</p>"
        },
        {
          "html": "<p>Let <var>parsedRect</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-parse-visible-rect\" id=\"ref-for-videoframe-parse-visible-rect①\">Parse Visible Rect</a> algorithm with <var>defaultRect</var>, <var>overrideRect</var>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot⑧\">[[coded width]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot⑧\">[[coded height]]</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①③\">[[format]]</a></code>.</p>"
        },
        {
          "html": "<p>If <var>parsedRect</var> is an exception, return <var>parsedRect</var>.</p>"
        },
        {
          "html": "<p>Let <var>optLayout</var> be <code>undefined</code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-layout\" id=\"ref-for-dom-videoframecopytooptions-layout\">layout</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑤\">exists</a>, assign\nits value to <var>optLayout</var>.</p>"
        },
        {
          "html": "<p>Let <var>format</var> be <code>undefined</code>.</p>"
        },
        {
          "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format④\">format</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②⑥\">exist</a>,\nassign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①④\">[[format]]</a></code> to <var>format</var>.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format⑤\">format</a></code> is equal to\none of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgba\" id=\"ref-for-dom-videopixelformat-rgba①\">RGBA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgbx\" id=\"ref-for-dom-videopixelformat-rgbx①\">RGBX</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgra\" id=\"ref-for-dom-videopixelformat-bgra①\">BGRA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgrx\" id=\"ref-for-dom-videopixelformat-bgrx①\">BGRX</a></code>, then assign\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframecopytooptions-format\" id=\"ref-for-dom-videoframecopytooptions-format⑥\">format</a></code> to <var>format</var>,\notherwise return <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①②\">NotSupportedError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>combinedLayout</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-compute-layout-and-allocation-size\" id=\"ref-for-videoframe-compute-layout-and-allocation-size①\">Compute Layout and Allocation Size</a> algorithm with <var>parsedRect</var>, <var>format</var>,\nand <var>optLayout</var>.</p>"
        },
        {
          "html": "<p>Return <var>combinedLayout</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Verify Rect Offset Alignment",
      "href": "https://w3c.github.io/webcodecs/#videoframe-verify-rect-offset-alignment",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>format</var> is <code>null</code>, return <code>true</code>.</p>"
        },
        {
          "html": "<p>Let <var>planeIndex</var> be <code>0</code>.</p>"
        },
        {
          "html": "<p>Let <var>numPlanes</var> be the number of planes as defined by <var>format</var>.</p>"
        },
        {
          "html": "While <var>planeIndex</var> is less than <var>numPlanes</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>plane</var> be the Plane identified by <var>planeIndex</var> as defined by\n<var>format</var>.</p>"
            },
            {
              "html": "<p>Let <var>sampleWidth</var> be the horizontal <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#sub-sampling-factor\" id=\"ref-for-sub-sampling-factor\">sub-sampling factor</a> of each\nsubsample for <var>plane</var>.</p>"
            },
            {
              "html": "<p>Let <var>sampleHeight</var> be the vertical <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#sub-sampling-factor\" id=\"ref-for-sub-sampling-factor①\">sub-sampling factor</a> of each\nsubsample for <var>plane</var>.</p>"
            },
            {
              "html": "<p>If <var>rect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-x\" id=\"ref-for-dom-domrectreadonly-x③\">x</a></code> is not a multiple of <var>sampleWidth</var>,\nreturn <code>false</code>.</p>"
            },
            {
              "html": "<p>If <var>rect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectreadonly-y\" id=\"ref-for-dom-domrectreadonly-y③\">y</a></code> is not a multiple of <var>sampleHeight</var>,\nreturn <code>false</code>.</p>"
            },
            {
              "html": "<p>Increment <var>planeIndex</var> by <code>1</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Parse Visible Rect",
      "href": "https://w3c.github.io/webcodecs/#videoframe-parse-visible-rect",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>sourceRect</var> be <var>defaultRect</var></p>"
        },
        {
          "html": "If <var>overrideRect</var> is not <code>undefined</code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If either of <var>overrideRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width④\">width</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height④\">height</a></code> is <code>0</code>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⓪\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If the sum of <var>overrideRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-x\" id=\"ref-for-dom-domrectinit-x②\">x</a></code> and\n<var>overrideRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width⑤\">width</a></code> is greater than\n<var>codedWidth</var>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If the sum of <var>overrideRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-y\" id=\"ref-for-dom-domrectinit-y②\">y</a></code> and\n<var>overrideRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height⑤\">height</a></code> is greater than\n<var>codedHeight</var>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②②\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>overrideRect</var> to <var>sourceRect</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>validAlignment</var> be the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#videoframe-verify-rect-offset-alignment\" id=\"ref-for-videoframe-verify-rect-offset-alignment①\">Verify Rect Offset Alignment</a> algorithm with <var>format</var> and\n<var>sourceRect</var>.</p>"
        },
        {
          "html": "<p>If <var>validAlignment</var> is <code>false</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>sourceRect</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Compute Layout and Allocation Size",
      "href": "https://w3c.github.io/webcodecs/#videoframe-compute-layout-and-allocation-size",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>numPlanes</var> be the number of planes as defined by <var>format</var>.</p>"
        },
        {
          "html": "<p>If <var>layout</var> is not <code>undefined</code> and its length does not equal <var>numPlanes</var>,\n throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>minAllocationSize</var> be <code>0</code>.</p>"
        },
        {
          "html": "<p>Let <var>computedLayouts</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①④\">list</a>.</p>"
        },
        {
          "html": "<p>Let <var>endOffsets</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑤\">list</a>.</p>"
        },
        {
          "html": "<p>Let <var>planeIndex</var> be <code>0</code>.</p>"
        },
        {
          "html": "While <var>planeIndex</var> &lt; <var>numPlanes</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>plane</var> be the Plane identified by <var>planeIndex</var> as defined by\n<var>format</var>.</p>"
            },
            {
              "html": "<p>Let <var>sampleBytes</var> be the number of bytes per sample for <var>plane</var>.</p>"
            },
            {
              "html": "<p>Let <var>sampleWidth</var> be the horizontal <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#sub-sampling-factor\" id=\"ref-for-sub-sampling-factor②\">sub-sampling factor</a> of each\nsubsample for <var>plane</var>.</p>"
            },
            {
              "html": "<p>Let <var>sampleHeight</var> be the vertical <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#sub-sampling-factor\" id=\"ref-for-sub-sampling-factor③\">sub-sampling factor</a> of each\nsubsample for <var>plane</var>.</p>"
            },
            {
              "html": "<p>Let <var>computedLayout</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout\" id=\"ref-for-computed-plane-layout②\">computed plane layout</a>.</p>"
            },
            {
              "html": "<p>Set <var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcetop\" id=\"ref-for-computed-plane-layout-sourcetop①\">sourceTop</a> to the\nresult of the division of truncated <var>parsedRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-y\" id=\"ref-for-dom-domrectinit-y③\">y</a></code>\nby <var>sampleHeight</var>, rounded up to the nearest integer.</p>"
            },
            {
              "html": "<p>Set <var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourceheight\" id=\"ref-for-computed-plane-layout-sourceheight①\">sourceHeight</a> to the\nresult of the division of truncated\n<var>parsedRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-height\" id=\"ref-for-dom-domrectinit-height⑥\">height</a></code> by <var>sampleHeight</var>, rounded up\nto the nearest integer.</p>"
            },
            {
              "html": "<p>Set <var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourceleftbytes\" id=\"ref-for-computed-plane-layout-sourceleftbytes①\">sourceLeftBytes</a> to\nthe result of the integer division of\ntruncated <var>parsedRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-x\" id=\"ref-for-dom-domrectinit-x③\">x</a></code> by <var>sampleWidth</var>,\nmultiplied by <var>sampleBytes</var>.</p>"
            },
            {
              "html": "<p>Set <var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcewidthbytes\" id=\"ref-for-computed-plane-layout-sourcewidthbytes①\">sourceWidthBytes</a> to\nthe result of the integer division of\ntruncated <var>parsedRect</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrectinit-width\" id=\"ref-for-dom-domrectinit-width⑥\">width</a></code> by <var>sampleWidth</var>,\nmultiplied by <var>sampleBytes</var>.</p>"
            },
            {
              "html": "If <var>layout</var> is not <code>undefined</code>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>planeLayout</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-planelayout\" id=\"ref-for-dictdef-planelayout③\">PlaneLayout</a></code> in <var>layout</var> at position\n<var>planeIndex</var>.</p>"
                },
                {
                  "html": "<p>If <var>planeLayout</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-planelayout-stride\" id=\"ref-for-dom-planelayout-stride①\">stride</a></code> is less than\n<var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcewidthbytes\" id=\"ref-for-computed-plane-layout-sourcewidthbytes②\">sourceWidthBytes</a>,\nreturn a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑤\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <var>planeLayout</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-planelayout-offset\" id=\"ref-for-dom-planelayout-offset①\">offset</a></code> to <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset①\">destinationOffset</a>.</p>"
                },
                {
                  "html": "<p>Assign <var>planeLayout</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-planelayout-stride\" id=\"ref-for-dom-planelayout-stride②\">stride</a></code> to <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationstride\" id=\"ref-for-computed-plane-layout-destinationstride①\">destinationStride</a>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <var>minAllocationSize</var> to <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset②\">destinationOffset</a>.</p>"
                },
                {
                  "html": "<p>Assign <var>computedLayout</var>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourcewidthbytes\" id=\"ref-for-computed-plane-layout-sourcewidthbytes③\">sourceWidthBytes</a> to\n<var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationstride\" id=\"ref-for-computed-plane-layout-destinationstride②\">destinationStride</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>planeSize</var> be the product of multiplying <var>computedLayout</var>’s\n    <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationstride\" id=\"ref-for-computed-plane-layout-destinationstride③\">destinationStride</a> and\n    <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-sourceheight\" id=\"ref-for-computed-plane-layout-sourceheight②\">sourceHeight</a>.</p>"
            },
            {
              "html": "<p>Let <var>planeEnd</var> be the sum of <var>planeSize</var> and <var>computedLayout</var>’s\n    <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset③\">destinationOffset</a>.</p>"
            },
            {
              "html": "<p>If <var>planeSize</var> or <var>planeEnd</var> is greater than maximum range of\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑦③\">unsigned long</a></code>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Append <var>planeEnd</var> to <var>endOffsets</var>.</p>"
            },
            {
              "html": "<p>Assign the maximum of <var>minAllocationSize</var> and <var>planeEnd</var> to\n    <var>minAllocationSize</var>.</p>"
            },
            {
              "html": "<p>Let <var>earlierPlaneIndex</var> be <code>0</code>.</p>"
            },
            {
              "html": "While <var>earlierPlaneIndex</var> is less than <var>planeIndex</var>.",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>earlierLayout</var> be <code>computedLayouts[earlierPlaneIndex]</code>.</p>"
                },
                {
                  "html": "<p>If <code>endOffsets[planeIndex]</code> is less than or equal to\n<var>earlierLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset④\">destinationOffset</a> or\nif <code>endOffsets[earlierPlaneIndex]</code> is less than or equal to\n<var>computedLayout</var>’s <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#computed-plane-layout-destinationoffset\" id=\"ref-for-computed-plane-layout-destinationoffset⑤\">destinationOffset</a>,\ncontinue.</p>"
                },
                {
                  "html": "<p>Otherwise, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑦\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Increment <var>earlierPlaneIndex</var> by <code>1</code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Append <var>computedLayout</var> to <var>computedLayouts</var>.</p>"
            },
            {
              "html": "<p>Increment <var>planeIndex</var> by <code>1</code>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>combinedLayout</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout\" id=\"ref-for-combined-buffer-layout\">combined buffer layout</a>, initialized as\nfollows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <var>computedLayouts</var> to\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-computedlayouts\" id=\"ref-for-combined-buffer-layout-computedlayouts①\">computedLayouts</a>.</p>"
            },
            {
              "html": "<p>Assign <var>minAllocationSize</var> to\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#combined-buffer-layout-allocationsize\" id=\"ref-for-combined-buffer-layout-allocationsize③\">allocationSize</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>combinedLayout</var>.</p>"
        }
      ]
    },
    {
      "name": "Convert PredefinedColorSpace to VideoColorSpace",
      "href": "https://w3c.github.io/webcodecs/#convert-predefinedcolorspace-to-videocolorspace",
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>colorSpace</var> is equal to one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#dom-predefinedcolorspace-srgb\" id=\"ref-for-dom-predefinedcolorspace-srgb\">srgb</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#dom-predefinedcolorspace-display-p3\" id=\"ref-for-dom-predefinedcolorspace-display-p3\">display-p3</a></code>.</p>"
        },
        {
          "html": "<p>If <var>colorSpace</var> is equal to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#dom-predefinedcolorspace-srgb\" id=\"ref-for-dom-predefinedcolorspace-srgb①\">srgb</a></code> return a new instance of the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#srgb-color-space\" id=\"ref-for-srgb-color-space①\">sRGB Color Space</a></p>"
        },
        {
          "html": "<p>If <var>colorSpace</var> is equal to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/canvas.html#dom-predefinedcolorspace-display-p3\" id=\"ref-for-dom-predefinedcolorspace-display-p3①\">display-p3</a></code> return a new instance of the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#display-p3-color-space\" id=\"ref-for-display-p3-color-space\">Display P3 Color Space</a></p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Convert to RGB frame",
      "href": "https://w3c.github.io/webcodecs/#videoframe-convert-to-rgb-frame",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>This algorithm <em class=\"rfc2119\">MUST</em> be called only if <var>format</var>\nis equal to one of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgba\" id=\"ref-for-dom-videopixelformat-rgba②\">RGBA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-rgbx\" id=\"ref-for-dom-videopixelformat-rgbx②\">RGBX</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgra\" id=\"ref-for-dom-videopixelformat-bgra②\">BGRA</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videopixelformat-bgrx\" id=\"ref-for-dom-videopixelformat-bgrx②\">BGRX</a></code>.</p>"
        },
        {
          "html": "Let <var>convertedFrame</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑤⑥\">VideoFrame</a></code>, constructed as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⑦\">[[Detached]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>format</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①⑤\">[[format]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>width</var> be <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot⑨\">[[visible width]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>height</var> be <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot⑨\">[[visible height]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <var>width</var>, <var>height</var>, 0, 0, <var>width</var>, <var>height</var>, <var>width</var>, and\n<var>height</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-width-slot\" id=\"ref-for-dom-videoframe-coded-width-slot⑨\">[[coded width]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-coded-height-slot\" id=\"ref-for-dom-videoframe-coded-height-slot⑨\">[[coded height]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-left-slot\" id=\"ref-for-dom-videoframe-visible-left-slot⑥\">[[visible left]]</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-top-slot\" id=\"ref-for-dom-videoframe-visible-top-slot⑥\">[[visible top]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-width-slot\" id=\"ref-for-dom-videoframe-visible-width-slot①⓪\">[[visible width]]</a></code>,\nand <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-visible-height-slot\" id=\"ref-for-dom-videoframe-visible-height-slot①⓪\">[[visible height]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Assign <var>frame</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot⑦\">[[duration]]</a></code> and <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot⑦\">[[timestamp]]</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-duration-slot\" id=\"ref-for-dom-videoframe-duration-slot⑧\">[[duration]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-timestamp-slot\" id=\"ref-for-dom-videoframe-timestamp-slot⑧\">[[timestamp]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Assign the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#convert-predefinedcolorspace-to-videocolorspace\" id=\"ref-for-convert-predefinedcolorspace-to-videocolorspace\">Convert\nPredefinedColorSpace to VideoColorSpace</a> algorithm with\n<var>colorSpace</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot⑤\">[[color space]]</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>resource</var> be a new <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③②\">media resource</a> containing the result of\nconversion of <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③③\">media resource</a> referenced by <var>frame</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot①⓪\">[[resource reference]]</a></code> into a color space and pixel\nformat specified by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-color-space-slot\" id=\"ref-for-dom-videoframe-color-space-slot⑥\">[[color space]]</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-format-slot\" id=\"ref-for-dom-videoframe-format-slot①⑥\">[[format]]</a></code> respectively.</p>"
            },
            {
              "html": "<p>Assign the reference to <var>resource</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot①①\">[[resource reference]]</a></code></p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>convertedFrame</var>.</p>"
        }
      ]
    },
    {
      "name": "VideoFrame/Copy VideoFrame metadata",
      "href": "https://w3c.github.io/webcodecs/#videoframe-copy-videoframe-metadata",
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>metadataCopySerialized</var> be <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structuredserialize\" id=\"ref-for-structuredserialize\">StructuredSerialize</a>(<var>metadata</var>).</p>"
        },
        {
          "html": "<p>Let <var>metadataCopy</var> be <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize\" id=\"ref-for-structureddeserialize\">StructuredDeserialize</a>(<var>metadataCopySerialized</var>, <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#current-realm\" id=\"ref-for-current-realm\">the current Realm</a>).</p>"
        },
        {
          "html": "<p>Return <var>metadataCopy</var>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⑧\">[[Detached]]</a></code> is <code>true</code>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①③\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>For all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑤⑨\">VideoFrame</a></code> internal slots in <var>value</var>, assign the value of\neach internal slot to a field in <var>dataHolder</var> with the same name as the\ninternal slot.</p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#close-videoframe\" id=\"ref-for-close-videoframe①\">Close VideoFrame</a> algorithm with <var>value</var>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>dataHolder</var>, assign the value of each named\nfield to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑥①\">VideoFrame</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached②⑨\">[[Detached]]</a></code> is <code>true</code>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①④\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④②\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>forStorage</var> is <code>true</code>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①⑤\">DataCloneError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>resource</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#media-resource\" id=\"ref-for-media-resource③④\">media resource</a> referenced by\n    <var>value</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot①②\">[[resource reference]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>newReference</var> be a new reference to <var>resource</var>.</p>"
        },
        {
          "html": "<p>Assign <var>newReference</var> to |serialized.resource reference|.</p>"
        },
        {
          "html": "<p>For all remaining <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑥③\">VideoFrame</a></code> internal slots (excluding\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videoframe-resource-reference-slot\" id=\"ref-for-dom-videoframe-resource-reference-slot①③\">[[resource reference]]</a></code>) in <var>value</var>, assign the value of\neach internal slot to a field in <var>serialized</var> with the same name as the\ninternal slot.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For all named fields in <var>serialized</var>, assign the value of each named\nfield to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videoframe\" id=\"ref-for-videoframe⑥⑤\">VideoFrame</a></code> internal slot in <var>value</var> with the same name\nas the named field.</p>"
        }
      ]
    },
    {
      "html": "Integer values are unsigned unless otherwise specified.",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>c</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#videocolorspace\" id=\"ref-for-videocolorspace①④\">VideoColorSpace</a></code> object, initialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>init.primaries</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videocolorspace-primaries-slot\" id=\"ref-for-dom-videocolorspace-primaries-slot③\">[[primaries]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.transfer</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videocolorspace-transfer-slot\" id=\"ref-for-dom-videocolorspace-transfer-slot③\">[[transfer]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.matrix</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videocolorspace-matrix-slot\" id=\"ref-for-dom-videocolorspace-matrix-slot③\">[[matrix]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>init.fullRange</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-videocolorspace-full-range-slot\" id=\"ref-for-dom-videocolorspace-full-range-slot③\">[[full range]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>c</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/ImageDecoder(init)",
      "href": "https://w3c.github.io/webcodecs/#dom-imagedecoder-imagedecoder",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var> is not <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-imagedecoderinit\" id=\"ref-for-valid-imagedecoderinit\">valid ImageDecoderInit</a>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-transfer\" id=\"ref-for-dom-imagedecoderinit-transfer\">transfer</a></code> contains more than one reference\nto the same <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①②\">ArrayBuffer</a></code>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①⑥\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④③\">DOMException</a></code>.</p>"
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-transfer\" id=\"ref-for-dom-imagedecoderinit-transfer①\">transfer</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#detached\" id=\"ref-for-detached③⓪\">[[Detached]]</a></code> internal slot is <code>true</code>,\nthen throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror①⑦\">DataCloneError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④④\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>d</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagedecoder\" id=\"ref-for-imagedecoder⑤\">ImageDecoder</a></code> object. In the steps below, all\nmentions of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagedecoder\" id=\"ref-for-imagedecoder⑥\">ImageDecoder</a></code> members apply to <var>d</var> unless stated\notherwise.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue\" id=\"ref-for-queue①⓪\">queue</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-control-message-queue-slot\" id=\"ref-for-dom-imagedecoder-control-message-queue-slot①\">[[control message queue]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-message-queue-blocked-slot\" id=\"ref-for-dom-imagedecoder-message-queue-blocked-slot\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign the result of starting a new <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#parallel-queue\" id=\"ref-for-parallel-queue①⑥\">parallel queue</a> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-work-queue-slot\" id=\"ref-for-dom-imagedecoder-codec-work-queue-slot\">[[codec work queue]]</a></code>.</p>"
        },
        {
          "html": "Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-imagetracklist-slot\" id=\"ref-for-dom-imagedecoder-imagetracklist-slot①\">[[ImageTrackList]]</a></code> a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetracklist\" id=\"ref-for-imagetracklist②\">ImageTrackList</a></code>\ninitialized as follows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑥\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot\">[[track list]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>-1</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot\">[[selected index]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-type\" id=\"ref-for-dom-imagedecoderinit-type①\">type</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-type-slot\" id=\"ref-for-dom-imagedecoder-type-slot\">[[type]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>null</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot①\">[[codec implementation]]</a></code>.</p>"
        },
        {
          "html": "<p>If <code>init.preferAnimation</code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③⓪\">exists</a>, assign <code>init.preferAnimation</code>\nto the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-prefer-animation-slot\" id=\"ref-for-dom-imagedecoder-prefer-animation-slot\">[[prefer animation]]</a></code> internal slot. Otherwise,\nassign 'null' to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-prefer-animation-slot\" id=\"ref-for-dom-imagedecoder-prefer-animation-slot①\">[[prefer animation]]</a></code> internal slot.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑦\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot\">[[pending decode promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>-1</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot\">[[internal selected track index]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot\">[[tracks established]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot\">[[closed]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map\">map</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot\">[[progressive frame generations]]</a></code>.</p>"
        },
        {
          "html": "If <var>init</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-data\" id=\"ref-for-dom-imagedecoderinit-data\">data</a></code> member is of type\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://streams.spec.whatwg.org/#readablestream\" id=\"ref-for-readablestream\">ReadableStream</a></code>:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑧\">list</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot③\">[[encoded data]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete-slot\" id=\"ref-for-dom-imagedecoder-complete-slot①\">[[complete]]</a></code></p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message②⓪\">Queue a control message</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#configure-the-image-decoder\" id=\"ref-for-configure-the-image-decoder\">configure the image decoder</a> with\n<var>init</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②①\">Process the control message queue</a>.</p>"
            },
            {
              "html": "<p>Let <var>reader</var> be the result of <a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#readablestream-get-a-reader\" id=\"ref-for-readablestream-get-a-reader\">getting a reader</a> for\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-data\" id=\"ref-for-dom-imagedecoderinit-data①\">data</a></code>.</p>"
            },
            {
              "html": "<p>In parallel, perform the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fetch-stream-data-loop\" id=\"ref-for-imagedecoder-fetch-stream-data-loop\">Fetch Stream Data Loop</a> on <var>d</var> with\n<var>reader</var>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert that <code>init.data</code> is of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#BufferSource\" id=\"ref-for-BufferSource①③\">BufferSource</a></code>.</p>"
            },
            {
              "html": "If <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-transfer\" id=\"ref-for-dom-imagedecoderinit-transfer②\">transfer</a></code> contains an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①③\">ArrayBuffer</a></code>\nreferenced by <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-data\" id=\"ref-for-dom-imagedecoderinit-data②\">data</a></code> the User Agent\n<em class=\"rfc2119\">MAY</em> choose to:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot④\">[[encoded data]]</a></code> reference bytes in <var>data</var>\nrepresenting an encoded image.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign a copy of <code>init.data</code> to  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot⑤\">[[encoded data]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete-slot\" id=\"ref-for-dom-imagedecoder-complete-slot②\">[[complete]]</a></code>.</p>"
            },
            {
              "html": "<p>Resolve <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-completed-promise-slot\" id=\"ref-for-dom-imagedecoder-completed-promise-slot\">[[completed promise]]</a></code>.</p>"
            },
            {
              "html": "<p>Queue a control message to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#configure-the-image-decoder\" id=\"ref-for-configure-the-image-decoder①\">configure the image decoder</a> with\n<var>init</var>.</p>"
            },
            {
              "html": "<p>Queue a control message to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#decode-track-metadata\" id=\"ref-for-decode-track-metadata\">decode track metadata</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②②\">Process the control message queue</a>.</p>"
            }
          ]
        },
        {
          "html": "For each <var>transferable</var> in <var>init</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-transfer\" id=\"ref-for-dom-imagedecoderinit-transfer③\">transfer</a></code>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a href=\"https://tc39.es/ecma262/#sec-detacharraybuffer\">DetachArrayBuffer</a>\non <var>transferable</var></p>"
            }
          ]
        },
        {
          "html": "<p>return <var>d</var>.</p>"
        }
      ]
    },
    {
      "name": "configure the image decoder",
      "href": "https://w3c.github.io/webcodecs/#configure-the-image-decoder",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①③\">Running a control message</a> to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"configure-the-image-decoder\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">configure the image decoder</dfn>\nmeans running these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>supported</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-check-type-support\" id=\"ref-for-imagedecoder-check-type-support\">Check Type Support</a> algorithm with <code>init.type</code>.</p>"
        },
        {
          "html": "<p>If <var>supported</var> is <code>false</code>, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder\">Close ImageDecoder</a>\nalgorithm with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①④\">NotSupportedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑤\">DOMException</a></code> and return\n<code>\"processed\"</code>.</p>"
        },
        {
          "html": "<p>Otherwise, assign the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot②\">[[codec implementation]]</a></code> internal\nslot with an implementation supporting <code>init.type</code></p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-message-queue-blocked-slot\" id=\"ref-for-dom-imagedecoder-message-queue-blocked-slot①\">[[message queue blocked]]</a></code>.</p>"
        },
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-work-queue-slot\" id=\"ref-for-dom-imagedecoder-codec-work-queue-slot①\">[[codec work queue]]</a></code>:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Configure <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot③\">[[codec implementation]]</a></code> in accordance\nwith the values given for <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-colorspaceconversion\" id=\"ref-for-dom-imagedecoderinit-colorspaceconversion\">colorSpaceConversion</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredwidth\" id=\"ref-for-dom-imagedecoderinit-desiredwidth\">desiredWidth</a></code>, and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredheight\" id=\"ref-for-dom-imagedecoderinit-desiredheight\">desiredHeight</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-message-queue-blocked-slot\" id=\"ref-for-dom-imagedecoder-message-queue-blocked-slot②\">[[message queue blocked]]</a></code>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⑧\">Queue a task</a> to <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②③\">Process the control message queue</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <code>\"processed\"</code>.</p>"
        }
      ]
    },
    {
      "name": "decode track metadata",
      "href": "https://w3c.github.io/webcodecs/#decode-track-metadata",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①④\">Running a control message</a> to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"decode-track-metadata\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">decode track metadata</dfn> means\nrunning these steps:",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-work-queue-slot\" id=\"ref-for-dom-imagedecoder-codec-work-queue-slot②\">[[codec work queue]]</a></code>:",
          "rationale": "run",
          "steps": [
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-establish-tracks\" id=\"ref-for-imagedecoder-establish-tracks\">Establish Tracks</a> algorithm.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/decode(options)",
      "href": "https://w3c.github.io/webcodecs/#dom-imagedecoder-decode",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot①\">[[closed]]</a></code> is <code>true</code>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①③\">Promise</a></code>\nrejected with an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑥\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-imagetracklist-slot\" id=\"ref-for-dom-imagedecoder-imagetracklist-slot③\">[[ImageTrackList]]</a></code>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot①\">[[selected index]]</a></code> is '-1', return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①④\">Promise</a></code>\nrejected with an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑦\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑦\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>options</var> is <code>undefined</code>, assign a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-imagedecodeoptions\" id=\"ref-for-dictdef-imagedecodeoptions①\">ImageDecodeOptions</a></code> to\n<var>options</var>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑤\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot①\">[[pending decode promises]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message②①\">Queue a control message</a> to decode the image with <var>options</var>, and\n<var>promise</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②④\">Process the control message queue</a>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/decode(options)",
      "href": "https://w3c.github.io/webcodecs/#dom-imagedecoder-decode",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①⑤\">Running a control message</a> to decode the image means running these\nsteps:",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-work-queue-slot\" id=\"ref-for-dom-imagedecoder-codec-work-queue-slot③\">[[codec work queue]]</a></code>:",
          "rationale": "wait",
          "steps": [
            {
              "html": "<p>Wait for <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot①\">[[tracks established]]</a></code> to become <code>true</code>.</p>"
            },
            {
              "html": "<p>If <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecodeoptions-completeframesonly\" id=\"ref-for-dom-imagedecodeoptions-completeframesonly\">completeFramesOnly</a></code> is <code>false</code> and\nthe image is a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#progressive-image\" id=\"ref-for-progressive-image①\">Progressive Image</a> for which the User Agent\nsupports progressive decoding, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-decode-progressive-frame\" id=\"ref-for-imagedecoder-decode-progressive-frame\">Decode Progressive Frame</a>\nalgorithm with <var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecodeoptions-frameindex\" id=\"ref-for-dom-imagedecodeoptions-frameindex\">frameIndex</a></code> and\n<var>promise</var>.</p>"
            },
            {
              "html": "<p>Otherwise, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-decode-complete-frame\" id=\"ref-for-imagedecoder-decode-complete-frame\">Decode Complete Frame</a> algorithm with\n<var>options</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecodeoptions-frameindex\" id=\"ref-for-dom-imagedecodeoptions-frameindex①\">frameIndex</a></code> and <var>promise</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/isTypeSupported(type)",
      "href": "https://w3c.github.io/webcodecs/#dom-imagedecoder-istypesupported",
      "html": "When invoked, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>type</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-image-mime-type\" id=\"ref-for-valid-image-mime-type\">valid image MIME type</a>, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑥\">Promise</a></code>\nrejected with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑦\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>In parallel, resolve <var>p</var> with the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-check-type-support\" id=\"ref-for-imagedecoder-check-type-support①\">Check Type Support</a> algorithm with <var>type</var>.</p>"
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Fetch Stream Data Loop",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-fetch-stream-data-loop",
      "html": "Run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>readRequest</var> be the following <a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#read-request\" id=\"ref-for-read-request\">read request</a>.</p>\n       <dl>\n        <dt data-md=\"\"><a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#read-request-chunk-steps\" id=\"ref-for-read-request-chunk-steps\">chunk steps</a>, given <var>chunk</var>\n        </dt><dd data-md=\"\">\n         \n        </dd><dt data-md=\"\"><a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#read-request-close-steps\" id=\"ref-for-read-request-close-steps\">close steps</a>\n        </dt><dd data-md=\"\">\n         \n        </dd><dt data-md=\"\"><a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#read-request-error-steps\" id=\"ref-for-read-request-error-steps\">error steps</a>\n        </dt><dd data-md=\"\">\n         \n       </dd></dl>",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot②\">[[closed]]</a></code> is <code>true</code>, abort these steps.</p>"
            },
            {
              "html": "<p>If <var>chunk</var> is not a Uint8Array object, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task③⑨\">queue a task</a> to run\nthe <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder②\">Close ImageDecoder</a> algorithm with a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dataerror\" id=\"ref-for-dataerror⑤\">DataError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⓪\">DOMException</a></code> and abort these steps.</p>"
            },
            {
              "html": "<p>Let <var>bytes</var> be the byte sequence represented by the Uint8Array\nobject.</p>"
            },
            {
              "html": "<p>Append <var>bytes</var> to the  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot⑦\">[[encoded data]]</a></code>\ninternal slot.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot②\">[[tracks established]]</a></code> is <code>false</code>, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-establish-tracks\" id=\"ref-for-imagedecoder-establish-tracks①\">Establish Tracks</a> algorithm.</p>"
            },
            {
              "html": "<p>Otherwise, run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-update-tracks\" id=\"ref-for-imagedecoder-update-tracks\">Update Tracks</a> algorithm.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fetch-stream-data-loop\" id=\"ref-for-imagedecoder-fetch-stream-data-loop①\">Fetch Stream Data Loop</a> algorithm with <var>reader</var>.</p>"
            }
          ],
          "additional": [
            {
              "html": "",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete-slot\" id=\"ref-for-dom-imagedecoder-complete-slot④\">[[complete]]</a></code></p>"
                },
                {
                  "html": "<p>Resolve <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-completed-promise-slot\" id=\"ref-for-dom-imagedecoder-completed-promise-slot②\">[[completed promise]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "",
              "rationale": "queue",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④⓪\">Queue a task</a> to run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder③\">Close ImageDecoder</a>\nalgorithm with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notreadableerror\" id=\"ref-for-notreadableerror\">NotReadableError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤①\">DOMException</a></code></p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Read a chunk from <var>reader</var> given <var>readRequest</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Establish Tracks",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-establish-tracks",
      "html": "Run these steps:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot③\">[[tracks established]]</a></code> is <code>false</code>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot⑧\">[[encoded data]]</a></code> does not contain enough data to\ndetermine the number of tracks:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete\" id=\"ref-for-dom-imagedecoder-complete③\">complete</a></code> is <code>true</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④①\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder④\">Close ImageDecoder</a> algorithm with a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑧\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤②\">DOMException</a></code>.</p>"
            },
            {
              "html": "<p>Abort these steps.</p>"
            }
          ]
        },
        {
          "html": "<p>If the number of tracks is found to be <code>0</code>, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④②\">queue a task</a> to run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder⑤\">Close ImageDecoder</a> algorithm and abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>newTrackList</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑨\">list</a>.</p>"
        },
        {
          "html": "For each <var>image track</var> found in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot⑨\">[[encoded data]]</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>newTrack</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack\">ImageTrack</a></code>, initialized as follows:",
              "rationale": "assign",
              "steps": [
                {
                  "html": "<p>Assign <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①\">this</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot\">[[ImageDecoder]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks\" id=\"ref-for-dom-imagedecoder-tracks②\">tracks</a></code> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagetracklist-slot\" id=\"ref-for-dom-imagetrack-imagetracklist-slot\">[[ImageTrackList]]</a></code>.</p>"
                },
                {
                  "html": "<p>If <var>image track</var> is found to be animated, assign <code>true</code> to\n<var>newTrack</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-animated-slot\" id=\"ref-for-dom-imagetrack-animated-slot\">[[animated]]</a></code> internal slot.\nOtherwise, assign <code>false</code>.</p>"
                },
                {
                  "html": "<p>If <var>image track</var> is found to describe a frame count, assign\nthat count to <var>newTrack</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-frame-count-slot\" id=\"ref-for-dom-imagetrack-frame-count-slot\">[[frame count]]</a></code>\ninternal slot. Otherwise, assign <code>0</code>.</p>"
                },
                {
                  "html": "<p>If <var>image track</var> is found to describe a repetition count,\nassign that count to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-repetition-count-slot\" id=\"ref-for-dom-imagetrack-repetition-count-slot\">[[repetition count]]</a></code>\ninternal slot. Otherwise, assign <code>0</code>.</p>"
                },
                {
                  "html": "<p>Assign <code>false</code> to <var>newTrack</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected-slot\" id=\"ref-for-dom-imagetrack-selected-slot\">[[selected]]</a></code>\ninternal slot.</p>"
                }
              ]
            },
            {
              "html": "<p>Append <var>newTrack</var> to <var>newTrackList</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>selectedTrackIndex</var> be the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-get-default-selected-track-index\" id=\"ref-for-imagedecoder-get-default-selected-track-index\">Get Default Selected Track Index</a> algorithm with\n<var>newTrackList</var>.</p>"
        },
        {
          "html": "<p>Let <var>selectedTrack</var> be the track at position <var>selectedTrackIndex</var> within\n<var>newTrackList</var>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <var>selectedTrack</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected-slot\" id=\"ref-for-dom-imagetrack-selected-slot①\">[[selected]]</a></code> internal\nslot.</p>"
        },
        {
          "html": "<p>Assign <var>selectedTrackIndex</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot①\">[[internal selected track index]]</a></code>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot④\">[[tracks established]]</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④③\">Queue a task</a> to perform the following steps:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <var>newTrackList</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks\" id=\"ref-for-dom-imagedecoder-tracks③\">tracks</a></code>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot①\">[[track list]]</a></code> internal slot.</p>"
            },
            {
              "html": "<p>Assign <var>selectedTrackIndex</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks\" id=\"ref-for-dom-imagedecoder-tracks④\">tracks</a></code>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot②\">[[selected index]]</a></code>.</p>"
            },
            {
              "html": "<p>Resolve <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-ready-promise-slot\" id=\"ref-for-dom-imagetracklist-ready-promise-slot\">[[ready promise]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Get Default Selected Track Index",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-get-default-selected-track-index",
      "html": "Run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①①\">[[encoded data]]</a></code> identifies a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#primary-image-track\" id=\"ref-for-primary-image-track\">Primary Image Track</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>primaryTrack</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack①\">ImageTrack</a></code> from <var>trackList</var> that\ndescribes the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#primary-image-track\" id=\"ref-for-primary-image-track①\">Primary Image Track</a>.</p>"
            },
            {
              "html": "<p>Let <var>primaryTrackIndex</var> be position of <var>primaryTrack</var> within\n<var>trackList</var>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-prefer-animation-slot\" id=\"ref-for-dom-imagedecoder-prefer-animation-slot②\">[[prefer animation]]</a></code> is <code>null</code>, return\n<var>primaryTrackIndex</var>.</p>"
            },
            {
              "html": "<p>If <var>primaryTrack</var>.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-animated\" id=\"ref-for-dom-imagetrack-animated\">animated</a></code> equals\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-prefer-animation-slot\" id=\"ref-for-dom-imagedecoder-prefer-animation-slot③\">[[prefer animation]]</a></code>, return <var>primaryTrackIndex</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>If any <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack②\">ImageTrack</a></code>s in <var>trackList</var> have <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-animated\" id=\"ref-for-dom-imagetrack-animated①\">animated</a></code> equal\nto <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-prefer-animation-slot\" id=\"ref-for-dom-imagedecoder-prefer-animation-slot④\">[[prefer animation]]</a></code>, return the position of the\nearliest such track in <var>trackList</var>.</p>"
        },
        {
          "html": "<p>Return <code>0</code>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Update Tracks",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-update-tracks",
      "html": "Run these steps:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot⑤\">[[tracks established]]</a></code> is <code>true</code>.</p>"
        },
        {
          "html": "<p>Let <var>trackChanges</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⓪\">list</a>.</p>"
        },
        {
          "html": "<p>Let <var>trackList</var> be a copy of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks\" id=\"ref-for-dom-imagedecoder-tracks⑤\">tracks</a></code>'\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot②\">[[track list]]</a></code>.</p>"
        },
        {
          "html": "For each <var>track</var> in <var>trackList</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>trackIndex</var> be  the position of <var>track</var> in <var>trackList</var>.</p>"
            },
            {
              "html": "<p>Let <var>latestFrameCount</var> be the frame count as indicated by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①②\">[[encoded data]]</a></code> for the track corresponding to\n<var>track</var>.</p>"
            },
            {
              "html": "<p>Assert that <var>latestFrameCount</var> is greater than or equal to\n<code>track.frameCount</code>.</p>"
            },
            {
              "html": "If <var>latestFrameCount</var> is greater than <code>track.frameCount</code>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>change</var> be a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#track-update-struct\" id=\"ref-for-track-update-struct\">track update struct</a> whose\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#track-update-struct-track-index\" id=\"ref-for-track-update-struct-track-index\">track index</a> is <var>trackIndex</var> and\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#track-update-struct-frame-count\" id=\"ref-for-track-update-struct-frame-count\">frame count</a> is <var>latestFrameCount</var>.</p>"
                },
                {
                  "html": "<p>Append <var>change</var> to <var>tracksChanges</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <var>tracksChanges</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty\">is empty</a>, abort these steps.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④④\">Queue a task</a> to perform the following steps:",
          "rationale": "for",
          "steps": [
            {
              "html": "For each <var>update</var> in <var>trackChanges</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>updateTrack</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack③\">ImageTrack</a></code> at position\n<code>update.trackIndex</code> within <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks\" id=\"ref-for-dom-imagedecoder-tracks⑥\">tracks</a></code>'\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot③\">[[track list]]</a></code>.</p>"
                },
                {
                  "html": "<p>Assign <code>update.frameCount</code> to <var>updateTrack</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-frame-count-slot\" id=\"ref-for-dom-imagetrack-frame-count-slot①\">[[frame count]]</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Decode Complete Frame",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-decode-complete-frame",
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot⑥\">[[tracks established]]</a></code> is <code>true</code>.</p>"
        },
        {
          "html": "<p>Assert that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot②\">[[internal selected track index]]</a></code> is not\n<code>-1</code>.</p>"
        },
        {
          "html": "<p>Let <var>encodedFrame</var> be the encoded frame identified by <var>frameIndex</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot③\">[[internal selected track index]]</a></code>.</p>"
        },
        {
          "html": "Wait for any of the following conditions to be true (whichever happens\nfirst):",
          "rationale": "complete",
          "steps": [
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①③\">[[encoded data]]</a></code> contains enough bytes to\ncompletely decode <var>encodedFrame</var>.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①④\">[[encoded data]]</a></code> is found to be malformed.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete\" id=\"ref-for-dom-imagedecoder-complete④\">complete</a></code> is <code>true</code>.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot③\">[[closed]]</a></code> is <code>true</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①⑤\">[[encoded data]]</a></code> is found to be malformed, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fatally-reject-bad-data\" id=\"ref-for-imagedecoder-fatally-reject-bad-data\">Fatally Reject Bad Data</a> algorithm and abort these\nsteps.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①⑥\">[[encoded data]]</a></code> does not contain enough bytes to\ncompletely decode <var>encodedFrame</var>, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-reject-infeasible-decode\" id=\"ref-for-imagedecoder-reject-infeasible-decode\">Reject Infeasible Decode</a> algorithm with <var>promise</var> and\nabort these steps.</p>"
        },
        {
          "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot④\">[[codec implementation]]</a></code> to decode\n<var>encodedFrame</var>.</p>"
        },
        {
          "html": "<p>If decoding produces an error, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fatally-reject-bad-data\" id=\"ref-for-imagedecoder-fatally-reject-bad-data①\">Fatally Reject Bad Data</a> algorithm and abort these\nsteps.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot①\">[[progressive frame generations]]</a></code> contains an entry\nkeyed by <var>frameIndex</var>, remove the entry from the map.</p>"
        },
        {
          "html": "<p>Let <var>output</var> be the decoded image data emitted by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot⑤\">[[codec implementation]]</a></code> corresponding to\n<var>encodedFrame</var>.</p>"
        },
        {
          "html": "Let <var>decodeResult</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-imagedecoderesult\" id=\"ref-for-dictdef-imagedecoderesult①\">ImageDecodeResult</a></code> initialized as\nfollows:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign 'true' to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderesult-complete\" id=\"ref-for-dom-imagedecoderesult-complete\">complete</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>duration</var> be the presentation duration for <var>output</var> as\ndescribed by <var>encodedFrame</var>. If <var>encodedFrame</var> does not have a\nduration, assign <code>null</code> to <var>duration</var>.</p>"
            },
            {
              "html": "Let <var>timestamp</var> be the presentation timestamp for <var>output</var> as\ndescribed by <var>encodedFrame</var>. If <var>encodedFrame</var> does not have a\ntimestamp:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>encodedFrame</var> is a still image assign <code>0</code> to <var>timestamp</var>.</p>"
                },
                {
                  "html": "<p>If <var>encodedFrame</var> is a constant rate animated image and\n<var>duration</var> is not <code>null</code>, assign <code>|frameIndex| * |duration|</code> to\n<var>timestamp</var>.</p>"
                },
                {
                  "html": "<p>If a <var>timestamp</var> can otherwise be trivially generated from\nmetadata without further decoding, assign that to <var>timestamp</var>.</p>"
                },
                {
                  "html": "<p>Otherwise, assign <code>0</code> to <var>timestamp</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①⑦\">[[encoded data]]</a></code> contains orientation metadata\ndescribe it as <var>rotation</var> and <var>flip</var>, otherwise set <var>rotation</var> to 0\nand <var>flip</var> to false.</p>"
            },
            {
              "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderesult-image\" id=\"ref-for-dom-imagedecoderesult-image\">image</a></code> with the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#create-a-videoframe\" id=\"ref-for-create-a-videoframe②\">Create a VideoFrame</a> algorithm with <var>output</var>, <var>timestamp</var>,\n<var>duration</var>, <var>rotation</var>, and <var>flip</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-resolve-decode\" id=\"ref-for-imagedecoder-resolve-decode\">Resolve Decode</a> algorithm with <var>promise</var> and\n<var>decodeResult</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Decode Progressive Frame",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-decode-progressive-frame",
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-tracks-established-slot\" id=\"ref-for-dom-imagedecoder-tracks-established-slot⑦\">[[tracks established]]</a></code> is <code>true</code>.</p>"
        },
        {
          "html": "<p>Assert that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot④\">[[internal selected track index]]</a></code> is not\n<code>-1</code>.</p>"
        },
        {
          "html": "<p>Let <var>encodedFrame</var> be the encoded frame identified by <var>frameIndex</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot⑤\">[[internal selected track index]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>lastFrameGeneration</var> be <code>null</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot②\">[[progressive frame generations]]</a></code> contains a map\nentry with the key <var>frameIndex</var>, assign the value of the map entry to\n<var>lastFrameGeneration</var>.</p>"
        },
        {
          "html": "Wait for any of the following conditions to be true (whichever happens\nfirst):",
          "rationale": "complete",
          "steps": [
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①⑧\">[[encoded data]]</a></code> contains enough bytes to decode\n<var>encodedFrame</var> to produce an output whose <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#progressive-image-frame-generation\" id=\"ref-for-progressive-image-frame-generation①\">Progressive Image Frame Generation</a> exceeds <var>lastFrameGeneration</var>.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot①⑨\">[[encoded data]]</a></code> is found to be malformed.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete\" id=\"ref-for-dom-imagedecoder-complete⑤\">complete</a></code> is <code>true</code>.</p>"
            },
            {
              "html": "<p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot④\">[[closed]]</a></code> is <code>true</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot②⓪\">[[encoded data]]</a></code> is found to be malformed, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fatally-reject-bad-data\" id=\"ref-for-imagedecoder-fatally-reject-bad-data②\">Fatally Reject Bad Data</a> algorithm and abort these\nsteps.</p>"
        },
        {
          "html": "<p>Otherwise, if <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot②①\">[[encoded data]]</a></code> does not contain enough\nbytes to decode <var>encodedFrame</var> to produce an output whose\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#progressive-image-frame-generation\" id=\"ref-for-progressive-image-frame-generation②\">Progressive Image Frame Generation</a> exceeds <var>lastFrameGeneration</var>,\nrun the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-reject-infeasible-decode\" id=\"ref-for-imagedecoder-reject-infeasible-decode①\">Reject Infeasible Decode</a> algorithm with\n<var>promise</var> and abort these steps.</p>"
        },
        {
          "html": "<p>Attempt to use <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot⑥\">[[codec implementation]]</a></code> to decode\n<var>encodedFrame</var>.</p>"
        },
        {
          "html": "<p>If decoding produces an error, run the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-fatally-reject-bad-data\" id=\"ref-for-imagedecoder-fatally-reject-bad-data③\">Fatally Reject Bad Data</a> algorithm and abort these\nsteps.</p>"
        },
        {
          "html": "<p>Let <var>output</var> be the decoded image data emitted by\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot⑦\">[[codec implementation]]</a></code> corresponding to\n<var>encodedFrame</var>.</p>"
        },
        {
          "html": "<p>Let <var>decodeResult</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-imagedecoderesult\" id=\"ref-for-dictdef-imagedecoderesult②\">ImageDecodeResult</a></code>.</p>"
        },
        {
          "html": "If <var>output</var> is the final full-detail progressive output corresponding\nto <var>encodedFrame</var>:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>true</code> to <var>decodeResult</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderesult-complete\" id=\"ref-for-dom-imagedecoderesult-complete①\">complete</a></code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot③\">[[progressive frame generations]]</a></code> contains an\nentry keyed by <var>frameIndex</var>, remove the entry from the map.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <code>false</code> to <var>decodeResult</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderesult-complete\" id=\"ref-for-dom-imagedecoderesult-complete②\">complete</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>frameGeneration</var> be the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#progressive-image-frame-generation\" id=\"ref-for-progressive-image-frame-generation③\">Progressive Image Frame Generation</a>\nfor <var>output</var>.</p>"
            },
            {
              "html": "<p>Add a new entry to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot④\">[[progressive frame generations]]</a></code> with key <var>frameIndex</var> and value <var>frameGeneration</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>duration</var> be the presentation duration for <var>output</var> as\ndescribed by <var>encodedFrame</var>. If <var>encodedFrame</var> does not describe a\nduration, assign <code>null</code> to <var>duration</var>.</p>"
        },
        {
          "html": "Let <var>timestamp</var> be the presentation timestamp for <var>output</var> as\ndescribed by <var>encodedFrame</var>. If <var>encodedFrame</var> does not have a\ntimestamp:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>encodedFrame</var> is a still image assign <code>0</code> to <var>timestamp</var>.</p>"
            },
            {
              "html": "<p>If <var>encodedFrame</var> is a constant rate animated image and\n<var>duration</var> is not <code>null</code>, assign <code>|frameIndex| * |duration|</code> to\n<var>timestamp</var>.</p>"
            },
            {
              "html": "<p>If a <var>timestamp</var> can otherwise be trivially generated from\nmetadata without further decoding, assign that to <var>timestamp</var>.</p>"
            },
            {
              "html": "<p>Otherwise, assign <code>0</code> to <var>timestamp</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-encoded-data-slot\" id=\"ref-for-dom-imagedecoder-encoded-data-slot②②\">[[encoded data]]</a></code> contains orientation metadata\ndescribe it as <var>rotation</var> and <var>flip</var>, otherwise set <var>rotation</var> to 0\nand <var>flip</var> to false.</p>"
        },
        {
          "html": "<p>Assign <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderesult-image\" id=\"ref-for-dom-imagedecoderesult-image①\">image</a></code> with the result of running the\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#create-a-videoframe\" id=\"ref-for-create-a-videoframe③\">Create a VideoFrame</a> algorithm with <var>output</var>, <var>timestamp</var>,\n<var>duration</var>, <var>rotation</var>, and <var>flip</var>.</p>"
        },
        {
          "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot②\">[[pending decode promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Resolve <var>promise</var> with <var>decodeResult</var>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Resolve Decode",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-resolve-decode",
      "html": "",
      "rationale": "queue",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④⑤\">Queue a task</a> to perform these steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot⑤\">[[closed]]</a></code>, abort these steps.</p>"
            },
            {
              "html": "<p>Assert that <var>promise</var> is an element of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot③\">[[pending decode promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot④\">[[pending decode promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Resolve <var>promise</var> with <var>result</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Reject Infeasible Decode",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-reject-infeasible-decode",
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete\" id=\"ref-for-dom-imagedecoder-complete⑥\">complete</a></code> is <code>true</code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot⑥\">[[closed]]</a></code> is <code>true</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete\" id=\"ref-for-dom-imagedecoder-complete⑦\">complete</a></code> is <code>true</code>, let <var>exception</var> be a\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror⑤\">RangeError</a></code>. Otherwise, let <var>exception</var> be an\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑨\">InvalidStateError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤③\">DOMException</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④⑥\">Queue a task</a> to perform these steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot⑦\">[[closed]]</a></code>, abort these steps.</p>"
            },
            {
              "html": "<p>Assert that <var>promise</var> is an element of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot⑤\">[[pending decode promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Remove <var>promise</var> from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot⑥\">[[pending decode promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Reject <var>promise</var> with <var>exception</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Fatally Reject Bad Data",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-fatally-reject-bad-data",
      "html": "",
      "rationale": "queue",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task④⑦\">Queue a task</a> to perform these steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot⑧\">[[closed]]</a></code>, abort these steps.</p>"
            },
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder\" id=\"ref-for-imagedecoder-close-imagedecoder⑥\">Close ImageDecoder</a> algorithm with an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#encodingerror\" id=\"ref-for-encodingerror④\">EncodingError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤④\">DOMException</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Check Type Support",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-check-type-support",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the User Agent can provide a codec to support decoding <var>type</var>, return\n<code>true</code>.</p>"
        },
        {
          "html": "<p>Otherwise, return <code>false</code>.</p>"
        }
      ]
    },
    {
      "name": "ImageDecoder/Reset ImageDecoder",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-reset-imagedecoder",
      "html": "",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>Signal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot⑧\">[[codec implementation]]</a></code> to abort any active\ndecoding operation.</p>"
        },
        {
          "html": "For each <var>decodePromise</var> in\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot⑦\">[[pending decode promises]]</a></code>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>decodePromise</var> with <var>exception</var>.</p>"
            },
            {
              "html": "<p>Remove <var>decodePromise</var> from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-pending-decode-promises-slot\" id=\"ref-for-dom-imagedecoder-pending-decode-promises-slot⑧\">[[pending decode promises]]</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "ImageDecoder/Close ImageDecoder",
      "href": "https://w3c.github.io/webcodecs/#imagedecoder-close-imagedecoder",
      "html": "",
      "rationale": "run",
      "steps": [
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-reset-imagedecoder\" id=\"ref-for-imagedecoder-reset-imagedecoder①\">Reset ImageDecoder</a> algorithm with <var>exception</var>.</p>"
        },
        {
          "html": "<p>Assign <code>true</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot⑨\">[[closed]]</a></code>.</p>"
        },
        {
          "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-implementation-slot\" id=\"ref-for-dom-imagedecoder-codec-implementation-slot⑨\">[[codec implementation]]</a></code> and release associated\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#system-resources\" id=\"ref-for-system-resources⑨\">system resources</a>.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-imagetracklist-slot\" id=\"ref-for-dom-imagedecoder-imagetracklist-slot④\">[[ImageTrackList]]</a></code> is empty, reject\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-ready-promise-slot\" id=\"ref-for-dom-imagetracklist-ready-promise-slot①\">[[ready promise]]</a></code> with <var>exception</var>. Otherwise\nperform these steps,",
          "rationale": "remove",
          "steps": [
            {
              "html": "<p>Remove all entries from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-imagetracklist-slot\" id=\"ref-for-dom-imagedecoder-imagetracklist-slot⑤\">[[ImageTrackList]]</a></code>.</p>"
            },
            {
              "html": "<p>Assign <code>-1</code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-imagetracklist-slot\" id=\"ref-for-dom-imagedecoder-imagetracklist-slot⑥\">[[ImageTrackList]]</a></code>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot③\">[[selected index]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-complete-slot\" id=\"ref-for-dom-imagedecoder-complete-slot⑤\">[[complete]]</a></code> is false resolve\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-completed-promise-slot\" id=\"ref-for-dom-imagedecoder-completed-promise-slot③\">[[completed promise]]</a></code> with <var>exception</var>.</p>"
        }
      ]
    },
    {
      "name": "valid ImageDecoderInit",
      "href": "https://w3c.github.io/webcodecs/#valid-imagedecoderinit",
      "html": "To determine if an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dictdef-imagedecoderinit\" id=\"ref-for-dictdef-imagedecoderinit①\">ImageDecoderInit</a></code> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-imagedecoderinit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid ImageDecoderInit</dfn>,\nrun these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>type</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#valid-image-mime-type\" id=\"ref-for-valid-image-mime-type①\">valid image MIME type</a>, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <var>data</var> is of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://streams.spec.whatwg.org/#readablestream\" id=\"ref-for-readablestream③\">ReadableStream</a></code> and the ReadableStream is\n<a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#is-readable-stream-disturbed\" id=\"ref-for-is-readable-stream-disturbed\">disturbed</a> or <a data-link-type=\"dfn\" href=\"https://streams.spec.whatwg.org/#readablestream-locked\" id=\"ref-for-readablestream-locked\">locked</a>, return <code>false</code>.</p>"
        },
        {
          "html": "If <var>data</var> is of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#BufferSource\" id=\"ref-for-BufferSource①④\">BufferSource</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>data</var> is [<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-detached\" id=\"ref-for-buffersource-detached②\">detached</a>], return false.</p>"
            },
            {
              "html": "<p>If <var>data</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty①\">is empty</a>, return <code>false</code>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredwidth\" id=\"ref-for-dom-imagedecoderinit-desiredwidth②\">desiredWidth</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③①\">exists</a> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredheight\" id=\"ref-for-dom-imagedecoderinit-desiredheight②\">desiredHeight</a></code> does not exist, return <code>false</code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredheight\" id=\"ref-for-dom-imagedecoderinit-desiredheight③\">desiredHeight</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③②\">exists</a> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoderinit-desiredwidth\" id=\"ref-for-dom-imagedecoderinit-desiredwidth③\">desiredWidth</a></code> does not exist, return <code>false</code>.</p>"
        },
        {
          "html": "<p>Return <code>true</code>.</p>"
        }
      ]
    },
    {
      "name": "ImageTrackList/selectedTrack",
      "href": "https://w3c.github.io/webcodecs/#dom-imagetracklist-selectedtrack",
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selectedtrack\" id=\"ref-for-dom-imagetracklist-selectedtrack①\">selectedTrack</a></code> getter steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot⑤\">[[selected index]]</a></code> is <code>-1</code>, return <code>null</code>.</p>"
        },
        {
          "html": "<p>Otherwise, return the ImageTrack from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot⑥\">[[track list]]</a></code>\nat the position indicated by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot⑥\">[[selected index]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "ImageTrack/selected",
      "href": "https://w3c.github.io/webcodecs/#dom-imagetrack-selected",
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected\" id=\"ref-for-dom-imagetrack-selected②\">selected</a></code> setter steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot①\">[[ImageDecoder]]</a></code>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-closed-slot\" id=\"ref-for-dom-imagedecoder-closed-slot①⓪\">[[closed]]</a></code> slot is\n<code>true</code>, abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>newValue</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#the-given-value\" id=\"ref-for-the-given-value\">the given value</a>.</p>"
        },
        {
          "html": "<p>If <var>newValue</var> equals <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected-slot\" id=\"ref-for-dom-imagetrack-selected-slot③\">[[selected]]</a></code>, abort these steps.</p>"
        },
        {
          "html": "<p>Assign <var>newValue</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected-slot\" id=\"ref-for-dom-imagetrack-selected-slot④\">[[selected]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>parentTrackList</var> be <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagetracklist-slot\" id=\"ref-for-dom-imagetrack-imagetracklist-slot①\">[[ImageTrackList]]</a></code></p>"
        },
        {
          "html": "<p>Let <var>oldSelectedIndex</var> be the value of <var>parentTrackList</var>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot⑦\">[[selected index]]</a></code>.</p>"
        },
        {
          "html": "If <var>oldSelectedIndex</var> is not <code>-1</code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>oldSelectedTrack</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack①②\">ImageTrack</a></code> in <var>parentTrackList</var>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot⑦\">[[track list]]</a></code> at the position of\n<var>oldSelectedIndex</var>.</p>"
            },
            {
              "html": "<p>Assign <code>false</code> to <var>oldSelectedTrack</var> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-selected-slot\" id=\"ref-for-dom-imagetrack-selected-slot⑤\">[[selected]]</a></code></p>"
            }
          ]
        },
        {
          "html": "<p>If <var>newValue</var> is <code>true</code>, let <var>selectedIndex</var> be the index of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③\">this</a>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#imagetrack\" id=\"ref-for-imagetrack①③\">ImageTrack</a></code> within <var>parentTrackList</var>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-track-list-slot\" id=\"ref-for-dom-imagetracklist-track-list-slot⑧\">[[track list]]</a></code>. Otherwise, let <var>selectedIndex</var> be\n<code>-1</code>.</p>"
        },
        {
          "html": "<p>Assign <var>selectedIndex</var> to <var>parentTrackList</var>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetracklist-selected-index-slot\" id=\"ref-for-dom-imagetracklist-selected-index-slot⑧\">[[selected index]]</a></code>.</p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#imagedecoder-reset-imagedecoder\" id=\"ref-for-imagedecoder-reset-imagedecoder②\">Reset ImageDecoder</a> algorithm on\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot②\">[[ImageDecoder]]</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#enqueues-a-control-message\" id=\"ref-for-enqueues-a-control-message②②\">Queue a control message</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot③\">[[ImageDecoder]]</a></code>’s\n<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#control-message-queue\" id=\"ref-for-control-message-queue①①\">control message queue</a> to update the internal selected track\nindex with <var>selectedIndex</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#process-the-control-message-queue\" id=\"ref-for-process-the-control-message-queue②⑤\">Process the control message queue</a> belonging to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot④\">[[ImageDecoder]]</a></code>.</p>"
        }
      ]
    },
    {
      "name": "ImageTrack/selected",
      "href": "https://w3c.github.io/webcodecs/#dom-imagetrack-selected",
      "html": "<a data-link-type=\"dfn\" href=\"https://w3c.github.io/webcodecs/#running-a-control-message\" id=\"ref-for-running-a-control-message①⑥\">Running a control message</a> to update the internal selected track index\nmeans running these steps:",
      "rationale": "enqueue",
      "steps": [
        {
          "html": "Enqueue the following steps to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagetrack-imagedecoder-slot\" id=\"ref-for-dom-imagetrack-imagedecoder-slot⑤\">[[ImageDecoder]]</a></code>’s\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-codec-work-queue-slot\" id=\"ref-for-dom-imagedecoder-codec-work-queue-slot④\">[[codec work queue]]</a></code>:",
          "rationale": "assign",
          "steps": [
            {
              "html": "<p>Assign <var>selectedIndex</var> to\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-internal-selected-track-index-slot\" id=\"ref-for-dom-imagedecoder-internal-selected-track-index-slot⑥\">[[internal selected track index]]</a></code>.</p>"
            },
            {
              "html": "<p>Remove all entries from\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/webcodecs/#dom-imagedecoder-progressive-frame-generations-slot\" id=\"ref-for-dom-imagedecoder-progressive-frame-generations-slot⑤\">[[progressive frame generations]]</a></code>.</p>"
            }
          ]
        }
      ]
    }
  ]
}