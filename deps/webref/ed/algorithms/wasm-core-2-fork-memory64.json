{
  "spec": {
    "title": "WebAssembly Core Specification",
    "url": "https://webassembly.github.io/memory64/core/bikeshed/"
  },
  "algorithms": [
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-unop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">unop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be a possible result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">unop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-binop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">binop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be a possible result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">binop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-testop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">testop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-relop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-numeric\"><span class=\"mord\"><span class=\"mord mathit\">relop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-cvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.445em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-cvtop\"><span class=\"mord\"><span class=\"mord mathit\">cvtop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be a possible result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.445em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-cvtop\"><span class=\"mord\"><span class=\"mord mathit\">cvtop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-null\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-func\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-is-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-is-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-eq\"><span class=\"std std-ref\">validation</span></a>, two <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference values</span></a> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is the same as <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">F.</span><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-closed\"><span class=\"std std-ref\">closed</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to validation, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref\"><span class=\"std std-ref\">valid</span></a> with some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-reftype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">F.</span><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-closed\"><span class=\"std std-ref\">closed</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to validation, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref\"><span class=\"std std-ref\">valid</span></a> with some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-reftype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-i31\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623em;vertical-align:-0.1944em;\"></span><span class=\"mord mathrm\">j</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-wrap\"><span class=\"mord\"><span class=\"mord mathrm\">wrap</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">31</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">i31</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-i31-get-sx\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\">i31</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-i31-get-sx\"><span class=\"std std-ref\">validation</span></a>, a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-i31\"><span class=\"std std-ref\">scalar reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">i31</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623em;vertical-align:-0.1944em;\"></span><span class=\"mord mathrm\">j</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1331em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">31</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8738em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "For every value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1802em;vertical-align:-0.4302em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-packval\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.2341em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> the concatenation of all field values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">si</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structinst\"><span class=\"std std-ref\">structure instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">si</span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-struct\"><span class=\"std std-ref\">structure reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For every <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpacktype\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9445em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
            },
            {
              "html": "<p>Push the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9445em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-struct\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">struct.new</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> with at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> fields.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span>-th <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-struct\"><span class=\"std std-ref\">structure reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structinst\"><span class=\"std std-ref\">structure instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists and has at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> fields.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldval\"><span class=\"std std-ref\">field value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.6266em;vertical-align:-0.5303em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpackval\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.2341em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> with at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> fields.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structtype\"><span class=\"std std-ref\">structure type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span>-th <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-struct\"><span class=\"std std-ref\">structure reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-structinst\"><span class=\"std std-ref\">structure instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists and has at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> fields.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2775em;vertical-align:-0.5275em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-packval\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.2341em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldval\"><span class=\"std std-ref\">field value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> times.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpacktype\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Push the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to the stack <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> times.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-fixed\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-fixed\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-fixed\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "For every value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-packval\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all field values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ai</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ai</span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, two <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span> has a defined <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#bitwidth-fieldtype\"><span class=\"std std-ref\">bit width</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#bitwidth-fieldtype\"><span class=\"std std-ref\">bit width</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span> divided by eight.</p>"
        },
        {
          "html": "If the sum of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> times <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">byte</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">z</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpacktype\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each of the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> consecutive subsequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8562em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">z</span></span></span></span></span></span></span></span></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the constant for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8562em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">z</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-new-elem\"><span class=\"std std-ref\">validation</span></a>, two <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If the sum of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">n</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the references <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldval\"><span class=\"std std-ref\">field value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4794em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpackval\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-packval\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldval\"><span class=\"std std-ref\">field value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-fieldval\"><span class=\"mord\"><span class=\"mord mathit\">fieldval</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathrm\">d</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the array size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathit\">mut</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">st</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-getfield\"><span class=\"mord\"><span class=\"mord mathrm\">getfield</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">st</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Assert: due to the earlier check against the array size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Assert: due to the earlier check against the array size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Assert: due to the earlier check against the array size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Assert: due to the earlier check against the array size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-getfield\"><span class=\"mord\"><span class=\"mord mathrm\">getfield</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">st</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array.copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, three values of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span> has a defined <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#bitwidth-fieldtype\"><span class=\"std std-ref\">bit width</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#bitwidth-fieldtype\"><span class=\"std std-ref\">bit width</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-fieldtype\"><span class=\"std std-ref\">field type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span> divided by eight.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, or the sum of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> times <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">byte</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">z</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpacktype\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the constant for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">ft</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">z</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.init_data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ft</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#aux-expand-deftype\"><span class=\"std std-ref\">expanded</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arraytype\"><span class=\"std std-ref\">array type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, three values of type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-array\"><span class=\"std std-ref\">array reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>, or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\">array.init_elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-any-convert-extern\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">any</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-any-convert-extern\"><span class=\"std std-ref\">validation</span></a>, a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-extern\"><span class=\"std std-ref\">external reference</span></a>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">extern</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-extern-convert-any\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\">extern</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">extern</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0307em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vvunop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vvunop\"><span class=\"mord\"><span class=\"mord mathit\">vvunop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">v128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vvbinop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vvbinop\"><span class=\"mord\"><span class=\"mord mathit\">vvbinop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">v128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vvternop\"><span class=\"std std-ref\">validation</span></a>, three values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vvternop\"><span class=\"mord\"><span class=\"mord mathit\">vvternop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">v128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vvtestop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-ine\"><span class=\"mord\"><span class=\"mord mathrm\">ine</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">128</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vbinop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the two sequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">240</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">]]</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">15</span><span class=\"mclose\">]])</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vbinop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2084em;vertical-align:-0.31em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-irelaxed-swizzle\"><span class=\"mord\"><span class=\"mord mathrm\">frelaxed_swizzle</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-shuffle\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-shuffle\"><span class=\"std std-ref\">validation</span></a>, for all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> it holds that <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">32</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the two sequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">]]</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">15</span><span class=\"mclose\">]])</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> be the type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpackshape\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord\"><span class=\"mord mathit\">shape</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-splat\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-dim\"><span class=\"mord\"><span class=\"mord mathrm\">dim</span></span></a><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord\"><span class=\"mord mathit\">shape</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2917em;vertical-align:-0.3932em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4429em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-extract-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-extract-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpackshape\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf\">x</span><span class=\"mord mathrm\">N</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4794em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">s</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-replace-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-dim\"><span class=\"mord\"><span class=\"mord mathrm\">dim</span></span></a><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord\"><span class=\"mord mathit\">shape</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-unpackshape\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord\"><span class=\"mord mathit\">shape</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-replace-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-replace-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2917em;vertical-align:-0.3932em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4429em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-replace\"><span class=\"mrel\"><span class=\"mord text\"><span class=\"mord\">with</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> on the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vunop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vunop\"><span class=\"mord\"><span class=\"mord mathit\">vunop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vbinop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vbinop\"><span class=\"mord\"><span class=\"mord mathit\">vbinop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be a possible result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vbinop\"><span class=\"mord\"><span class=\"mord mathit\">vbinop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vternop\"><span class=\"std std-ref\">validation</span></a>, three values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vternop\"><span class=\"mord\"><span class=\"mord mathit\">vternop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-relaxed-laneselect\"><span class=\"std std-ref\">validation</span></a>, three values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">bit width</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣t∣</span></span></span></span></span></span></span> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1097em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-irelaxed-laneselect\"><span class=\"mord\"><span class=\"mord mathrm\">irelaxed_laneselect</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vrelop\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vrelop\"><span class=\"mord\"><span class=\"mord mathit\">vrelop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1136em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-s\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣t∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vishiftop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vishiftop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vishiftop\"><span class=\"mord\"><span class=\"mord mathit\">vishiftop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vtestop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-shape\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">shape</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.6em;vertical-align:-0.55em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-tobool\"><span class=\"mord\"><span class=\"mord mathrm\">bool</span></span></a><span class=\"mopen\">(</span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:0em;\">⋀</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-bitmask\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">B</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">bit width</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣t∣</span></span></span></span></span></span></span> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.251em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-ilt-s\"><span class=\"mord\"><span class=\"mord mathrm\">ilt_s</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the two sequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8913em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span><span class=\"mbin mtight\">−</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-ibits\"><span class=\"mord\"><span class=\"mord mathrm\">ibits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-narrow\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3383em;vertical-align:-0.447em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-narrow-u\"><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">narrow</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.428em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3383em;vertical-align:-0.447em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-narrow-u\"><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">narrow</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.428em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0858em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the two sequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1383em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vcvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.197em;vertical-align:-0.447em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vcvtop\"><span class=\"mord\"><span class=\"mord mathit\">vcvtop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.428em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">M/2</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vcvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-half\"><span class=\"mord\"><span class=\"mord mathit\">half</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">low</span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5089em;vertical-align:-0.447em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vcvtop\"><span class=\"mord\"><span class=\"mord mathit\">vcvtop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.428em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vcvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5089em;vertical-align:-0.447em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-vcvtop\"><span class=\"mord\"><span class=\"mord mathit\">vcvtop</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.428em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the two sequences <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8913em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-dot\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i16x8</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0446em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-s\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i16x8</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0446em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-s\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-imul\"><span class=\"mord\"><span class=\"mord mathrm\">imul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i32x4</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-relaxed-dot\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2458em;vertical-align:-0.4958em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-irelaxed-dot-mul\"><span class=\"mord\"><span class=\"mord mathrm\">irelaxed_dot_mul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">8</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">16</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span></span></span></span></p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2238em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd-sat-s\"><span class=\"mord\"><span class=\"mord mathrm\">iadd_sat_s</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i16x8</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-relaxed-dot\"><span class=\"std std-ref\">validation</span></a>, three values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2458em;vertical-align:-0.4958em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-irelaxed-dot-mul\"><span class=\"mord\"><span class=\"mord mathrm\">irelaxed_dot_mul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">8</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">16</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i8x16</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">))</span></span></span></span></span></span></span></p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2238em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd-sat-s\"><span class=\"mord\"><span class=\"mord mathrm\">iadd_sat_s</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1502em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-s\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-s\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">16</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i32x4</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">j</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathrm\">k</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i32x4</span></span></a></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">4</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">M/2</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-extmul\"><span class=\"std std-ref\">validation</span></a>, two values of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-half\"><span class=\"mord\"><span class=\"mord mathit\">half</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">low</span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-imul\"><span class=\"mord\"><span class=\"mord mathrm\">imul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> onto the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-vec\"><span class=\"std std-ref\">syntax</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">M/2</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-vec-extadd-pairwise\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2479em;vertical-align:-0.3494em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">k</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-drop\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-select\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-select\"><span class=\"std std-ref\">validation</span></a>, two more values (of the same <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a>) are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> is not <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-local-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists and is non-empty.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-local-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-local-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-local-tee\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-local-set\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-variable\"><span class=\"mord\"><span class=\"mord mathsf\">local.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-global-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globaladdrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globaladdrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-global-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">glob</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">glob</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-global-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globaladdrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globaladdrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-global-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">glob</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-global-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">glob</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span> with the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-get\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is not smaller than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is not smaller than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Replace the element <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-size\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-size\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-grow\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-grow\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-grow\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span> be the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>, for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1691em;vertical-align:-0.4191em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-signed\"><span class=\"mord\"><span class=\"mord mathrm\">signed</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Either:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "If <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#grow-table\"><span class=\"std std-ref\">growing</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> entries with initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> succeeds, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "html": "",
      "rationale": "push",
      "steps": [
        {
          "html": "<p>push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7512em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9012em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span> or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the table size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the table size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to the earlier check against the table size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the table size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "execute",
      "steps": [
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "execute",
      "steps": [
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">table.copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span> or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the table size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the segment size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-elem-drop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elemaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-elem-drop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-loadn\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-loadn\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-loadn\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> is not part of the instruction, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-numtype\"><span class=\"std std-ref\">bit width</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣t∣</span></span></span></span></span></span></span> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span></span></span></span></span> are part of the instruction, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the integer for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">∣t∣</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the constant for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:</p>\n           <blockquote style=\"border-color: transparent\">\n            <div>\n             \n            </div>\n           </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the integer for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">M</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">M/8</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">M/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">W</span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">2</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1331em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">W</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">W</span><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:</p>\n           <blockquote style=\"border-color: transparent\">\n            <div>\n             \n            </div>\n           </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the integer for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">128/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mathsf mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">L</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">L</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:</p>\n           <blockquote style=\"border-color: transparent\">\n            <div>\n             \n            </div>\n           </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the integer for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0446em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-extend-u\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">u</span></span></span></span></span></span></span></span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">128</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">v</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-load-extend\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> be the constant for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">r</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">128/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mathsf mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">v</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1484em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4507em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mathsf mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">L</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-replace\"><span class=\"mrel\"><span class=\"mord text\"><span class=\"mord\">with</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">r</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> is not part of the instruction, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-numtype\"><span class=\"std std-ref\">bit width</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣t∣</span></span></span></span></span></span></span> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> is part of the instruction, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1691em;vertical-align:-0.4191em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#op-wrap\"><span class=\"mord\"><span class=\"mord mathrm\">wrap</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣t∣</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Replace the bytes <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6556em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">v128</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-storen\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the integer <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memarg\"><span class=\"mord\"><span class=\"mord mathit\">memarg</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">N/8</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">128/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord mathsf mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a><span class=\"mord mathsf mtight\">x</span><span class=\"mord mathrm mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-int\"><span class=\"mord mathit mtight\">i</span><span class=\"mord mathrm mtight\">N</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace the bytes <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#notation-slice\"><span class=\"mrel\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-size\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-size\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> divided by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">page size</span></a>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-grow\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-grow\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> divided by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">page size</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-grow\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>, for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1691em;vertical-align:-0.4191em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-signed\"><span class=\"mord\"><span class=\"mord mathrm\">signed</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Either:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "If <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#grow-mem\"><span class=\"std std-ref\">growing</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">pages</span></a> succeeds, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">sz</span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "html": "",
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">err</span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a><span class=\"mord mathsf\">8</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">memory.fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">sa</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">sa</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">sa</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span>, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">load</span></span></a><span class=\"mord\"><span class=\"mord mathsf\">8_u</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a><span class=\"mord mathsf\">8</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">load</span></span></a><span class=\"mord\"><span class=\"mord mathsf\">8_u</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a><span class=\"mord mathsf\">8</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory.copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ma</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">data</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">da</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a value of some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-addrtype\"><span class=\"std std-ref\">address type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span> is larger than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathrm\">b</span></span></span></span></span></span> be the byte <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">s</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">d</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">b</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathsf\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a><span class=\"mord mathsf\">8</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">align</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Assert: due to the earlier check against the memory size, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8738em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">memory.init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-data-drop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">dataaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-data-drop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathnormal\">ϵ</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "do",
      "steps": [
        {
          "html": "<p>Do nothing.</p>"
        }
      ]
    },
    {
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-blocktype\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instrtype\"><span class=\"std std-ref\">instruction type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the label whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose continuation is the end of the block.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-block\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-seq-enter\"><span class=\"std std-ref\">Enter</span></a> the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> with label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-blocktype\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instrtype\"><span class=\"std std-ref\">instruction type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the label whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> and whose continuation is the start of the loop.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-loop\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-seq-enter\"><span class=\"std std-ref\">Enter</span></a> the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> with label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-if\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> is non-zero, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the block instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">block</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the block instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">block</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tagaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tagaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">ta</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-taginst\"><span class=\"std std-ref\">tag instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">ta</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1305em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exnaddr\"><span class=\"std std-ref\">exception address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-exception\"><span class=\"std std-ref\">allocating</span></a> an exception instance with tag address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">ta</span></span></span></span></span></span></span> and initializer values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">exn</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">ea</span><span class=\"mclose\">]</span></span></span></span></span></span></span></p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-exn\"><span class=\"std std-ref\">exception reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\"><span class=\"mord mathit\">exn</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">exn</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "While the stack is not empty and the top of the stack is not an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-handler\"><span class=\"std std-ref\">exception handler</span></a>, do:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop the top element from the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: the stack is now either empty, or there is an exception handler on the top of the stack.</p>"
        },
        {
          "html": "<p>If the stack is empty, then:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the exception <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> as a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-result\"><span class=\"std std-ref\">result</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: there is an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-handler\"><span class=\"std std-ref\">exception handler</span></a> on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the exception handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the exception reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> back to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span> again.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the first <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-catch\"><span class=\"std std-ref\">catch clause</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9148em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> the remaining clauses.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span> and the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> equals <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tagaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">exn</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span> and the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> equals <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tagaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">exn</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the exception reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch_all</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>, then:",
              "rationale": "execute",
              "steps": [
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_all_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the exception reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the modified handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1648em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> back to the stack.</p>"
                },
                {
                  "html": "<p>Push the exception reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> back to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span> again.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-blocktype\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instrtype\"><span class=\"std std-ref\">instruction type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1302em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-fblocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">S</span><span class=\"mpunct mtight\">;</span><span class=\"mord mathrm mtight\">F</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-blocktype\"><span class=\"mord\"><span class=\"mord mathit\">blocktype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-try-table\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the label whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose continuation is the end of the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">try_table</span></span></a></span></span></span></span></span> instruction.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-handler-enter\"><span class=\"std std-ref\">Enter</span></a> the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9957em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> with label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> and exception handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">{</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-br\"><span class=\"std std-ref\">validation</span></a>, the stack contains at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> labels.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathrm\">l</span></span></span></span></span></span>-th label appearing on the stack, starting from the top and counting from zero.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-br\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "Repeat <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span> times:",
          "rationale": "while",
          "steps": [
            {
              "html": "While the top of the stack is a value or a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-handler\"><span class=\"std std-ref\">handler</span></a>, do:",
              "rationale": "pop",
              "steps": [
                {
                  "html": "<p>Pop the value or handler from the stack.</p>"
                }
              ]
            },
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-br\"><span class=\"std std-ref\">validation</span></a>, the top of the stack now is a label.</p>"
            },
            {
              "html": "<p>Pop the label from the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Jump to the continuation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-br-if\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> is non-zero, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-br-table\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is smaller than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-is-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-is-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">F.</span><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-closed\"><span class=\"std std-ref\">closed</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to validation, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref\"><span class=\"std std-ref\">valid</span></a> with some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-reftype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">F.</span><a class=\"mtight\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-closed\"><span class=\"std std-ref\">closed</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to validation, the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-ref\"><span class=\"std std-ref\">valid</span></a> with some <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span> does not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-reftype\"><span class=\"std std-ref\">match</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-br\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-return\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the results <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-return\"><span class=\"std std-ref\">validation</span></a>, the stack contains at least one <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "While the top of the stack is not a frame, do:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop the top element from the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: the top of the stack is the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the frame from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Jump to the instruction after the original call that pushed the frame.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-ref\"><span class=\"std std-ref\">validation</span></a>, a null or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">function reference</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:</p>\n           <blockquote style=\"border-color: transparent\">\n            <div>\n             \n            </div>\n           </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">function reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">expect</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, a value with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is not smaller than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation of table mutation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-func\"><span class=\"std std-ref\">function reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref-func\"><span class=\"std std-ref\">function reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table-set\"><span class=\"std std-ref\">validation of table mutation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathit\">f</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">actual</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">f</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">actual</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> does not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-deftype\"><span class=\"std std-ref\">match</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">expect</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-return-invoke\"><span class=\"std std-ref\">Tail-invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">function reference</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\">ref.null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:</p>\n           <blockquote style=\"border-color: transparent\">\n            <div>\n             \n            </div>\n           </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">function reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-return-invoke\"><span class=\"std std-ref\">Tail-invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">tab</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathit\">ta</span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">expect</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, a value with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is not smaller than the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is uninitialized, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">tab</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call-indirect\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathit\">f</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">actual</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-functype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">f</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">actual</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> does not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-functype\"><span class=\"std std-ref\">match</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">expect</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-return-invoke\"><span class=\"std std-ref\">Tail-invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Jump to the start of the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "When the end of a block is reached without a jump, <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exception\"><span class=\"std std-ref\">exception</span></a>, or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#trap\"><span class=\"std std-ref\">trap</span></a> aborting it, then the following steps are performed.",
      "rationale": "pop",
      "steps": [
        {
          "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-instr-seq\"><span class=\"std std-ref\">validation</span></a>, the label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the label from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the position after the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a></span></span></span></span></span> of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-instr-control\"><span class=\"std std-ref\">structured control instruction</span></a> associated with the label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> onto the stack.</p>"
        },
        {
          "html": "<p>Jump to the start of the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "When the end of a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">try_table</span></span></a></span></span></span></span></span> block is reached without a jump, <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exception\"><span class=\"std std-ref\">exception</span></a>, or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#trap\"><span class=\"std std-ref\">trap</span></a>, then the following steps are performed.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> be the number of values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-instr-seq\"><span class=\"std std-ref\">validation</span></a>, a handler and a label are now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the label from the stack.</p>"
        },
        {
          "html": "<p>Pop the handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the position after the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a></span></span></span></span></span> of the administrative instruction associated with the handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-comptype\"><span class=\"std std-ref\">composite type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-expand-deftype\"><span class=\"mord\"><span class=\"mord mathrm\">expand</span></span></a><span class=\"mopen\">(</span><span class=\"mord mathit\">f</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-local\"><span class=\"std std-ref\">locals</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">f.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">code</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-expr\"><span class=\"std std-ref\">expression</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">f.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">code</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">body</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">f.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the activation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> with arity <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-label\"><span class=\"std std-ref\">label</span></a> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> and whose continuation is the end of the function.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-instr-seq-enter\"><span class=\"std std-ref\">Enter</span></a> the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> with label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-comptype\"><span class=\"std std-ref\">composite type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-expand-deftype\"><span class=\"mord\"><span class=\"mord mathrm\">expand</span></span></a><span class=\"mopen\">(</span><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-return-call\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the results <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-return-call\"><span class=\"std std-ref\">validation</span></a>, the stack contains at least one <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "While the top of the stack is not a frame, do:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop the top element from the stack.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: the top of the stack is a frame.</p>"
        },
        {
          "html": "<p>Pop the frame from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "When the end of a function is reached without a jump (including through <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5714em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">return</span></span></a></span></span></span></span></span>), or an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exception\"><span class=\"std std-ref\">exception</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#trap\"><span class=\"std std-ref\">trap</span></a> aborting it, then the following steps are performed.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of the activation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-instr-seq\"><span class=\"std std-ref\">validation</span></a>, there are <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the results <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-func\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the frame from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the instruction after the original call.</p>"
        }
      ]
    },
    {
      "html": "An <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-expr\"><span class=\"std std-ref\">expression</span></a> is <em>evaluated</em> relative to a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a> pointing to its containing <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a>.",
      "rationale": "jump",
      "steps": [
        {
          "html": "<p>Jump to the start of the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> of the expression.</p>"
        },
        {
          "html": "<p>Execute the instruction sequence.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-expr\"><span class=\"std std-ref\">validation</span></a>, the top of the stack contains a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a>.</p>"
        },
        {
          "html": "<p>Pop the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> from the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-func\"><span class=\"std std-ref\">function</span></a> to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> its <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">code</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "append",
      "steps": [
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-hostfunc\"><span class=\"mord\"><span class=\"mord mathit\">hostfunc</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-hostfunc\"><span class=\"std std-ref\">host function</span></a> to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> its <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-functype\"><span class=\"std std-ref\">defined type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">hostcode</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-hostfunc\"><span class=\"mord\"><span class=\"mord mathit\">hostfunc</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> of the table to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> the initialization value.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1491em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">min</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">max</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> be the structure of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> elements set to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> of the memory to allocate.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1491em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">min</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">max</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span><span class=\"mclose\">})</span></span></span></span></span></span></span> be the structure of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathtt\">0x</span><span class=\"mord\"><span class=\"mord mathtt\">00</span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathrm mtight\">64</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">Ki</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> that contains <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> pages of zeroed <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">bytes</span></a>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> to allocate.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathit\">taginst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-taginst\"><span class=\"std std-ref\">tag instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathit\">taginst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">ta</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> associated with the exception to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the values to initialize the exception with.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exnaddr\"><span class=\"std std-ref\">exception address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">ta</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> of the global to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span> its initialization <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathit\">globalinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathit\">globalinst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a></span></span></span></span></span> be the elements’ type and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> the vector of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">references</span></a> to allocate.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the vector of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">bytes</span></a> to allocate.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the first free <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span> to the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a></span></span></span></span></span> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> to grow, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> the number of elements by which to grow it, and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> the initialization value.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">len</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> added to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> be the structure of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8362em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">min</span></span></a></span></span></span></span></span> updated to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">len</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0862em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-tabletype\"><span class=\"std std-ref\">valid</span></a>, then fail.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9432em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Set <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0862em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> to grow and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> the number of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">pages</span></a> by which to grow it.</p>"
        },
        {
          "html": "<p>Assert: The length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> is divisible by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">page size</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">len</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> added to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> divided by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">page size</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> be the structure of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8362em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathsf\">min</span></span></a></span></span></span></span></span> updated to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">len</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0862em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memtype\"><span class=\"std std-ref\">valid</span></a>, then fail.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> times <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">bytes</span></a> with value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathtt\">0x</span><span class=\"mord\"><span class=\"mord mathtt\">00</span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Set <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0862em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-addrtype\"><span class=\"mord\"><span class=\"mord mathit\">addrtype</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "The allocation function for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-module\"><span class=\"std std-ref\">modules</span></a> requires a suitable list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external values</span></a> that are assumed to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-externtype\"><span class=\"std std-ref\">match</span></a> the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-import\"><span class=\"std std-ref\">import</span></a> vector of the module,\na list of initialization <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> for the module’s <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-global\"><span class=\"std std-ref\">globals</span></a>,\nand list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> vectors for the module’s <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segments</span></a>.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-module\"><span class=\"std std-ref\">module</span></a> to allocate and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> the vector of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external values</span></a> providing the module’s imports, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> the initialization <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> of the module’s <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-global\"><span class=\"std std-ref\">globals</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> the initializer <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> of the module’s <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">tables</span></a>, and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">e</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> vectors of the module’s <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segments</span></a>.</p>"
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0832em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-inst\"><span class=\"std std-ref\">instantiation</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0832em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-func\"><span class=\"std std-ref\">function</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-func\"><span class=\"std std-ref\">allocating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> for the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">table</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-limits\"><span class=\"mord\"><span class=\"mord mathit\">limits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> obtained by <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-inst\"><span class=\"std std-ref\">instantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-table\"><span class=\"std std-ref\">allocating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> with initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-mem\"><span class=\"std std-ref\">memory</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> obtained by <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-inst\"><span class=\"std std-ref\">insantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7659em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-mem\"><span class=\"std std-ref\">allocating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-global\"><span class=\"std std-ref\">global</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> obtained by <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-inst\"><span class=\"std std-ref\">instantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-global\"><span class=\"std std-ref\">allocating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> with initializer value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tag\"><span class=\"std std-ref\">tag</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-tag\"><span class=\"std std-ref\">allocating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the element <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> obtained by <cite>instantiating &lt;type-inst&gt;</cite> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elemaddr\"><span class=\"mord\"><span class=\"mord mathit\">elemaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-elem\"><span class=\"std std-ref\">allocating</span></a> a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> with contents <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">e</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-data\"><span class=\"std std-ref\">data segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-dataaddr\"><span class=\"mord\"><span class=\"mord mathit\">dataaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> resulting from <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-data\"><span class=\"std std-ref\">allocating</span></a> a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> with contents <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-deftype\"><span class=\"std std-ref\">defined types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elemaddr\"><span class=\"mord\"><span class=\"mord mathit\">elemaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemaddr\"><span class=\"std std-ref\">element addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elemaddr\"><span class=\"mord\"><span class=\"mord mathit\">elemaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-dataaddr\"><span class=\"mord\"><span class=\"mord mathit\">dataaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-dataaddr\"><span class=\"std std-ref\">data addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-dataaddr\"><span class=\"mord\"><span class=\"mord mathit\">dataaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcaddr\"><span class=\"std std-ref\">function addresses</span></a> extracted from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, concatenated with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableaddr\"><span class=\"std std-ref\">table addresses</span></a> extracted from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, concatenated with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memaddr\"><span class=\"std std-ref\">memory addresses</span></a> extracted from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, concatenated with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaladdr\"><span class=\"std std-ref\">global addresses</span></a> extracted from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, concatenated with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag addresses</span></a> extracted from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, concatenated with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-export\"><span class=\"std std-ref\">export</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a></span></span></span></span></span></span>, do:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a function export for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcidx\"><span class=\"std std-ref\">function index</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Else, if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a table export for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableidx\"><span class=\"std std-ref\">table index</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Else, if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a memory export for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memidx\"><span class=\"std std-ref\">memory index</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathsf\">mem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Else, if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a global export for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalidx\"><span class=\"std std-ref\">global index</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Else, if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a tag export for <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagidx\"><span class=\"std std-ref\">tag index</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exportinst\"><span class=\"std std-ref\">export instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exportinst\"><span class=\"std std-ref\">export instances</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcaddrs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tableaddrs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">memaddrs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globaladdrs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tagaddrs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">mod</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "Instantiation checks that the module is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid\"><span class=\"std std-ref\">valid</span></a> and the provided imports <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-externtype\"><span class=\"std std-ref\">match</span></a> the declared types,\nand may <em>fail</em> with an error otherwise.\nInstantiation can also result in an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exception\"><span class=\"std std-ref\">exception</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#trap\"><span class=\"std std-ref\">trap</span></a> when initializing a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">table</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-mem\"><span class=\"std std-ref\">memory</span></a> from an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-data\"><span class=\"std std-ref\">active segment</span></a> or when executing the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-start\"><span class=\"std std-ref\">start</span></a> function.\nIt is up to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#embedder\"><span class=\"std std-ref\">embedder</span></a> to define how such conditions are reported.",
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">valid</span></a>, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">valid</span></a> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externtype\"><span class=\"std std-ref\">external types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9614em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> classifying its <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-import\"><span class=\"std std-ref\">imports</span></a>.</p>"
        },
        {
          "html": "If the number <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-import\"><span class=\"std std-ref\">imports</span></a> is not equal to the number <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> of provided <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external values</span></a>, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> and <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externtype\"><span class=\"std std-ref\">external type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9614em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">im</span></span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-externval\"><span class=\"std std-ref\">valid</span></a> with an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externtype\"><span class=\"std std-ref\">external type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in store <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>, then:",
              "rationale": "fail",
              "steps": [
                {
                  "html": "<p>Fail.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externtype\"><span class=\"std std-ref\">external type</span></a> obtained by <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#type-inst\"><span class=\"std std-ref\">instantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> defined below.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> does not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-externtype\"><span class=\"std std-ref\">match</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "fail",
              "steps": [
                {
                  "html": "<p>Fail.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "html": "Instantiation checks that the module is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid\"><span class=\"std std-ref\">valid</span></a> and the provided imports <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-externtype\"><span class=\"std std-ref\">match</span></a> the declared types,\nand may <em>fail</em> with an error otherwise.\nInstantiation can also result in an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exception\"><span class=\"std std-ref\">exception</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#trap\"><span class=\"std std-ref\">trap</span></a> when initializing a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">table</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-mem\"><span class=\"std std-ref\">memory</span></a> from an <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-data\"><span class=\"std std-ref\">active segment</span></a> or when executing the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-start\"><span class=\"std std-ref\">start</span></a> function.\nIt is up to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#embedder\"><span class=\"std std-ref\">embedder</span></a> to define how such conditions are reported.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the auxiliary <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathnormal\">ϵ</span><span class=\"mclose\">}</span></span></span></span></span></span></span>, that consists of the final module instance <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>, defined below.</p>"
        },
        {
          "html": "<p>Push the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the vector of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-global\"><span class=\"std std-ref\">global</span></a> initialization <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> determined by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>. These may be calculated as follows.",
          "rationale": "for",
          "steps": [
            {
              "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-global\"><span class=\"std std-ref\">global</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span></span>, do:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">gi</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> the initializer expression <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">gi</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
            }
          ]
        },
        {
          "html": "Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the vector of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">table</span></a> initialization <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">references</span></a> determined by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>. These may be calculated as follows.",
          "rationale": "for",
          "steps": [
            {
              "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-table\"><span class=\"std std-ref\">table</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a></span></span></span></span></span></span>, do:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ti</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> the initializer expression <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-table\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ti</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a>.</p>"
                },
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ti</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ti</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ti</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in index order.</p>"
            }
          ]
        },
        {
          "html": "Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">e</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the list of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> vectors determined by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segments</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span>. These may be calculated as follows.",
          "rationale": "for",
          "steps": [
            {
              "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span>, and for each element <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-expr\"><span class=\"std std-ref\">expression</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8108em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>, do:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> the initializer expression <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8108em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of function elements <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.3802em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in order of index <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623em;vertical-align:-0.1944em;\"></span><span class=\"mord mathrm\">j</span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">e</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of function element vectors <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in order of index <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span> be a new module instance <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/#alloc-module\"><span class=\"std std-ref\">allocated</span></a> from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> in store <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span> with imports <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7487em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>, global initializer values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, table initializer values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, and element segment contents <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">e</span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, and let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the extended store produced by module allocation.</p>"
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span> whose <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemmode\"><span class=\"std std-ref\">mode</span></a> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableidx\"><span class=\"mord\"><span class=\"mord mathit\">tableidx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">einstr</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of the vector <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-instr-seq\"><span class=\"std std-ref\">Execute</span></a> the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9857em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">einstr</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-const\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-const\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-table-init\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table.init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableidx\"><span class=\"mord\"><span class=\"mord mathit\">tableidx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-elem-drop\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">elem.drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elem\"><span class=\"std std-ref\">element segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span> whose <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-elemmode\"><span class=\"std std-ref\">mode</span></a> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">declarative</span></span></a></span></span></span></span></span>, do:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-elem-drop\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">elem.drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-data\"><span class=\"std std-ref\">data segment</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a></span></span></span></span></span></span> whose <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-datamode\"><span class=\"std std-ref\">mode</span></a> is of the form <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memidx\"><span class=\"mord\"><span class=\"mord mathit\">memidx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dinstr</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">end</span></span></a><span class=\"mclose\">}</span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of the vector <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathsf\">init</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-instr-seq\"><span class=\"std std-ref\">Execute</span></a> the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.02em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dinstr</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-const\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-const\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6794em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathsf\">i32</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-memory-init\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8738em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">memory.init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-data-drop\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">data.drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-start\"><span class=\"std std-ref\">start function</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">start</span></span></a></span></span></span></span></span></span> is not empty, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-start\"><span class=\"std std-ref\">start function</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">start</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-call\"><span class=\"std std-ref\">Execute</span></a> the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">call</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> from the stack.</p>"
        }
      ]
    },
    {
      "html": "The following steps are performed:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-comptype\"><span class=\"std std-ref\">composite type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#aux-expand-deftype\"><span class=\"mord\"><span class=\"mord mathrm\">expand</span></span></a><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If the length <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.023em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span> of the provided argument values is different from the number <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> of expected arguments, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "For each <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9614em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">va</span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-val\"><span class=\"std std-ref\">valid</span></a> with value type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "fail",
              "steps": [
                {
                  "html": "<p>Fail.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the dummy <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-frame\"><span class=\"std std-ref\">frame</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><span class=\"mclose\">}</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathnormal\">ϵ</span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "Once the function has returned, the following steps are executed:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-func\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9957em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">res</span></span></span></span></span><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> from the stack.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-store\"><span class=\"std std-ref\">store</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there exists a derivation for the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">byte</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9675em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#binary-module\"><span class=\"mord\"><span class=\"mord mathtt\">module</span></span></a></span></span></span></span></span> according to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#binary-module\"><span class=\"std std-ref\">binary grammar for modules</span></a>, yielding a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-module\"><span class=\"std std-ref\">module</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there exists a derivation for the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#text-source\"><span class=\"std std-ref\">source</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">char</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#text-module\"><span class=\"mord\"><span class=\"mord mathtt\">module</span></span></a></span></span></span></span></span> according to the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#text-module\"><span class=\"std std-ref\">text grammar for modules</span></a>, yielding a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-module\"><span class=\"std std-ref\">module</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">valid</span></a>, then return nothing.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "<p>Try <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-instantiation\"><span class=\"std std-ref\">instantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externval\"><span class=\"mord\"><span class=\"mord mathit\">externval</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as imports:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If it succeeds with a <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">valid</span></a> with the external import types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and external export types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0749em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-import\"><span class=\"std std-ref\">imports</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">imports</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> equals the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, do:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the triple <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, in index order.</p>"
        },
        {
          "html": "<p>Post-condition: each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-module\"><span class=\"std std-ref\">valid</span></a> with the external import types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and external export types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0749em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-export\"><span class=\"std std-ref\">exports</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> equals the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0749em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9331em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0749em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2548em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, do:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the pair <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, in index order.</p>"
        },
        {
          "html": "<p>Post-condition: each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0489em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-moduleinst\"><span class=\"std std-ref\">validity</span></a> of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>, all its <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exportinst\"><span class=\"std std-ref\">export names</span></a> are different.</p>"
        },
        {
          "html": "If there exists an <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a></span></span></span></span></span></span> such that <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-name\"><span class=\"std std-ref\">name</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a></span></span></span></span></span></span> equals <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externval\"><span class=\"std std-ref\">external value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mord\"><span class=\"mord mathit\">functype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-functype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-func\"><span class=\"std std-ref\">allocating a host function</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-functype\"><span class=\"std std-ref\">function type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mord\"><span class=\"mord mathit\">functype</span></span></a></span></span></span></span></span> and host function code <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-hostfunc\"><span class=\"mord\"><span class=\"mord mathit\">hostfunc</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mord\"><span class=\"mord mathit\">functype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-functype\"><span class=\"std std-ref\">function type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-functype\"><span class=\"mord\"><span class=\"mord mathit\">functype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-functype\"><span class=\"std std-ref\">function type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-functype\"><span class=\"std std-ref\">valid</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "<p>Try <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-invocation\"><span class=\"std std-ref\">invoking</span></a> the function <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as arguments:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If it succeeds with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9148em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as results, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9148em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else if the outcome is an exception with a thrown <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#exec-throw-ref\"><span class=\"std std-ref\">exception</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span></span> as the result, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">THROW</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span></span></p>"
        },
        {
          "html": "<p>Else it has trapped, hence let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-tabletype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-table\"><span class=\"std std-ref\">allocating a table</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span> and initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-tabletype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "Try <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#grow-table\"><span class=\"std std-ref\">growing</span></a> the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> elements with initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it succeeds, return the updated store.</p>"
            },
            {
              "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-mem\"><span class=\"std std-ref\">allocating a memory</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-memtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-byte\"><span class=\"std std-ref\">byte</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6679em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a></span></span></span></span></span></span> divided by the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">page size</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "Try <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#grow-mem\"><span class=\"std std-ref\">growing</span></a> the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#page-size\"><span class=\"std std-ref\">pages</span></a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it succeeds, return the updated store.</p>"
            },
            {
              "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">tagtype</span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-tagtype\"><span class=\"std std-ref\">valid</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-tag\"><span class=\"std std-ref\">allocating a tag</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8095em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-tagtype\"><span class=\"std std-ref\">valid</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> is an allocated <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exninst\"><span class=\"std std-ref\">allocating an exception instance</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> and initialization values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6554em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-globaltype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#alloc-global\"><span class=\"std std-ref\">allocating a global</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span> and initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-globaltype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">gi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathit\">gi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathit\">mut</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span> be the structure of the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathit\">mut</span></span></a></span></span></span></span></span> is not <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">var</span></span></a></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span> with the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-ref\"><span class=\"std std-ref\">reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-val\"><span class=\"std std-ref\">valid</span></a> under store <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> with which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is valid.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-reftype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#default-val\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">valtype</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not defined, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4444em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-valtype\"><span class=\"std std-ref\">value types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> are <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-valtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-valtype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">true</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">false</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#syntax-externtype\"><span class=\"std std-ref\">extern types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> are <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/memory64/core/bikeshed/index.html#match-externtype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8592em;vertical-align:-0.2441em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">true</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><a href=\"https://webassembly.github.io/memory64/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">false</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    }
  ]
}