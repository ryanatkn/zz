{
  "spec": {
    "title": "Keyboard Lock",
    "url": "https://wicg.github.io/keyboard-lock/"
  },
  "algorithms": [
    {
      "name": "keyboard-lock",
      "href": "https://wicg.github.io/keyboard-lock/#keyboard-lock",
      "html": "<h4 class=\"heading settled\" data-level=\"2.2.1\" id=\"h-keyboard-lock\"><span class=\"secno\">2.2.1. </span><span class=\"content\"><dfn data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-export=\"\" id=\"keyboard-lock\">lock()<a class=\"self-link\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-lock\"></a></dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-lock/#h-keyboard-lock\"></a></h4>\n     <p>When <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-lock/#dom-keyboard-lock\" id=\"ref-for-dom-keyboard-lock\">lock()</a></code> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p</var> be a new <a data-link-type=\"dfn\" href=\"http://tc39.github.io/ecma262/#sec-promise-objects\" id=\"ref-for-sec-promise-objects\">Promise</a>.</p>"
        },
        {
          "html": "If not currently executing in the currently active <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/#top-level-browsing-context\" id=\"ref-for-top-level-browsing-context\">top-level browsing context</a>, then",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject <var>p</var> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://heycam.github.io/webidl/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://heycam.github.io/webidl/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#enqueue-the-following-steps\" id=\"ref-for-enqueue-the-following-steps\">Enqueue the following steps</a> to the <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-keyboard-lock-task-queue\" id=\"ref-for-keyboard-keyboard-lock-task-queue\">keyboard lock task queue</a>:",
          "rationale": "reset",
          "steps": [
            {
              "html": "<p>Reset <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-reserved-key-codes\" id=\"ref-for-keyboard-reserved-key-codes\">reserved key codes</a> to be an empty set.</p>"
            },
            {
              "html": "If the optional <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-lock/#dom-keyboard-lock-keycodes-keycodes\" id=\"ref-for-dom-keyboard-lock-keycodes-keycodes\">keyCodes</a></code> argument is present, run the\nfollowing substeps:",
              "rationale": "for",
              "steps": [
                {
                  "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate\">For each</a> string <var>key</var> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-lock/#dom-keyboard-lock-keycodes-keycodes\" id=\"ref-for-dom-keyboard-lock-keycodes-keycodes①\">keyCodes</a></code>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <var>key</var> is not a valid <a data-link-type=\"dfn\" href=\"http://www.w3.org/TR/uievents-code/#key-code-attribute-value\" id=\"ref-for-key-code-attribute-value①\">key code attribute value</a>, then",
                      "rationale": "set",
                      "steps": [
                        {
                          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock①\">enable keyboard lock</a> to be false.</p>"
                        },
                        {
                          "html": "<p>Reject <var>p</var> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://heycam.github.io/webidl/#invalidaccesserror\" id=\"ref-for-invalidaccesserror\">InvalidAccessError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://heycam.github.io/webidl/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append\">Append</a> <var>key</var> to <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-reserved-key-codes\" id=\"ref-for-keyboard-reserved-key-codes①\">reserved key codes</a>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "If <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock②\">enable keyboard lock</a> is currently false, run the following\nsubsteps:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Optionally, <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#register-a-system-key-press-handler\" id=\"ref-for-register-a-system-key-press-handler\">register a system key press handler</a>.</p>"
                },
                {
                  "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock③\">enable keyboard lock</a> to be true.</p>"
                }
              ]
            },
            {
              "html": "If there is a pending <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-lock/#dom-keyboard-lock\" id=\"ref-for-dom-keyboard-lock①\">lock()</a></code> task in the <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-keyboard-lock-task-queue\" id=\"ref-for-keyboard-keyboard-lock-task-queue①\">keyboard lock task queue</a>, then",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock④\">enable keyboard lock</a> to be false.</p>"
                },
                {
                  "html": "<p>Reject the <var>p</var> with an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://heycam.github.io/webidl/#aborterror\" id=\"ref-for-aborterror\">AbortError</a></code>\" DOMException.</p>"
                }
              ]
            },
            {
              "html": "<p>Resolve <var>p</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "keyboard-unlock",
      "href": "https://wicg.github.io/keyboard-lock/#keyboard-unlock",
      "html": "<h4 class=\"heading settled\" data-level=\"2.2.2\" id=\"h-keyboard-unlock\"><span class=\"secno\">2.2.2. </span><span class=\"content\"><dfn data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-export=\"\" id=\"keyboard-unlock\">unlock()<a class=\"self-link\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-unlock\"></a></dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-lock/#h-keyboard-unlock\"></a></h4>\n     <p>When <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-lock/#dom-keyboard-unlock\" id=\"ref-for-dom-keyboard-unlock①\">unlock()</a></code> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#enqueue-the-following-steps\" id=\"ref-for-enqueue-the-following-steps①\">Enqueue the following steps</a> to the <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-keyboard-lock-task-queue\" id=\"ref-for-keyboard-keyboard-lock-task-queue②\">keyboard lock task queue</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock⑤\">enable keyboard lock</a> is true, then run the following substeps:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#unregister-the-system-key-press-handler\" id=\"ref-for-unregister-the-system-key-press-handler\">Unregister the system key press handler</a>.</p>"
                },
                {
                  "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock⑥\">enable keyboard lock</a> to be false.</p>"
                },
                {
                  "html": "<p>Reset <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-reserved-key-codes\" id=\"ref-for-keyboard-reserved-key-codes②\">reserved key codes</a> to be an empty sequence.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "html": "In response to the user pressing a key, if a <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#system-key-press-handler\" id=\"ref-for-system-key-press-handler②\">system key press handler</a> has been <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#register-a-system-key-press-handler\" id=\"ref-for-register-a-system-key-press-handler①\">registered</a>,\n\t\tit should run the following steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>isFullscreen</var> be set to true if the <a data-link-type=\"dfn\" href=\"https://fullscreen.spec.whatwg.org/#fullscreen-element\" id=\"ref-for-fullscreen-element\">fullscreen element</a> of the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/#currently-focused-area-of-a-top-level-browsing-context\" id=\"ref-for-currently-focused-area-of-a-top-level-browsing-context\">currently focused area of a top-level browsing context</a> is non-null\n(see <a data-link-type=\"biblio\" href=\"https://wicg.github.io/keyboard-lock/#biblio-fullscreen\">[Fullscreen]</a>).</p>"
        },
        {
          "html": "If <var>isFullscreen</var> and <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-enable-keyboard-lock\" id=\"ref-for-keyboard-enable-keyboard-lock⑦\">enable keyboard lock</a> are all set\nto true, then run the following substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>keyEvent</var> be the key event for the new key press.</p>"
            },
            {
              "html": "<p>Let <var>code</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://www.w3.org/TR/uievents/#dom-keyboardevent-code\" id=\"ref-for-dom-keyboardevent-code\">code</a></code> attribute of <var>keyEvent</var>.</p>"
            },
            {
              "html": "If <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-reserved-key-codes\" id=\"ref-for-keyboard-reserved-key-codes③\">reserved key codes</a> is empty or if <var>code</var> is listed in <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-lock/#keyboard-reserved-key-codes\" id=\"ref-for-keyboard-reserved-key-codes④\">reserved key codes</a>, then run the following substeps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <var>code</var> is equal to \"Escape\", then run the following\nsubsteps:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>Optionally overlay a message on the screen telling the\nuser that they can Hold the Escape key to exit from\nfullscreen.</p>"
                    },
                    {
                      "html": "<p>If the key is held for 2 seconds, then exit from the\nkeyboard handler and pass the key on to the user agent\nfor normal processing (which will exit fullscreen\n(and pointer lock, if active)).</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Dispatch <var>keyEvent</var> directly to the fullsceen document or element,\nbypassing any normal user agent processing.</p>"
                }
              ]
            },
            {
              "html": "<p>Else, handle the key event as it normally would be handled,\neither by dispatching a key event or performing the\nusual keyboard shortcut action.</p>"
            }
          ]
        }
      ]
    }
  ]
}