{
  "spec": {
    "title": "Source map format specification",
    "url": "https://tc39.es/ecma426/"
  },
  "links": {
    "rawlinks": {
      "https://datatracker.ietf.org/doc/html/rfc4648": {},
      "https://docs.google.com/document/d/1xi12LrcqjqIHTtZzrzZKmQ3lbTv9mKrN076UB-j3UZQ/": {},
      "https://ecma-international.org/": {},
      "https://ecma-international.org/memento/codeofconduct.htm": {},
      "https://en.wikipedia.org/wiki/Variable-length_quantity": {},
      "https://encoding.spec.whatwg.org/": {
        "anchors": [
          "utf-8-decode"
        ]
      },
      "https://fetch.spec.whatwg.org/": {
        "anchors": [
          "concept-fetch",
          "http-newline-byte",
          "process-response-end-of-body",
          "concept-request",
          "concept-request-url",
          "http-scheme"
        ]
      },
      "https://github.com/bterlson/ecmarkup": {},
      "https://github.com/domenic/ecmarkdown": {},
      "https://github.com/rbuckton/grammarkdown": {},
      "https://github.com/takikawa": {},
      "https://github.com/tc39/ecma262/pull/3540": {},
      "https://github.com/tc39/ecma426": {},
      "https://github.com/tc39/ecma426/issues": {},
      "https://github.com/tc39/ecma426/issues/new": {},
      "https://github.com/tc39/ecma426/pulls": {},
      "https://github.com/tc39/ecma426/pulls/new": {},
      "https://github.com/tc39/source-map-tests/": {},
      "https://infra.spec.whatwg.org/": {
        "anchors": [
          "byte-sequence",
          "byte-sequence-prefix",
          "byte-sequence-length"
        ]
      },
      "https://speced.github.io/bikeshed/": {},
      "https://tc39.es/ecma262/": {
        "anchors": [
          "sec-notational-conventions",
          "sec-algorithm-conventions-abstract-operations",
          "sec-completion-record-specification-type",
          "integer",
          "sec-returnifabrupt",
          "sec-completion-ao",
          "sec-throwcompletion",
          "sec-grammar-notation",
          "sec-lexical-and-regexp-grammars",
          "sec-syntactic-grammar",
          "sec-grammatical-parameters",
          "sec-lookahead-restrictions",
          "sec-algorithm-conventions-syntax-directed-operations",
          "eqn-modulo",
          "eqn-floor",
          "assert",
          "sec-ecmascript-language-types-string-type",
          "sec-ecmascript-language-types-number-type",
          "sec-ecmascript-language-types-boolean-type",
          "sec-ecmascript-language-types-null-type",
          "sec-object-type",
          "integer-index",
          "sec-call",
          "sec-json.parse",
          "sec-list-and-record-specification-type",
          "integral-number",
          "%E2%84%9D",
          "sec-tostring",
          "%F0%9D%94%BD",
          "substring",
          "eqn-min",
          "sec-context-free-grammars",
          "sec-ecmascript-language-lexical-grammar",
          "prod-IdentifierName",
          "prod-PrivateIdentifier",
          "prod-Punctuator",
          "prod-DivPunctuator",
          "prod-RightBracePunctuator",
          "prod-NumericLiteral",
          "prod-RegularExpressionLiteral",
          "prod-Comment",
          "prod-HashbangComment",
          "prod-StringLiteral",
          "prod-Template",
          "prod-TemplateSubstitutionTail",
          "prod-WhiteSpace",
          "prod-LineTerminator",
          "prod-BindingIdentifier",
          "prod-LexicalDeclaration",
          "prod-VariableStatement",
          "prod-FormalParameterList",
          "prod-FunctionDeclaration",
          "prod-FunctionExpression",
          "prod-AsyncFunctionDeclaration",
          "prod-AsyncFunctionExpression",
          "prod-GeneratorDeclaration",
          "prod-GeneratorExpression",
          "prod-AsyncGeneratorDeclaration",
          "prod-AsyncGeneratorExpression",
          "prod-FormalParameters",
          "prod-ArrowFunction",
          "prod-AsyncArrowFunction",
          "prod-ArrowParameters",
          "prod-AsyncArrowBindingIdentifier",
          "prod-ArrowFormalParameters",
          "prod-ClassElementName",
          "prod-MethodDefinition",
          "prod-IdentifierReference",
          "prod-Expression",
          "string-concatenation",
          "list-concatenation",
          "prod-SingleLineComment",
          "prod-MultiLineComment",
          "prod-LineTerminatorSequence",
          "sec-stringtocodepoints",
          "sec-codepointstostring",
          "sec-regexpcreate",
          "sec-regexpexec",
          "sec-get-o-p",
          "sec-data-blocks",
          "sec-newpromisecapability",
          "sec-promise-constructor",
          "sec-abstract-closure",
          "sec-ifabruptrejectpromise"
        ]
      },
      "https://tc39.es/ecma426/": {},
      "https://url.spec.whatwg.org/": {
        "anchors": [
          "concept-url-scheme",
          "concept-url",
          "url-parsing"
        ]
      },
      "https://web.archive.org/web/20120814122523/http://blog.getfirebug.com/2009/08/11/give-your-eval-a-name-with-sourceurl/": {},
      "https://www.ecma-international.org/publications-and-standards/standards/ecma-404/": {},
      "https://www.w3.org/TR/wasm-core-2/": {
        "anchors": [
          "custom-section%E2%91%A0",
          "modules%E2%91%A0%E2%91%A4",
          "embed-error",
          "names%E2%91%A2"
        ]
      }
    },
    "autolinks": {}
  }
}