{
  "spec": {
    "title": "Web IDL Standard",
    "url": "https://webidl.spec.whatwg.org/"
  },
  "algorithms": [
    {
      "name": "interface/inclusive inherited interfaces",
      "href": "https://webidl.spec.whatwg.org/#interface-inclusive-inherited-interfaces",
      "html": "The <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list\">list</a> of <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"interface\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"interface-inclusive-inherited-interfaces\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">inclusive inherited interfaces</dfn> of an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface⑦\">interface</a> <var>I</var>\n  is defined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be « ».</p>"
        },
        {
          "html": "<p>Let <var>interface</var> be <var>I</var>.</p>"
        },
        {
          "html": "While <var>interface</var> is not null:",
          "rationale": "append",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append\">Append</a> <var>interface</var> to <var>result</var>.</p>"
            },
            {
              "html": "<p>Set <var>interface</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface⑧\">interface</a> that <var>I</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherit\" id=\"ref-for-dfn-inherit②\">inherits</a> from, if any, and\nnull otherwise.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "qualified name",
      "href": "https://webidl.spec.whatwg.org/#qualified-name",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"qualified-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">qualified name</dfn> of an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③\">interface</a> <var>interface</var> is defined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>identifier</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier①⓪\">identifier</a> of <var>interface</var>.</p>"
        },
        {
          "html": "If <var>interface</var> has a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNamespace\" id=\"ref-for-LegacyNamespace\">LegacyNamespace</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④\">extended attribute</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>namespace</var> be the identifier argument of the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNamespace\" id=\"ref-for-LegacyNamespace①\">LegacyNamespace</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑤\">extended attribute</a>.</p>"
            },
            {
              "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-concatenate\" id=\"ref-for-string-concatenate\">concatenation</a> of « <var>namespace</var>, <var>identifier</var> » with\nseparator U+002E (.).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>identifier</var>.</p>"
        }
      ]
    },
    {
      "name": "value of integer tokens",
      "html": "The value of an <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-integer\">integer</a></emu-t> token\n    is an integer whose value is determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>S</var> be the sequence of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value\">scalar values</a> matched by the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-integer\">integer</a></emu-t> token.</p>"
        },
        {
          "html": "<p>Let <var>sign</var> be −1 if <var>S</var> begins with U+002D (-), and 1 otherwise.</p>"
        },
        {
          "html": "Let <var>base</var> be the base of the number based on the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value①\">scalar values</a> that follow the optional leading U+002D (-):",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "U+0030 (0), U+0058 (X)",
                  "html": "<p>The base is 16.</p>"
                },
                {
                  "case": "U+0030 (0), U+0078 (x)",
                  "html": "<p>The base is 16.</p>"
                },
                {
                  "case": "U+0030 (0)",
                  "html": "<p>The base is 8.</p>"
                },
                {
                  "case": "Otherwise",
                  "html": "<p>The base is 10.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>number</var> be the result of interpreting all remaining <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value②\">scalar values</a> following the optional leading U+002D (-)\ncharacter and any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value③\">scalar values</a> indicating the base as an integer specified in base <var>base</var>.</p>"
        },
        {
          "html": "<p>Return <var>sign</var> × <var>number</var>.</p>"
        }
      ]
    },
    {
      "name": "value of decimal tokens",
      "href": "https://webidl.spec.whatwg.org/#decimal-token-value",
      "html": "The value of a <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token is\n    either an IEEE 754 single-precision floating point number or an IEEE 754\n    double-precision floating point number, depending on the type of the\n    constant, dictionary member or optional argument it is being used as the value for, determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>S</var> be the sequence of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value④\">scalar values</a> matched by the\n<emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be the Mathematical Value that would be obtained if\n<var>S</var> were parsed as a JavaScript <emu-nt><a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-literals-numeric-literals\" id=\"ref-for-sec-literals-numeric-literals\">NumericLiteral</a></emu-nt>.</p>"
        },
        {
          "html": "<p>If the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token is being\nused as the value for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-float\" id=\"ref-for-idl-float\">float</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float\">unrestricted float</a></code>, then\nthe value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token\nis the IEEE 754 single-precision floating point number closest to <var>result</var>.</p>"
        },
        {
          "html": "<p>Otherwise, the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token is being\nused as the value for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-double\" id=\"ref-for-idl-double\">double</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double\">unrestricted double</a></code>, and\nthe value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-decimal\">decimal</a></emu-t> token\nis the IEEE 754 double-precision floating point number closest to <var>result</var>. <a data-link-type=\"biblio\" href=\"https://webidl.spec.whatwg.org/#biblio-ieee-754\" title=\"IEEE Standard for Floating-Point Arithmetic\">[IEEE-754]</a></p>"
        }
      ]
    },
    {
      "html": "The value of a constant value specified as\n<emu-t>Infinity</emu-t>, <emu-t>-Infinity</emu-t>, or <emu-t>NaN</emu-t> is either\nan IEEE 754 single-precision floating point number or an IEEE 754\ndouble-precision floating point number, depending on the type of the\nconstant, dictionary member, or optional argument it is being used as the\nvalue for:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Type unrestricted float, constant value Infinity",
              "html": "<p>The value is the IEEE 754 single-precision positive infinity value.</p>"
            },
            {
              "case": "Type unrestricted double, constant value Infinity",
              "html": "<p>The value is the IEEE 754 double-precision positive infinity value.</p>"
            },
            {
              "case": "Type unrestricted float, constant value -Infinity",
              "html": "<p>The value is the IEEE 754 single-precision negative infinity value.</p>"
            },
            {
              "case": "Type unrestricted double, constant value -Infinity",
              "html": "<p>The value is the IEEE 754 double-precision negative infinity value.</p>"
            },
            {
              "case": "Type unrestricted float, constant value NaN",
              "html": "<p>The value is the IEEE 754 single-precision NaN value with the bit pattern 0x7fc00000.</p>"
            },
            {
              "case": "Type unrestricted double, constant value NaN",
              "html": "<p>The value is the IEEE 754 double-precision NaN value with the bit pattern 0x7ff8000000000000.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "value of string literal tokens",
      "href": "https://webidl.spec.whatwg.org/#string-literal",
      "html": "Optional argument default values can also be specified using a\n    <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t>\n    token, whose <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"value of string literal tokens\" data-noexport=\"\" id=\"value-of-string-literal-tokens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">value</dfn> is a\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-string-type\" id=\"ref-for-dfn-string-type\">string type</a> determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>S</var> be the sequence of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value⑤\">scalar values</a> matched by\nthe <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t> token\nwith its leading and trailing U+0022 (\") <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value⑥\">scalar values</a> removed.</p>"
        },
        {
          "html": "Depending on the type of the argument:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "DOMString",
                  "html": "<p>The value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t> token\nis <var>S</var>.</p>"
                },
                {
                  "case": "USVString",
                  "html": "<p>The value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t> token\nis <var>S</var>.</p>"
                },
                {
                  "case": "an enumeration type",
                  "html": "<p>The value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t> token\nis <var>S</var>.</p>"
                },
                {
                  "case": "ByteString",
                  "html": "<p class=\"assertion\">Assert: <var>S</var> doesn’t contain any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point\">code points</a> higher than U+00FF.</p>\n        <p>The value of the <emu-t class=\"regex\"><a href=\"https://webidl.spec.whatwg.org/#prod-string\">string</a></emu-t> token\nis the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#isomorphic-encode\" id=\"ref-for-isomorphic-encode\">isomorphic encoding</a> of <var>S</var>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "compute the effective overload set",
      "href": "https://webidl.spec.whatwg.org/#compute-the-effective-overload-set",
      "html": "The algorithm below describes how to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"compute-the-effective-overload-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">compute the effective overload set</dfn>.\n    The following input variables are used, if they are required:\n\n\n    <ul>\n     <li data-md=\"\">\n      <p>the identifier of the operation or legacy factory function is <var>A</var></p>\n     </li><li data-md=\"\">\n      <p>the argument count is <var>N</var></p>\n     </li><li data-md=\"\">\n      <p>the interface is <var>I</var></p>\n    </li></ul>\n    <p>Whenever an argument of an extended attribute is mentioned,\n    it is referring to an argument of the extended attribute’s\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-xattr-named-argument-list\" id=\"ref-for-dfn-xattr-named-argument-list\">named argument list</a>.</p>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>S</var> be an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set\">ordered set</a>.</p>"
        },
        {
          "html": "Let <var>F</var> be an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①\">ordered set</a> with <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item①\">items</a> as follows,\naccording to the kind of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-effective-overload-set\" id=\"ref-for-dfn-effective-overload-set⑤\">effective overload set</a>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "For regular operations",
                  "html": "<p>The elements of <var>F</var> are the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-operation\" id=\"ref-for-dfn-regular-operation①⑥\">regular operations</a> with\nidentifier <var>A</var> defined on interface <var>I</var>.</p>"
                },
                {
                  "case": "For static operations",
                  "html": "<p>The elements of <var>F</var> are the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-operation\" id=\"ref-for-dfn-static-operation⑦\">static operations</a> with\nidentifier <var>A</var> defined on interface <var>I</var>.</p>"
                },
                {
                  "case": "For constructors",
                  "html": "<p>The elements of <var>F</var> are the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-constructors\" id=\"ref-for-idl-constructors①③\">constructor operations</a> on interface <var>I</var>.</p>"
                },
                {
                  "case": "For legacy factory functions",
                  "html": "<p>The elements of <var>F</var> are the\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyFactoryFunction\" id=\"ref-for-LegacyFactoryFunction⑤\">LegacyFactoryFunction</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑦\">extended attributes</a> on interface <var>I</var> whose\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-xattr-named-argument-list\" id=\"ref-for-dfn-xattr-named-argument-list①\">named argument lists'</a>\nidentifiers are <var>A</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>maxarg</var> be the maximum number of arguments the operations,\nlegacy factory functions, or callback functions in <var>F</var> are declared to take.\nFor <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-variadic\" id=\"ref-for-dfn-variadic⑦\">variadic</a> operations and legacy factory functions,\nthe argument on which the ellipsis appears counts as a single argument.</p>"
        },
        {
          "html": "<p>Let <var>max</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#eqn-max\" id=\"ref-for-eqn-max\">max</a>(<var>maxarg</var>, <var>N</var>).</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①\">For each</a> operation or extended attribute <var>X</var> in <var>F</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>arguments</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③\">list</a> of arguments <var>X</var> is declared to take.</p>"
            },
            {
              "html": "<p>Let <var>n</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size\">size</a> of <var>arguments</var>.</p>"
            },
            {
              "html": "<p>Let <var>types</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#type-list\" id=\"ref-for-type-list①\">type list</a>.</p>"
            },
            {
              "html": "<p>Let <var>optionalityValues</var> be an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#optionality-list\" id=\"ref-for-optionality-list①\">optionality list</a>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②\">For each</a> <var>argument</var> in <var>arguments</var>:",
              "rationale": "append",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①\">Append</a> the type of <var>argument</var> to <var>types</var>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append②\">Append</a> \"variadic\" to <var>optionalityValues</var> if <var>argument</var> is a final, variadic argument,\n\"optional\" if <var>argument</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument\" id=\"ref-for-dfn-optional-argument⑤\">optional</a>,\nand \"required\" otherwise.</p>"
                }
              ]
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append\">Append</a> the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#tuple\" id=\"ref-for-tuple②\">tuple</a> (<var>X</var>, <var>types</var>, <var>optionalityValues</var>) to <var>S</var>.</p>"
            },
            {
              "html": "If <var>X</var> is declared to be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-variadic\" id=\"ref-for-dfn-variadic⑧\">variadic</a>, then:",
              "rationale": "for",
              "steps": [
                {
                  "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate③\">For each</a> <var>i</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range\">the range</a> <var>n</var> to <var>max</var> − 1, inclusive:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>t</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#type-list\" id=\"ref-for-type-list②\">type list</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>o</var> be an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#optionality-list\" id=\"ref-for-optionality-list②\">optionality list</a>.</p>"
                    },
                    {
                      "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate④\">For each</a> <var>j</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range①\">the range</a> 0 to <var>n</var> − 1, inclusive:",
                      "rationale": "append",
                      "steps": [
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append③\">Append</a> <var>types</var>[<var>j</var>] to <var>t</var>.</p>"
                        },
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append④\">Append</a> <var>optionalityValues</var>[<var>j</var>] to <var>o</var>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑤\">For each</a> <var>j</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range②\">the range</a> <var>n</var> to <var>i</var>, inclusive:",
                      "rationale": "append",
                      "steps": [
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑤\">Append</a> <var>types</var>[<var>n</var> − 1] to <var>t</var>.</p>"
                        },
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑥\">Append</a> \"variadic\" to <var>o</var>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①\">Append</a> the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#tuple\" id=\"ref-for-tuple③\">tuple</a> (<var>X</var>, <var>t</var>, <var>o</var>) to <var>S</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>i</var> be <var>n</var> − 1.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while\">While</a> <var>i</var> ≥ 0:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>arguments</var>[<var>i</var>] is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument\" id=\"ref-for-dfn-optional-argument⑥\">optional</a>\n(i.e., it is not marked as \"optional\" and is not\na final, variadic argument), then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break\">break</a>.</p>"
                },
                {
                  "html": "<p>Let <var>t</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#type-list\" id=\"ref-for-type-list③\">type list</a>.</p>"
                },
                {
                  "html": "<p>Let <var>o</var> be an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#optionality-list\" id=\"ref-for-optionality-list③\">optionality list</a>.</p>"
                },
                {
                  "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑥\">For each</a> <var>j</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range③\">the range</a> 0 to <var>i</var> − 1, inclusive:",
                  "rationale": "append",
                  "steps": [
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑦\">Append</a> <var>types</var>[<var>j</var>] to <var>t</var>.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑧\">Append</a> <var>optionalityValues</var>[<var>j</var>] to <var>o</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append②\">Append</a> the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#tuple\" id=\"ref-for-tuple④\">tuple</a> (<var>X</var>, <var>t</var>, <var>o</var>) to <var>S</var>.</p>"
                },
                {
                  "html": "<p>Set <var>i</var> to <var>i</var> − 1.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>S</var>.</p>"
        }
      ]
    },
    {
      "name": "distinguishable",
      "href": "https://webidl.spec.whatwg.org/#dfn-distinguishable",
      "html": "Two types are <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-distinguishable\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">distinguishable</dfn> if\nthe following algorithm returns <i>true</i>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If one type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-a-nullable-type\" id=\"ref-for-dfn-includes-a-nullable-type\">includes a nullable type</a>\nand the other type either\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-a-nullable-type\" id=\"ref-for-dfn-includes-a-nullable-type①\">includes a nullable type</a>,\nis a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑥\">union type</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types⑤\">flattened member types</a>\nincluding a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary⑦\">dictionary type</a>, or\nis a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary⑧\">dictionary type</a>,\nreturn <i>false</i>.</p>"
        },
        {
          "html": "<p>If both types are either a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑦\">union type</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑦\">nullable</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑧\">union type</a>,\nreturn <i>true</i> if each member type of the one\nis distinguishable with each member type of the other,\nor <i>false</i> otherwise.</p>"
        },
        {
          "html": "<p>If one type is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑨\">union type</a> or nullable union type,\nreturn <i>true</i> if each\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-member-type\" id=\"ref-for-dfn-union-member-type①\">member type</a> of the union type is distinguishable\nwith the non-union type,\nor <i>false</i> otherwise.</p>"
        },
        {
          "html": "<p>Consider the two \"innermost\" types derived by taking each type’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①\">inner type</a>\nif it is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①\">annotated type</a>, and then taking its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type④\">inner type</a> inner type\nif the result is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑧\">nullable type</a>. If these two innermost types appear or are in categories\nappearing in the following table and there is a “●” mark in the corresponding entry\nor there is a letter in the corresponding entry and the designated additional\nrequirement below the table is satisfied, then return <i>true</i>.\nOtherwise return <i>false</i>.</p>\n     <p>Categories:</p>\n     <dl>\n      <dt>interface-like\n      </dt><dd>\n       <ul>\n        <li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①\">interface types</a></p>\n        </li><li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type\">buffer source types</a></p>\n       </li></ul>\n      </dd><dt>dictionary-like\n      </dt><dd>\n       <ul>\n        <li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary⑨\">dictionary types</a></p>\n        </li><li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#record-type\" id=\"ref-for-record-type①\">record types</a></p>\n        </li><li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface\">callback interface types</a></p>\n       </li></ul>\n      </dd><dt>sequence-like\n      </dt><dd>\n       <ul>\n        <li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type⑤\">sequence types</a></p>\n        </li><li data-md=\"\">\n         <p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-frozen-array-type\" id=\"ref-for-dfn-frozen-array-type①\">frozen array types</a></p>\n       </li></ul>\n     </dd></dl>\n     <table class=\"matrix data complex\" id=\"distinguishable-table\">\n      <thead>\n       <tr>\n        <th class=\"corner\">\n        </th><th>\n         <div><span>undefined</span></div>\n        </th><th>\n         <div><span>boolean</span></div>\n        </th><th>\n         <div><span>numeric types</span></div>\n        </th><th>\n         <div><span>bigint</span></div>\n        </th><th>\n         <div><span>string types</span></div>\n        </th><th>\n         <div><span>object</span></div>\n        </th><th>\n         <div><span>symbol</span></div>\n        </th><th>\n         <div><span>interface-like</span></div>\n        </th><th>\n         <div><span>callback function</span></div>\n        </th><th>\n         <div><span>dictionary-like</span></div>\n        </th><th>\n         <div><span>async sequence</span></div>\n        </th><th>\n         <div><span>sequence-like</span></div>\n      </th></tr></thead><tbody>\n       <tr>\n        <th>undefined\n        \n        </th><td>\n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>boolean\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>numeric types\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>(b)\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>bigint\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>string types\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>(d)\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>object\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>\n        </td><td>\n        </td><td>\n        </td><td>\n        </td><td>\n       </td></tr><tr>\n        <th>symbol\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>interface-like\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>(a)\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>callback function\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>(c)\n        \n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>dictionary-like\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>●\n        \n        </td><td>●\n    \n       </td></tr><tr>\n        <th>async sequence\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n        </td><td>\n       </td></tr><tr>\n        <th>sequence-like\n        \n        </th><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td class=\"belowdiagonal\">\n        </td><td>\n     </td></tr></tbody></table>",
          "ignored": [
            "The two identified interface-like types are not the same, and no single platform object implements both interface-like types. The types are distinguishable, but there is a separate restriction on their use in overloading below. Please also note the advice about using unions of these types. A callback function that does not have [LegacyTreatNonObjectAsNull] extended attribute is distinguishable from a type in the dictionary-like category. The types are distinguishable, but when converting from an ECMAScript value, a string object is never converted to an async sequence type (even if it has a %Symbol.iterator% method), if a string type is also in the overload set or union."
          ]
        }
      ]
    },
    {
      "name": "QuotaExceededError/QuotaExceededError(message, options)",
      "href": "https://webidl.spec.whatwg.org/#dom-quotaexceedederror-quotaexceedederror",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"QuotaExceededError\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"QuotaExceededError(message, options)|constructor(message, options)|QuotaExceededError(message)|constructor(message)|QuotaExceededError()|constructor()\" id=\"dom-quotaexceedederror-quotaexceedederror\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>new QuotaExceededError(<var>message</var>, <var>options</var>)</code></dfn>\n    constructor steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name⑨\">name</a> to \"<code>QuotaExceededError</code>\".</p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message①\">message</a> to <var>message</var>.</p>"
        },
        {
          "html": "If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-quota\" id=\"ref-for-dom-quotaexceedederroroptions-quota\">quota</a></code>\"] is present:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-quota\" id=\"ref-for-dom-quotaexceedederroroptions-quota①\">quota</a></code>\"] is less than 0, then throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror①\">RangeError</a></code>.</p>"
            },
            {
              "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-quota\" id=\"ref-for-quotaexceedederror-quota①\">quota</a> to\n<var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-quota\" id=\"ref-for-dom-quotaexceedederroroptions-quota②\">quota</a></code>\"].</p>"
            }
          ]
        },
        {
          "html": "If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-requested\" id=\"ref-for-dom-quotaexceedederroroptions-requested\">requested</a></code>\"] is present:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-requested\" id=\"ref-for-dom-quotaexceedederroroptions-requested①\">requested</a></code>\"] is less than 0, then throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror②\">RangeError</a></code>.</p>"
            },
            {
              "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-requested\" id=\"ref-for-quotaexceedederror-requested①\">requested</a> to\n<var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#dom-quotaexceedederroroptions-requested\" id=\"ref-for-dom-quotaexceedederroroptions-requested②\">requested</a></code>\"].</p>"
            }
          ]
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-quota\" id=\"ref-for-quotaexceedederror-quota②\">quota</a> is not null, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-requested\" id=\"ref-for-quotaexceedederror-requested②\">requested</a> is not null,\nand <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-requested\" id=\"ref-for-quotaexceedederror-requested③\">requested</a> is less than <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-quota\" id=\"ref-for-quotaexceedederror-quota③\">quota</a>, then\nthrow a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror③\">RangeError</a></code>.</p>"
        }
      ]
    },
    {
      "name": "QuotaExceededError serialization steps",
      "html": "Their <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#serialization-steps\" id=\"ref-for-serialization-steps①\">serialization steps</a>, given <var>value</var> and <var>serialized</var>, are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Run the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑦\">DOMException</a></code> <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#serialization-steps\" id=\"ref-for-serialization-steps②\">serialization steps</a> given <var>value</var> and <var>serialized</var>.</p>"
        },
        {
          "html": "<p>Set <var>serialized</var>.[[Quota]] to <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-quota\" id=\"ref-for-quotaexceedederror-quota⑤\">quota</a>.</p>"
        },
        {
          "html": "<p>Set <var>serialized</var>.[[Requested]] to <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-requested\" id=\"ref-for-quotaexceedederror-requested⑤\">requested</a>.</p>"
        }
      ]
    },
    {
      "name": "QuotaExceededError deserialization steps",
      "html": "Their <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#deserialization-steps\" id=\"ref-for-deserialization-steps①\">deserialization steps</a>, given <var>serialized</var> and <var>value</var>, are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Run the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⑧\">DOMException</a></code> <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#deserialization-steps\" id=\"ref-for-deserialization-steps②\">deserialization steps</a> given <var>serialized</var> and <var>value</var>.</p>"
        },
        {
          "html": "<p>Set <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-quota\" id=\"ref-for-quotaexceedederror-quota⑥\">quota</a> to <var>serialized</var>.[[Quota]].</p>"
        },
        {
          "html": "<p>Set <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#quotaexceedederror-requested\" id=\"ref-for-quotaexceedederror-requested⑥\">requested</a> to <var>serialized</var>.[[Requested]].</p>"
        }
      ]
    },
    {
      "name": "union/flattened member types",
      "href": "https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"union\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-flattened-union-member-types\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">flattened member types</dfn>\n    of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②③\">union type</a>, possibly <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types②\">annotated</a>, is a set of types determined as\n    follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>T</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②④\">union type</a>.</p>"
        },
        {
          "html": "<p>Initialize <var>S</var> to ∅.</p>"
        },
        {
          "html": "For each <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-member-type\" id=\"ref-for-dfn-union-member-type⑤\">member type</a> <var>U</var> of <var>T</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>U</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③\">annotated type</a>, then\nset <var>U</var> to be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type②\">inner type</a> of <var>U</var>.</p>"
            },
            {
              "html": "<p>If <var>U</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type①⑥\">nullable type</a>, then\nset <var>U</var> to be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type⑨\">inner type</a> of <var>U</var>.</p>"
            },
            {
              "html": "<p>If <var>U</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②⑤\">union type</a>, then\nadd to <var>S</var> the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types⑦\">flattened member types</a>\nof <var>U</var>.</p>"
            },
            {
              "html": "<p>Otherwise, <var>U</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②⑥\">union type</a>.\nAdd <var>U</var> to <var>S</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>S</var>.</p>"
        }
      ]
    },
    {
      "name": "number of nullable member types",
      "href": "https://webidl.spec.whatwg.org/#dfn-number-of-nullable-member-types",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-number-of-nullable-member-types\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">number of nullable member types</dfn>\n    of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②⑧\">union type</a> is an integer\n    determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>T</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type②⑨\">union type</a>.</p>"
        },
        {
          "html": "<p>Initialize <var>n</var> to 0.</p>"
        },
        {
          "html": "For each <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-member-type\" id=\"ref-for-dfn-union-member-type⑥\">member type</a> <var>U</var> of <var>T</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>U</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type①⑦\">nullable type</a>, then:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>n</var> to <var>n</var> + 1.</p>"
                },
                {
                  "html": "<p>Set <var>U</var> to be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type①⓪\">inner type</a> of <var>U</var>.</p>"
                }
              ]
            },
            {
              "html": "If <var>U</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type③⓪\">union type</a>, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>m</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-number-of-nullable-member-types\" id=\"ref-for-dfn-number-of-nullable-member-types\">number of nullable member types</a> of <var>U</var>.</p>"
                },
                {
                  "html": "<p>Set <var>n</var> to <var>n</var> + <var>m</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>n</var>.</p>"
        }
      ]
    },
    {
      "name": "IDL type/extended attribute associated with",
      "href": "https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"IDL type\" data-dfn-type=\"dfn\" data-lt=\"extended attribute associated with|extended attributes associated with\" data-noexport=\"\" id=\"idl-type-extended-attribute-associated-with\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">extended attributes associated with</dfn>\n    an IDL type <var>type</var> are determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>extended attributes</var> be a new empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set③\">set</a>.</p>"
        },
        {
          "html": "<p>If <var>type</var> appears as part of a\n<emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-TypeWithExtendedAttributes\">TypeWithExtendedAttributes</a></emu-nt>\nproduction, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append③\">append</a> each of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute②⑧\">extended attributes</a> present in the production’s\n<emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-ExtendedAttributeList\">ExtendedAttributeList</a></emu-nt> to\n<var>extended attributes</var>.</p>"
        },
        {
          "html": "<p>If <var>type</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-member-type\" id=\"ref-for-dfn-union-member-type①⓪\">member type</a> of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type③⑥\">union type</a> <var>U</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append④\">append</a> each of the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with\">extended attributes associated with</a> <var>U</var> to <var>extended attributes</var>.</p>"
        },
        {
          "html": "<p>If <var>type</var> appears as part of a <emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-Type\">Type</a></emu-nt> production\ndirectly within an <emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-Argument\">Argument</a></emu-nt> production,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑤\">append</a> to <var>extended attributes</var> all of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute②⑨\">extended attributes</a> present in the\nproduction’s\n<emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-ExtendedAttributeList\">ExtendedAttributeList</a></emu-nt> that are\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#extended-attributes-applicable-to-types\" id=\"ref-for-extended-attributes-applicable-to-types\">applicable to types</a>.</p>"
        },
        {
          "html": "<p>If <var>type</var> appears as part of a <emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-Type\">Type</a></emu-nt> production\ndirectly within a <emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-DictionaryMember\">DictionaryMember</a></emu-nt>\nproduction, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑥\">append</a> to <var>extended attributes</var> all of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute③⓪\">extended attributes</a>\npresent in the production’s\n<emu-nt><a href=\"https://webidl.spec.whatwg.org/#prod-ExtendedAttributeList\">ExtendedAttributeList</a></emu-nt> that are\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#extended-attributes-applicable-to-types\" id=\"ref-for-extended-attributes-applicable-to-types②\">applicable to types</a>.</p>"
        },
        {
          "html": "<p>If <var>type</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-typedef\" id=\"ref-for-dfn-typedef①⑤\">typedef</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑦\">append</a> the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①\">extended attributes associated with</a> the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#type-being-given-a-new-name\" id=\"ref-for-type-being-given-a-new-name①\">type being given a new name</a> to <var>extended attributes</var>.</p>"
        },
        {
          "html": "<p>Return <var>extended attributes</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to any",
      "href": "https://webidl.spec.whatwg.org/#js-to-any",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-any\" id=\"ref-for-idl-any①⓪\">any</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> is <emu-val>undefined</emu-val>, then\nreturn the unique <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined⑤\">undefined</a></code> IDL value.</p>"
        },
        {
          "html": "<p>If <var>V</var> is <emu-val>null</emu-val>, then\nreturn the <emu-val>null</emu-val> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object⑤\">object?</a></code> reference.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-boolean-type\" id=\"ref-for-sec-ecmascript-language-types-boolean-type\">is a Boolean</a>, then\nreturn the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean⑦\">boolean</a></code> value that represents the same truth value.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type\">is a Number</a>, then\nreturn the result of <a href=\"https://webidl.spec.whatwg.org/#js-to-unrestricted-double\">converting</a> <var>V</var>\nto an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double⑦\">unrestricted double</a></code>.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-bigint-type\" id=\"ref-for-sec-ecmascript-language-types-bigint-type\">is a BigInt</a>, then\nreturn the result of <a href=\"https://webidl.spec.whatwg.org/#js-to-bigint\">converting</a> <var>V</var>\nto a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint⑥\">bigint</a></code>.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type\">is a String</a>, then\nreturn the result of <a href=\"https://webidl.spec.whatwg.org/#js-to-DOMString\">converting</a> <var>V</var>\nto a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③③\">DOMString</a></code>.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-symbol-type\" id=\"ref-for-sec-ecmascript-language-types-symbol-type\">is a Symbol</a>, then\nreturn the result of <a href=\"https://webidl.spec.whatwg.org/#js-symbol\">converting</a> <var>V</var>\nto a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-symbol\" id=\"ref-for-idl-symbol②\">symbol</a></code>.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type\">is an Object</a>, then\nreturn an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object⑥\">object</a></code> value that references <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to boolean",
      "href": "https://webidl.spec.whatwg.org/#js-to-boolean",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean⑧\">boolean</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be the result of computing <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toboolean\" id=\"ref-for-sec-toboolean\">ToBoolean</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean⑨\">boolean</a></code> value that is the one that\nrepresents the same truth value as the\nJavaScript Boolean value <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to byte",
      "href": "https://webidl.spec.whatwg.org/#js-to-byte",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-byte\" id=\"ref-for-idl-byte④\">byte</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint\">ConvertToInt</a>(<var>V</var>, 8, \"<code>signed</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-byte\" id=\"ref-for-idl-byte⑤\">byte</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to octet",
      "href": "https://webidl.spec.whatwg.org/#js-to-octet",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-octet\" id=\"ref-for-idl-octet④\">octet</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint①\">ConvertToInt</a>(<var>V</var>, 8, \"<code>unsigned</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-octet\" id=\"ref-for-idl-octet⑤\">octet</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to short",
      "href": "https://webidl.spec.whatwg.org/#js-to-short",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-short\" id=\"ref-for-idl-short③\">short</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint②\">ConvertToInt</a>(<var>V</var>, 16, \"<code>signed</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-short\" id=\"ref-for-idl-short④\">short</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to unsigned short",
      "href": "https://webidl.spec.whatwg.org/#js-to-unsigned-short",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-short\" id=\"ref-for-idl-unsigned-short③\">unsigned short</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint③\">ConvertToInt</a>(<var>V</var>, 16, \"<code>unsigned</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-short\" id=\"ref-for-idl-unsigned-short④\">unsigned short</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to long",
      "href": "https://webidl.spec.whatwg.org/#js-to-long",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-long\" id=\"ref-for-idl-long①②\">long</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint④\">ConvertToInt</a>(<var>V</var>, 32, \"<code>signed</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-long\" id=\"ref-for-idl-long①③\">long</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to unsigned long",
      "href": "https://webidl.spec.whatwg.org/#js-to-unsigned-long",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑦\">unsigned long</a></code> value  by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint⑤\">ConvertToInt</a>(<var>V</var>, 32, \"<code>unsigned</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long\" id=\"ref-for-idl-unsigned-long⑧\">unsigned long</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to long long",
      "href": "https://webidl.spec.whatwg.org/#js-to-long-long",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑨\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-long-long\" id=\"ref-for-idl-long-long③\">long long</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint⑥\">ConvertToInt</a>(<var>V</var>, 64, \"<code>signed</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-long-long\" id=\"ref-for-idl-long-long④\">long long</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to unsigned long long",
      "href": "https://webidl.spec.whatwg.org/#js-to-unsigned-long-long",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⓪\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long-long\" id=\"ref-for-idl-unsigned-long-long③\">unsigned long long</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\" id=\"ref-for-abstract-opdef-converttoint⑦\">ConvertToInt</a>(<var>V</var>, 64, \"<code>unsigned</code>\").</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unsigned-long-long\" id=\"ref-for-idl-unsigned-long-long④\">unsigned long long</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "IntegerPart",
      "href": "https://webidl.spec.whatwg.org/#abstract-opdef-integerpart",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"abstract-op\" data-export=\"\" data-lt=\"IntegerPart\" id=\"abstract-opdef-integerpart\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">IntegerPart(<var>n</var>)</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>r</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#eqn-floor\" id=\"ref-for-eqn-floor\">floor</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#eqn-abs\" id=\"ref-for-eqn-abs\">abs</a>(<var>n</var>)).</p>"
        },
        {
          "html": "<p>If <var>n</var> &lt; 0, then return -1 × <var>r</var>.</p>"
        },
        {
          "html": "<p>Otherwise, return <var>r</var>.</p>"
        }
      ]
    },
    {
      "name": "ConvertToInt",
      "href": "https://webidl.spec.whatwg.org/#abstract-opdef-converttoint",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"abstract-op\" data-export=\"\" data-lt=\"ConvertToInt\" id=\"abstract-opdef-converttoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ConvertToInt(<var>V</var>, <var>bitLength</var>, <var>signedness</var>)</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>bitLength</var> is 64, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>upperBound</var> be 2<sup>53</sup> − 1.</p>"
            },
            {
              "html": "<p>If <var>signedness</var> is \"<code>unsigned</code>\", then let <var>lowerBound</var> be 0.</p>"
            },
            {
              "html": "<p>Otherwise let <var>lowerBound</var> be −2<sup>53</sup> + 1.</p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>signedness</var> is \"<code>unsigned</code>\", then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>lowerBound</var> be 0.</p>"
            },
            {
              "html": "<p>Let <var>upperBound</var> be 2<sup><var>bitLength</var></sup> − 1.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>lowerBound</var> be -2<sup><var>bitLength</var> − 1</sup>.</p>"
            },
            {
              "html": "<p>Let <var>upperBound</var> be 2<sup><var>bitLength</var> − 1</sup> − 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber\">ToNumber</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>x</var> is −0, then set <var>x</var> to +0.</p>"
        },
        {
          "html": "If the conversion is to an IDL type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with④\">associated with</a>\nthe [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#EnforceRange\" id=\"ref-for-EnforceRange②\">EnforceRange</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute③④\">extended attribute</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, +∞, or −∞,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Set <var>x</var> to <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\" id=\"ref-for-abstract-opdef-integerpart\">IntegerPart</a>(<var>x</var>).</p>"
            },
            {
              "html": "<p>If <var>x</var> &lt; <var>lowerBound</var> or <var>x</var> &gt; <var>upperBound</var>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Return <var>x</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>x</var> is not <emu-val>NaN</emu-val> and the conversion is to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with⑤\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Clamp\" id=\"ref-for-Clamp③\">Clamp</a></code>] extended attribute,\nthen:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>x</var> to <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#eqn-min\" id=\"ref-for-eqn-min\">min</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#eqn-max\" id=\"ref-for-eqn-max①\">max</a>(<var>x</var>, <var>lowerBound</var>), <var>upperBound</var>).</p>"
            },
            {
              "html": "<p>Round <var>x</var> to the nearest integer, choosing the even integer if it lies halfway between two,\nand choosing +0 rather than −0.</p>"
            },
            {
              "html": "<p>Return <var>x</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, +0, +∞, or −∞,\nthen return +0.</p>"
        },
        {
          "html": "<p>Set <var>x</var> to <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\" id=\"ref-for-abstract-opdef-integerpart①\">IntegerPart</a>(<var>x</var>).</p>"
        },
        {
          "html": "<p>Set <var>x</var> to <var>x</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#eqn-modulo\" id=\"ref-for-eqn-modulo\">modulo</a> 2<sup><var>bitLength</var></sup>.</p>"
        },
        {
          "html": "<p>If <var>signedness</var> is \"<code>signed</code>\" and <var>x</var> ≥ 2<sup><var>bitLength</var> − 1</sup>,\nthen return <var>x</var> − 2<sup><var>bitLength</var></sup>.</p>"
        },
        {
          "html": "<p>Otherwise, return <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to float",
      "href": "https://webidl.spec.whatwg.org/#js-to-float",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①①\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-float\" id=\"ref-for-idl-float⑥\">float</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber①\">ToNumber</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, +∞, or −∞,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>S</var> be the set of finite IEEE 754 single-precision floating\npoint values except −0, but with two special values added: 2<sup>128</sup> and\n−2<sup>128</sup>.</p>"
        },
        {
          "html": "<p>Let <var>y</var> be the number in <var>S</var> that is closest\nto <var>x</var>, selecting the number with an\n<em>even significand</em> if there are two <a data-link-type=\"dfn\" data-refhint-key=\"f912dff2\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type④\">equally close values</a>.\n(The two special values 2<sup>128</sup> and −2<sup>128</sup>\nare considered to have even significands for this purpose.)</p>"
        },
        {
          "html": "<p>If <var>y</var> is 2<sup>128</sup> or −2<sup>128</sup>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <var>y</var> is +0 and <var>x</var> is negative, return −0.</p>"
        },
        {
          "html": "<p>Return <var>y</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to unrestricted float",
      "href": "https://webidl.spec.whatwg.org/#js-to-unrestricted-float",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①②\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float⑦\">unrestricted float</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber②\">ToNumber</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, then return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float⑧\">unrestricted float</a></code> value that represents the IEEE 754 NaN value with the bit pattern 0x7fc00000 <a data-link-type=\"biblio\" href=\"https://webidl.spec.whatwg.org/#biblio-ieee-754\" title=\"IEEE Standard for Floating-Point Arithmetic\">[IEEE-754]</a>.</p>"
        },
        {
          "html": "<p>Let <var>S</var> be the set of finite IEEE 754 single-precision floating\npoint values except −0, but with two special values added: 2<sup>128</sup> and\n−2<sup>128</sup>.</p>"
        },
        {
          "html": "<p>Let <var>y</var> be the number in <var>S</var> that is closest\nto <var>x</var>, selecting the number with an\n<em>even significand</em> if there are two <a data-link-type=\"dfn\" data-refhint-key=\"f912dff2\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type⑤\">equally close values</a>.\n(The two special values 2<sup>128</sup> and −2<sup>128</sup>\nare considered to have even significands for this purpose.)</p>"
        },
        {
          "html": "<p>If <var>y</var> is 2<sup>128</sup>, return +∞.</p>"
        },
        {
          "html": "<p>If <var>y</var> is −2<sup>128</sup>, return −∞.</p>"
        },
        {
          "html": "<p>If <var>y</var> is +0 and <var>x</var> is negative, return −0.</p>"
        },
        {
          "html": "<p>Return <var>y</var>.</p>"
        }
      ]
    },
    {
      "name": "convert an unrestricted float to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#unrestricted-float-to-js",
      "html": "The result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value①②\">converting</a>\n    an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float⑨\">unrestricted float</a></code> value to a JavaScript\n    value is a Number:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float①⓪\">unrestricted float</a></code> value is a NaN,\nthen the Number value is <emu-val>NaN</emu-val>.</p>"
        },
        {
          "html": "<p>Otherwise, the Number value is\nthe one that represents the same numeric value as the IDL\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-float\" id=\"ref-for-idl-unrestricted-float①①\">unrestricted float</a></code> value.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to double",
      "href": "https://webidl.spec.whatwg.org/#js-to-double",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①③\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-double\" id=\"ref-for-idl-double①④\">double</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber③\">ToNumber</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, +∞, or −∞,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-double\" id=\"ref-for-idl-double①⑤\">double</a></code> value\nthat represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to unrestricted double",
      "href": "https://webidl.spec.whatwg.org/#js-to-unrestricted-double",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①④\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double⑧\">unrestricted double</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber④\">ToNumber</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>x</var> is <emu-val>NaN</emu-val>, then\nreturn the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double⑨\">unrestricted double</a></code> value that represents\nthe IEEE 754 NaN value with the bit pattern 0x7ff8000000000000 <a data-link-type=\"biblio\" href=\"https://webidl.spec.whatwg.org/#biblio-ieee-754\" title=\"IEEE Standard for Floating-Point Arithmetic\">[IEEE-754]</a>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double①⓪\">unrestricted double</a></code> value\nthat represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert an unrestricted double to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#unrestricted-double-to-js",
      "html": "The result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value①④\">converting</a>\n    an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double①①\">unrestricted double</a></code> value to a JavaScript\n    value is a Number:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double①②\">unrestricted double</a></code> value is a NaN,\nthen the Number value is <emu-val>NaN</emu-val>.</p>"
        },
        {
          "html": "<p>Otherwise, the Number value is\nthe one that represents the same numeric value as the IDL\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-unrestricted-double\" id=\"ref-for-idl-unrestricted-double①③\">unrestricted double</a></code> value.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to a bigint",
      "href": "https://webidl.spec.whatwg.org/#js-to-bigint",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⑤\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint⑦\">bigint</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tobigint\" id=\"ref-for-sec-tobigint\">ToBigInt</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint⑧\">bigint</a></code> value that represents the same numeric value as <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a bigint to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#bigint-to-js",
      "html": "The result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value①⑤\">converting</a>\n    an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint⑨\">bigint</a></code> value to a JavaScript value is a BigInt:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-bigint-objects\" id=\"ref-for-sec-bigint-objects\">BigInt</a></code> value that represents the same numeric value as the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⓪\">bigint</a></code>\nvalue.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to a numeric type or a bigint",
      "href": "https://webidl.spec.whatwg.org/#js-to-bigint-or-numeric",
      "html": "A JavaScript value <var>V</var> is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"converted to a numeric type or bigint\" data-noexport=\"\" id=\"converted-to-a-numeric-type-or-bigint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">converted</dfn>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type⑨\">numeric type</a> <var>T</var> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①①\">bigint</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumeric\" id=\"ref-for-sec-tonumeric\">ToNumeric</a>(<var>V</var>).</p>"
        },
        {
          "html": "If <var>x</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-bigint-type\" id=\"ref-for-sec-ecmascript-language-types-bigint-type①\">is a BigInt</a>, then",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①②\">bigint</a></code> value that represents the same numeric value as <var>x</var>.</p>"
            }
          ]
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>x</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type⑥\">is a Number</a>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value①⑥\">converting</a> <var>x</var> to <var>T</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to DOMString",
      "href": "https://webidl.spec.whatwg.org/#js-to-DOMString",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⑥\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③④\">DOMString</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> is <emu-val>null</emu-val> and the conversion is to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with⑥\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNullToEmptyString\" id=\"ref-for-LegacyNullToEmptyString①\">LegacyNullToEmptyString</a></code>] extended\nattribute, then return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③⑤\">DOMString</a></code> value that represents the empty string.</p>"
        },
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring②\">ToString</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③⑥\">DOMString</a></code> value that represents the same sequence of code units as the one the JavaScript String value <var>x</var> represents.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to ByteString",
      "href": "https://webidl.spec.whatwg.org/#js-to-ByteString",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⑦\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ByteString\" id=\"ref-for-idl-ByteString⑧\">ByteString</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring③\">ToString</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If the value of any <a data-link-type=\"dfn\" data-refhint-key=\"fe0437f8\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type①\">element</a>\nof <var>x</var> is greater than 255, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ByteString\" id=\"ref-for-idl-ByteString⑨\">ByteString</a></code> value\nwhose length is the length of <var>x</var>, and where the value of each element is\nthe value of the corresponding element of <var>x</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to USVString",
      "href": "https://webidl.spec.whatwg.org/#js-to-USVString",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⑧\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-USVString\" id=\"ref-for-idl-USVString①⓪\">USVString</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>string</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①⑨\">converting</a> <var>V</var>\nto a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③⑨\">DOMString</a></code>.</p>"
        },
        {
          "html": "<p>Return an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-USVString\" id=\"ref-for-idl-USVString①①\">USVString</a></code> value that is the result of\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#javascript-string-convert\" id=\"ref-for-javascript-string-convert\">converting</a> <var>string</var> to a sequence of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#scalar-value\" id=\"ref-for-scalar-value⑨\">scalar values</a>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to object",
      "href": "https://webidl.spec.whatwg.org/#js-to-object",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⓪\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object⑧\">object</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①\">is not an Object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object⑨\">object</a></code> value that is a reference to the same object as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to a symbol",
      "href": "https://webidl.spec.whatwg.org/#js-to-symbol",
      "html": "<span id=\"es-to-symbol\"></span>\n    A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②①\">converted</a> to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-symbol\" id=\"ref-for-idl-symbol④\">symbol</a></code> value\n    by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"845a9e60\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-symbol-type\" id=\"ref-for-sec-ecmascript-language-types-symbol-type①\">is not a Symbol</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-symbol\" id=\"ref-for-idl-symbol⑤\">symbol</a></code> value that is a reference to the same symbol as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to interface",
      "href": "https://webidl.spec.whatwg.org/#js-to-interface",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②②\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface⑥\">interface type</a> value by running the following algorithm (where <var>I</var> is the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①①⓪\">interface</a>):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③\">implements</a> <var>I</var>, then return the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface⑦\">interface type</a> value that represents a reference to that platform object.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑧\">Throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑧\">TypeError</a></code>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to callback interface",
      "href": "https://webidl.spec.whatwg.org/#js-to-callback-interface",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②③\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface⑤\">callback interface type</a> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②\">is not an Object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface⑥\">callback interface type</a> value that represents a reference to <var>V</var>, with\nthe <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#incumbent-settings-object\" id=\"ref-for-incumbent-settings-object②\">incumbent settings object</a> as the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-context\" id=\"ref-for-dfn-callback-context④\">callback context</a>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to dictionary",
      "href": "https://webidl.spec.whatwg.org/#js-to-dictionary",
      "html": "A JavaScript value <var>jsDict</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②④\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①④\">dictionary type</a> value by\n    running the following algorithm (where <var>D</var> is the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①⑤\">dictionary type</a>):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>jsDict</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type③\">is not an Object</a> and <var>jsDict</var> is neither <emu-val>undefined</emu-val> nor\n<emu-val>null</emu-val>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>idlDict</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑧\">ordered map</a>, representing a dictionary of type <var>D</var>.</p>"
        },
        {
          "html": "<p>Let <var>dictionaries</var> be a list consisting of <var>D</var> and all of <var>D</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherited-dictionaries\" id=\"ref-for-dfn-inherited-dictionaries④\">inherited dictionaries</a>,\nin order from least to most derived.</p>"
        },
        {
          "html": "For each dictionary <var>dictionary</var> in <var>dictionaries</var>, in order:",
          "rationale": "for",
          "steps": [
            {
              "html": "For each dictionary member <var>member</var> declared on <var>dictionary</var>, in lexicographical order:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>key</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑤①\">identifier</a> of <var>member</var>.</p>"
                },
                {
                  "html": "If <var>jsDict</var> is either <emu-val>undefined</emu-val> or <emu-val>null</emu-val>, then:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsMemberValue</var> be <emu-val>undefined</emu-val>.</p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise,",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsMemberValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-get-o-p\" id=\"ref-for-sec-get-o-p\">Get</a>(<var>jsDict</var>, <var>key</var>).</p>"
                    }
                  ]
                },
                {
                  "html": "If <var>jsMemberValue</var> is not <emu-val>undefined</emu-val>, then:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlMemberValue</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⑤\">converting</a> <var>jsMemberValue</var> to an IDL value whose type is the type <var>member</var> is declared to be of.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set\">Set</a> <var>idlDict</var>[<var>key</var>] to <var>idlMemberValue</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise, if <var>jsMemberValue</var> is <emu-val>undefined</emu-val> but <var>member</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-dictionary-member-default-value\" id=\"ref-for-dfn-dictionary-member-default-value①①\">default value</a>, then:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlMemberValue</var> be <var>member</var>’s default value.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set①\">Set</a> <var>idlDict</var>[<var>key</var>] to <var>idlMemberValue</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Otherwise, if <var>jsMemberValue</var> is <emu-val>undefined</emu-val> and <var>member</var> is\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#required-dictionary-member\" id=\"ref-for-required-dictionary-member⑧\">required</a>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror⑥\">TypeError</a></code>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>idlDict</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a dictionary to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#dictionary-to-js",
      "html": "An IDL dictionary value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value②④\">converted</a>\n    to a JavaScript Object value by\n    running the following algorithm (where <var>D</var> is the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-dictionary\" id=\"ref-for-dfn-dictionary①①\">dictionary</a>):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate\">OrdinaryObjectCreate</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object②\">%Object.prototype%</a></code>).</p>"
        },
        {
          "html": "<p>Let <var>dictionaries</var> be a list consisting of <var>D</var> and all of <var>D</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherited-dictionaries\" id=\"ref-for-dfn-inherited-dictionaries⑤\">inherited dictionaries</a>,\nin order from least to most derived.</p>"
        },
        {
          "html": "For each dictionary <var>dictionary</var> in <var>dictionaries</var>, in order:",
          "rationale": "for",
          "steps": [
            {
              "html": "For each dictionary member <var>member</var> declared on <var>dictionary</var>, in lexicographical order:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>key</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑤②\">identifier</a> of <var>member</var>.</p>"
                },
                {
                  "html": "If <var>V</var>[<var>key</var>] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a>, then:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlValue</var> be <var>V</var>[<var>key</var>].</p>"
                    },
                    {
                      "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value②⑤\">converting</a> <var>idlValue</var> to a JavaScript value.</p>"
                    },
                    {
                      "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow\">CreateDataPropertyOrThrow</a>(<var>O</var>, <var>key</var>, <var>value</var>).</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>O</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to enumeration",
      "href": "https://webidl.spec.whatwg.org/#js-to-enumeration",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⑥\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-enumeration\" id=\"ref-for-dfn-enumeration①⑤\">enumeration type</a> value as follows\n    (where <var>E</var> is the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-enumeration\" id=\"ref-for-dfn-enumeration①⑥\">enumeration</a>):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>S</var> be the result of calling <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring④\">ToString</a>(<var>V</var>).</p>"
        },
        {
          "html": "<p>If <var>S</var> is not one of <var>E</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-enumeration-value\" id=\"ref-for-dfn-enumeration-value④\">enumeration values</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the enumeration value of type <var>E</var> that is equal to <var>S</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to callback function",
      "href": "https://webidl.spec.whatwg.org/#js-to-callback-function",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⑦\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-function\" id=\"ref-for-idl-callback-function①\">callback function type</a> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the result of calling <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable②\">IsCallable</a>(<var>V</var>) is <emu-val>false</emu-val>\nand the conversion to an IDL value\nis not being performed due\nto <var>V</var> being assigned to an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute③⑨\">attribute</a>\nwhose type is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②⓪\">nullable</a>\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-function\" id=\"ref-for-dfn-callback-function②③\">callback function</a>\nthat is annotated with [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyTreatNonObjectAsNull\" id=\"ref-for-LegacyTreatNonObjectAsNull④\">LegacyTreatNonObjectAsNull</a></code>],\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-function\" id=\"ref-for-idl-callback-function②\">callback function type</a> value\nthat represents a reference to the same object that <var>V</var> represents, with the\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#incumbent-settings-object\" id=\"ref-for-incumbent-settings-object③\">incumbent settings object</a> as the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-context\" id=\"ref-for-dfn-callback-context⑤\">callback context</a>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to nullable",
      "href": "https://webidl.spec.whatwg.org/#js-to-nullable",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⑧\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②②\">nullable type</a> <code class=\"idl\"><var>T</var>?</code>\n    value (where <var>T</var> is the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type①③\">inner type</a>) as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type④\">is not an Object</a>, and\nthe conversion to an IDL value is being performed due\nto <var>V</var> being assigned to an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute④⓪\">attribute</a>\nwhose type is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②③\">nullable</a>\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-function\" id=\"ref-for-dfn-callback-function②④\">callback function</a>\nthat is annotated with [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyTreatNonObjectAsNull\" id=\"ref-for-LegacyTreatNonObjectAsNull⑤\">LegacyTreatNonObjectAsNull</a></code>],\nthen return the IDL\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②④\">nullable type</a> <code class=\"idl\"><var>T</var>?</code>\nvalue <emu-val>null</emu-val>.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>V</var> is <emu-val>undefined</emu-val>,\nand <var>T</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-undefined\" id=\"ref-for-dfn-includes-undefined③\">includes undefined</a>,\nreturn the unique <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined⑨\">undefined</a></code> value.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>V</var> is <emu-val>null</emu-val> or <emu-val>undefined</emu-val>, then return the IDL\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②⑤\">nullable type</a> <code class=\"idl\"><var>T</var>?</code>\nvalue <emu-val>null</emu-val>.</p>"
        },
        {
          "html": "<p>Otherwise, return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②⑨\">converting</a> <var>V</var>\nusing the rules for the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type①④\">inner IDL type</a> <code class=\"idl\">T</code>.</p>"
        }
      ]
    },
    {
      "name": "convert a nullable to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#nullable-to-js",
      "html": "The result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value②⑧\">converting</a>\n    an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②⑥\">nullable type</a> value to a JavaScript value is:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②⑦\">nullable type</a> <code class=\"idl\"><var>T</var>?</code>\nvalue is <emu-val>null</emu-val>,\nthen the JavaScript value is <emu-val>null</emu-val>.</p>"
        },
        {
          "html": "<p>Otherwise, the JavaScript value is the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value②⑨\">converting</a>\nthe IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type②⑧\">nullable type</a> value\nto the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inner-type\" id=\"ref-for-dfn-inner-type①⑤\">inner IDL type</a> <code class=\"idl\"><var>T</var></code>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to sequence",
      "href": "https://webidl.spec.whatwg.org/#js-to-sequence",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⓪\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①④\">sequence&lt;<var>T</var>&gt;</a> value as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type⑤\">is not an Object</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②①\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①⓪\">%Symbol.iterator%</a></code>).</p>"
        },
        {
          "html": "<p>If <var>method</var> is <emu-val>undefined</emu-val>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-sequence-from-iterable\" id=\"ref-for-create-sequence-from-iterable\">creating a sequence</a>\nfrom <var>V</var> and <var>method</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a sequence to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#sequence-to-js",
      "html": "An IDL sequence value <var>S</var> of type\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①⑤\">sequence&lt;<var>T</var>&gt;</a> is\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③⓪\">converted</a>\n    to a JavaScript Array object as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>n</var> be the length of <var>S</var>.</p>"
        },
        {
          "html": "<p>Let <var>A</var> be a new Array object created as if by the expression <code>[]</code>.</p>"
        },
        {
          "html": "<p>Initialize <var>i</var> to be 0.</p>"
        },
        {
          "html": "While <var>i</var> &lt; <var>n</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be the value in <var>S</var> at index <var>i</var>.</p>"
            },
            {
              "html": "<p>Let <var>E</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③①\">converting</a>\n<var>V</var> to a JavaScript value.</p>"
            },
            {
              "html": "<p>Let <var>P</var> be the result of calling <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring⑤\">ToString</a>(<var>i</var>).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①\">CreateDataPropertyOrThrow</a>(<var>A</var>, <var>P</var>, <var>E</var>).</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>A</var>.</p>"
        }
      ]
    },
    {
      "name": "create sequence from iterable",
      "html": "To create an IDL value of type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①⑥\">sequence&lt;<var>T</var>&gt;</a>\n    given an iterable <var>iterable</var> and an iterator getter <var>method</var>,\n    perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>iteratorRecord</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getiteratorfrommethod\" id=\"ref-for-sec-getiteratorfrommethod\">GetIteratorFromMethod</a>(<var>iterable</var>, <var>method</var>).</p>"
        },
        {
          "html": "<p>Initialize <var>i</var> to be 0.</p>"
        },
        {
          "html": "Repeat",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>next</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iteratorstepvalue\" id=\"ref-for-sec-iteratorstepvalue\">IteratorStepValue</a>(<var>iteratorRecord</var>).</p>"
            },
            {
              "html": "<p>If <var>next</var> is <emu-const>done</emu-const>,\nthen return an IDL sequence value of type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①⑦\">sequence&lt;<var>T</var>&gt;</a>\nof length <var>i</var>, where the value of the element\nat index <var>j</var> is\n<var>S</var><sub><var>j</var></sub>.</p>"
            },
            {
              "html": "<p>Initialize <var>S</var><sub><var>i</var></sub> to the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③①\">converting</a>\n<var>next</var> to an IDL value of type <var>T</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "convert a JavaScript value to async sequence",
      "href": "https://webidl.spec.whatwg.org/#js-to-async-iterable",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③②\">converted</a>\n    to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type⑦\">async_sequence&lt;<var>T</var>&gt;</a> value as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type⑥\">is not an Object</a>, then\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod①\">GetMethod</a>(obj, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①①\">%Symbol.asyncIterator%</a></code>).</p>"
        },
        {
          "html": "If <var>method</var> is <emu-val>undefined</emu-val>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>syncMethod</var> to <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod②\">GetMethod</a>(obj, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①②\">%Symbol.iterator%</a></code>).</p>"
            },
            {
              "html": "<p>If <var>syncMethod</var> is undefined, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⑥\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Return an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type①\">async sequence</a> value with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object\">object</a> set to <var>V</var>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-method\" id=\"ref-for-js-async-sequence-method\">method</a> set to <var>syncMethod</var>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-type\" id=\"ref-for-js-async-sequence-type\">type</a> set to\n\"<code>sync</code>\".</p>"
            }
          ]
        },
        {
          "html": "<p>Return an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type②\">async sequence</a> value with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object①\">object</a> set to <var>V</var>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-method\" id=\"ref-for-js-async-sequence-method①\">method</a> set to <var>method</var>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-type\" id=\"ref-for-js-async-sequence-type①\">type</a> set to\n\"<code>async</code>\".</p>"
        }
      ]
    },
    {
      "name": "convert an async sequence to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#async-sequence-to-js",
      "html": "An IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type③\">async_sequence&lt;<var>T</var>&gt;</a> value <var>V</var> is\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③②\">converted</a> to a JavaScript object as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <var>V</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object②\">object</a>.</p>"
        }
      ]
    },
    {
      "name": "open an async sequence",
      "href": "https://webidl.spec.whatwg.org/#async-sequence-open",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"open an async sequence\" id=\"async-sequence-open\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">open</dfn> an\n    <code><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#async-sequence-type\" id=\"ref-for-async-sequence-type③\">async_sequence&lt;<var>T</var>&gt;</a></code> <var>sequence</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>iterator</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getiteratorfrommethod\" id=\"ref-for-sec-getiteratorfrommethod①\">GetIteratorFromMethod</a>(<var>sequence</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object③\">object</a>, <var>sequence</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-method\" id=\"ref-for-js-async-sequence-method②\">method</a>).</p>"
        },
        {
          "html": "<p>If <var>sequence</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-type\" id=\"ref-for-js-async-sequence-type②\">type</a> is \"<code>sync</code>\", set <var>iterator</var> to\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#sec-createasyncfromsynciterator\" id=\"ref-for-sec-createasyncfromsynciterator\">CreateAsyncFromSyncIterator</a>(<var>iterator</var>).</p>"
        },
        {
          "html": "<p>Return an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#async-iterator\" id=\"ref-for-async-iterator②\">async iterator</a> value with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-iterator-underlying-record\" id=\"ref-for-js-async-iterator-underlying-record\">underlying record</a> set to <var>iterator</var> and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-iterator-type-parameter\" id=\"ref-for-js-async-iterator-type-parameter\">type parameter</a> set to <var>T</var>.</p>"
        }
      ]
    },
    {
      "name": "get an async iterator next value",
      "href": "https://webidl.spec.whatwg.org/#async-iterator-get-next-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"get an async iterator next value\" id=\"async-iterator-get-next-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the next value</dfn> of an\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#async-iterator\" id=\"ref-for-async-iterator③\">async iterator</a> <var>iterator</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>nextResult</var> be\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iteratornext\" id=\"ref-for-sec-iteratornext\">IteratorNext</a>(<var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-iterator-underlying-record\" id=\"ref-for-js-async-iterator-underlying-record①\">underlying record</a>).</p>"
        },
        {
          "html": "<p>If <var>nextResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type\">abrupt completion</a>, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with\">a promise rejected with</a>\n<var>nextResult</var>.[[Value]].</p>"
        },
        {
          "html": "<p>Let <var>nextPromise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-resolved-with\" id=\"ref-for-a-promise-resolved-with\">a promise resolved with</a> <var>nextResult</var>.[[Value]].</p>"
        },
        {
          "html": "Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled\" id=\"ref-for-dfn-perform-steps-once-promise-is-settled\">reacting</a> to <var>nextPromise</var> with the following fulfillment\nsteps, given <var>iterResult</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>iterResult</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type⑦\">is not an Object</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⑦\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⑦\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>done</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands②⑨\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iteratorcomplete\" id=\"ref-for-sec-iteratorcomplete\">IteratorComplete</a>(<var>iterResult</var>).</p>"
            },
            {
              "html": "If <var>done</var> is true:",
              "rationale": "return",
              "steps": [
                {
                  "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#end-of-iteration\" id=\"ref-for-end-of-iteration①\">end of iteration</a>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>V</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iteratorvalue\" id=\"ref-for-sec-iteratorvalue\">IteratorValue</a>(<var>iterResult</var>).</p>"
                },
                {
                  "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③③\">converting</a> <var>V</var> to an IDL\nvalue of type <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-iterator-type-parameter\" id=\"ref-for-js-async-iterator-type-parameter①\">type parameter</a>.</p>"
                },
                {
                  "html": "<p>Return <var>value</var>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "close an async iterator",
      "href": "https://webidl.spec.whatwg.org/#async-iterator-close",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"close an async iterator\" id=\"async-iterator-close\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">close</dfn> an\n    <code><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#async-iterator\" id=\"ref-for-async-iterator④\">async iterator&lt;<var>T</var>&gt;</a></code> <var>iterator</var>,\n    with an ECMAScript value <var>reason</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>iteratorRecord</var> be <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-iterator-underlying-record\" id=\"ref-for-js-async-iterator-underlying-record②\">underlying record</a>.</p>"
        },
        {
          "html": "<p>Let <var>iteratorObj</var> be <var>iteratorRecord</var>.[[Iterator]].</p>"
        },
        {
          "html": "<p>Let <var>returnMethod</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod③\">GetMethod</a>(<var>iteratorObj</var>, \"<code>return</code>\").</p>"
        },
        {
          "html": "<p>If <var>returnMethod</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①\">abrupt completion</a>, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with①\">a promise rejected with</a>\n<var>returnMethod</var>.[[Value]].</p>"
        },
        {
          "html": "<p>If <var>returnMethod</var> is <emu-val>undefined</emu-val>, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-resolved-with\" id=\"ref-for-a-promise-resolved-with①\">a promise resolved with</a>\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①⓪\">undefined</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>returnResult</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call\">Call</a>(<var>returnMethod</var>.[[Value]], <var>iteratorObj</var>, « <var>reason</var> »).</p>"
        },
        {
          "html": "<p>If <var>returnResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type②\">abrupt completion</a>, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with②\">a promise rejected with</a>\n<var>returnResult</var>.[[Value]].</p>"
        },
        {
          "html": "<p>Let <var>returnPromise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-resolved-with\" id=\"ref-for-a-promise-resolved-with②\">a promise resolved with</a> <var>returnResult</var>.[[Value]].</p>"
        },
        {
          "html": "Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled\" id=\"ref-for-dfn-perform-steps-once-promise-is-settled①\">reacting</a> to <var>returnPromise</var> with the following fulfillment steps,\ngiven <var>returnPromiseResult</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>returnPromiseResult</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type⑧\">is not an Object</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⑧\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Return <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①①\">undefined</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "convert a JavaScript value to record",
      "href": "https://webidl.spec.whatwg.org/#js-to-record",
      "html": "A JavaScript value <var>O</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③④\">converted</a>\n    to an IDL <code><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-record\" id=\"ref-for-idl-record③\">record</a>&lt;<var>K</var>, <var>V</var>&gt;</code> value as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type⑨\">is not an Object</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw①⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror①⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be a new empty instance of <code><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-record\" id=\"ref-for-idl-record④\">record</a>&lt;<var>K</var>, <var>V</var>&gt;</code>.</p>"
        },
        {
          "html": "<p>Let <var>keys</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③①\">?</a> <var>O</var>.[[OwnPropertyKeys]]().</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑦\">For each</a> <var>key</var> of <var>keys</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>desc</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③②\">?</a> <var>O</var>.[[GetOwnProperty]](<var>key</var>).</p>"
            },
            {
              "html": "If <var>desc</var> is not <emu-val>undefined</emu-val>\nand <var>desc</var>.[[Enumerable]] is <emu-val>true</emu-val>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>typedKey</var> be <var>key</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⑤\">converted to an IDL value</a> of type <var>K</var>.</p>"
                },
                {
                  "html": "<p>Let <var>value</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-get-o-p\" id=\"ref-for-sec-get-o-p①\">Get</a>(<var>O</var>, <var>key</var>).</p>"
                },
                {
                  "html": "<p>Let <var>typedValue</var> be <var>value</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⑥\">converted to an IDL value</a> of type <var>V</var>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set②\">Set</a> <var>result</var>[<var>typedKey</var>] to <var>typedValue</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a record to a JavaScript value",
      "href": "https://webidl.spec.whatwg.org/#record-to-js",
      "html": "An IDL <code><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-record\" id=\"ref-for-idl-record⑤\">record</a>&lt;…&gt;</code> value <var>D</var> is\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③③\">converted</a>\n    to a JavaScript value as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate①\">OrdinaryObjectCreate</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object③\">%Object.prototype%</a></code>).</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate\">For each</a> <var>key</var> → <var>value</var> of <var>D</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>jsKey</var> be <var>key</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③④\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Let <var>jsValue</var> be <var>value</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③⑤\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Let <var>created</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdataproperty\" id=\"ref-for-sec-createdataproperty\">CreateDataProperty</a>(<var>result</var>, <var>jsKey</var>, <var>jsValue</var>).</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>created</var> is <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to promise",
      "href": "https://webidl.spec.whatwg.org/#js-to-promise",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⑦\">converted</a> to an IDL\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②\">Promise</a>&lt;<var>T</var>&gt;</code> value as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>promiseCapability</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor\">%Promise%</a></code>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①\">Call</a>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>,\n« <var>V</var> »).</p>"
        },
        {
          "html": "<p>Return <var>promiseCapability</var>.</p>"
        }
      ]
    },
    {
      "name": "a new promise",
      "href": "https://webidl.spec.whatwg.org/#a-new-promise",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"a new promise\" id=\"a-new-promise\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create</dfn> a new\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③\">Promise</a>&lt;<var>T</var>&gt;</code> in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm⑧\">realm</a> <var>realm</var>,\n    perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>constructor</var> be <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①\">%Promise%</a></code>]].</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability①\">NewPromiseCapability</a>(<var>constructor</var>).</p>"
        }
      ]
    },
    {
      "name": "a promise resolved with",
      "href": "https://webidl.spec.whatwg.org/#a-promise-resolved-with",
      "html": "To create a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"a promise resolved with\" id=\"a-promise-resolved-with\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">resolved promise</dfn> of type\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise④\">Promise</a>&lt;<var>T</var>&gt;</code>, with <var>x</var> (a value of type <var>T</var>) in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm⑨\">realm</a>\n    <var>realm</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③⑦\">converting</a> <var>x</var> to a\nJavaScript value.</p>"
        },
        {
          "html": "<p>Let <var>constructor</var> be <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor②\">%Promise%</a></code>]].</p>"
        },
        {
          "html": "<p>Let <var>promiseCapability</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability②\">NewPromiseCapability</a>(<var>constructor</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands③⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call②\">Call</a>(<var>promiseCapability</var>.[[Resolve]], <emu-val>undefined</emu-val>,\n« <var>value</var> »).</p>"
        },
        {
          "html": "<p>Return <var>promiseCapability</var>.</p>"
        }
      ]
    },
    {
      "name": "a promise rejected with",
      "href": "https://webidl.spec.whatwg.org/#a-promise-rejected-with",
      "html": "To create a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"a promise rejected with\" id=\"a-promise-rejected-with\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">rejected promise</dfn> of type\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise⑤\">Promise</a>&lt;<var>T</var>&gt;</code>, with reason <var>r</var> (a\n    JavaScript value) in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①⓪\">realm</a> <var>realm</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>constructor</var> be <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor③\">%Promise%</a></code>]].</p>"
        },
        {
          "html": "<p>Let <var>promiseCapability</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability③\">NewPromiseCapability</a>(<var>constructor</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call③\">Call</a>(<var>promiseCapability</var>.[[Reject]], <emu-val>undefined</emu-val>,\n« <var>r</var> »).</p>"
        },
        {
          "html": "<p>Return <var>promiseCapability</var>.</p>"
        }
      ]
    },
    {
      "name": "resolve",
      "href": "https://webidl.spec.whatwg.org/#resolve",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"resolve\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">resolve</dfn> a <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise⑥\">Promise</a>&lt;<var>T</var>&gt;</code> <var>p</var> with <var>x</var> (a\n    value of type <var>T</var>), perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>x</var> is not given, then let it be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①③\">undefined</a></code> value.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③⑧\">converting</a> <var>x</var> to a\nJavaScript value.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call④\">Call</a>(<var>p</var>.[[Resolve]], <emu-val>undefined</emu-val>, « <var>value</var> »).</p>"
        }
      ]
    },
    {
      "name": "reject",
      "href": "https://webidl.spec.whatwg.org/#reject",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"reject\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">reject</dfn> a <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise⑦\">Promise</a>&lt;<var>T</var>&gt;</code>\n    <var>p</var> with reason <var>r</var> (a JavaScript value), perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call⑤\">Call</a>(<var>p</var>.[[Reject]], <emu-val>undefined</emu-val>, « <var>r</var> »).</p>"
        }
      ]
    },
    {
      "name": "promise/react",
      "href": "https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"promise\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"react|reacting\" id=\"dfn-perform-steps-once-promise-is-settled\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">react</dfn>\n    to a <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise⑧\">Promise</a>&lt;<var>T</var>&gt;</code> <var>promise</var>, given one or two sets of steps\n    to perform, covering when the promise is fulfilled, rejected, or both, perform the following\n    steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>onFulfilledSteps</var> be the following steps given argument <var>V</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⑧\">converting</a> <var>V</var> to an IDL\nvalue of type <var>T</var>.</p>"
            },
            {
              "html": "<p>If there is a set of steps to be run if the promise was fulfilled, then let <var>result</var> be\nthe result of performing them, given <var>value</var> if <var>T</var> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①⑤\">undefined</a></code>. Otherwise, let\n<var>result</var> be <var>value</var>.</p>"
            },
            {
              "html": "<p>Return <var>result</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value③⑨\">converted to a JavaScript value</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>onFulfilled</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction\">CreateBuiltinFunction</a>(<var>onFulfilledSteps</var>, « »):</p>"
        },
        {
          "html": "Let <var>onRejectedSteps</var> be the following steps given argument <var>R</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>reason</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③⑨\">converting</a>\n<var>R</var> to an IDL value of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-any\" id=\"ref-for-idl-any①③\">any</a></code>.</p>"
            },
            {
              "html": "<p>If there is a set of steps to be run if the promise was rejected, then let <var>result</var> be\nthe result of performing them, given <var>reason</var>. Otherwise, let <var>result</var> be\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with③\">a promise rejected with</a> <var>reason</var>.</p>"
            },
            {
              "html": "<p>Return <var>result</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⓪\">converted to a JavaScript value</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>onRejected</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①\">CreateBuiltinFunction</a>(<var>onRejectedSteps</var>, « »):</p>"
        },
        {
          "html": "<p>Let <var>constructor</var> be <var>promise</var>.[[Promise]].[[Realm]].[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor④\">%Promise%</a></code>]].</p>"
        },
        {
          "html": "<p>Let <var>newCapability</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability④\">NewPromiseCapability</a>(<var>constructor</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen\">PerformPromiseThen</a>(<var>promise</var>.[[Promise]], <var>onFulfilled</var>, <var>onRejected</var>,\n<var>newCapability</var>).</p>"
        },
        {
          "html": "<p>Return <var>newCapability</var>.</p>"
        }
      ]
    },
    {
      "name": "upon fulfillment",
      "href": "https://webidl.spec.whatwg.org/#upon-fulfillment",
      "html": "To perform some steps <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"upon-fulfillment\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">upon fulfillment</dfn> of a\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①②\">Promise</a>&lt;<var>T</var>&gt;</code> <var>promise</var> given some steps <var>steps</var> taking a\n    value of type <var>T</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>promise</var> was fulfilled with value <var>v</var>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <var>steps</var> with <var>v</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "upon rejection",
      "href": "https://webidl.spec.whatwg.org/#upon-rejection",
      "html": "To perform some steps <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"upon-rejection\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">upon rejection</dfn> of a\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①③\">Promise</a>&lt;<var>T</var>&gt;</code> <var>promise</var> given some steps\n    <var>steps</var> taking a JavaScript value, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>promise</var> was rejected with reason <var>r</var>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <var>steps</var> with <var>r</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "wait for all",
      "href": "https://webidl.spec.whatwg.org/#wait-for-all",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"wait for all|waiting for all\" id=\"wait-for-all\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">wait for all</dfn> with a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⓪\">list</a> of\n    <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①④\">Promise</a>&lt;<var>T</var>&gt;</code> values <var>promises</var>, with success steps\n    <var>successSteps</var> that take a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①①\">list</a> of <var>T</var> values and failure steps <var>failureSteps</var> that take a\n    rejection reason <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-any\" id=\"ref-for-idl-any①④\">any</a></code> value, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>fullfilledCount</var> be 0.</p>"
        },
        {
          "html": "<p>Let <var>rejected</var> be false.</p>"
        },
        {
          "html": "Let <var>rejectionHandlerSteps</var> be the following steps given <var>arg</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>rejected</var> is true, abort these steps.</p>"
            },
            {
              "html": "<p>Set <var>rejected</var> to true.</p>"
            },
            {
              "html": "<p>Perform <var>failureSteps</var> given <var>arg</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>rejectionHandler</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②\">CreateBuiltinFunction</a>(<var>rejectionHandlerSteps</var>, « »):</p>"
        },
        {
          "html": "<p>Let <var>total</var> be <var>promises</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③\">size</a>.</p>"
        },
        {
          "html": "If <var>total</var> is 0, then:",
          "rationale": "queue",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-microtask\" id=\"ref-for-queue-a-microtask\">Queue a microtask</a> to perform <var>successSteps</var> given « ».</p>"
            },
            {
              "html": "<p>Return.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>index</var> be 0.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①②\">list</a> containing <var>total</var> null values.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑧\">For each</a> <var>promise</var> of <var>promises</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>promiseIndex</var> be <var>index</var>.</p>"
            },
            {
              "html": "Let <var>fulfillmentHandler</var> be the following steps given <var>arg</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>result</var>[<var>promiseIndex</var>] to <var>arg</var>.</p>"
                },
                {
                  "html": "<p>Set <var>fullfilledCount</var> to <var>fullfilledCount</var> + 1.</p>"
                },
                {
                  "html": "<p>If <var>fullfilledCount</var> equals <var>total</var>, then perform <var>successSteps</var> given <var>result</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>fulfillmentHandler</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction③\">CreateBuiltinFunction</a>(<var>fulfillmentHandler</var>, « »):</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen①\">PerformPromiseThen</a>(<var>promise</var>, <var>fulfillmentHandler</var>, <var>rejectionHandler</var>).</p>"
            },
            {
              "html": "<p>Set <var>index</var> to <var>index</var> + 1.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "get a promise to wait for all",
      "href": "https://webidl.spec.whatwg.org/#waiting-for-all-promise",
      "html": "To\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"get a promise to wait for all|getting a promise to wait for all\" id=\"waiting-for-all-promise\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get a promise for waiting for all</dfn>\n    with a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①③\">list</a> of <code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑤\">Promise</a>&lt;<var>T</var>&gt;</code> values <var>promises</var> and a\n    <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①①\">realm</a> <var>realm</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>promise</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-new-promise\" id=\"ref-for-a-new-promise①\">a new promise</a> of type\n<code><a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑥\">Promise</a>&lt;<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①⑧\">sequence</a>&lt;<var>T</var>&gt;&gt;</code> in\n<var>realm</var>.</p>"
        },
        {
          "html": "Let <var>successSteps</var> be the following steps, given <var>results</var>:",
          "rationale": "resolve",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#resolve\" id=\"ref-for-resolve③\">Resolve</a> <var>promise</var> with <var>results</var>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>failureSteps</var> be the following steps, given <var>reason</var>:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject④\">Reject</a> <var>promise</var> with <var>reason</var>.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#wait-for-all\" id=\"ref-for-wait-for-all\">Wait for all</a> with <var>promises</var>, given <var>successSteps</var> and <var>failureSteps</var>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to union",
      "href": "https://webidl.spec.whatwg.org/#js-to-union",
      "html": "To <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⓪\">convert a JavaScript value</a> <var>V</var> to an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type③⑧\">union type</a>\n    value is done as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type③⑨\">union type</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-undefined\" id=\"ref-for-dfn-includes-undefined④\">includes undefined</a>\nand <var>V</var> is <emu-val>undefined</emu-val>,\nthen return the unique <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined①⑦\">undefined</a></code> value.</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④⓪\">union type</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-a-nullable-type\" id=\"ref-for-dfn-includes-a-nullable-type③\">includes a nullable type</a> and\n<var>V</var> is <emu-val>null</emu-val> or <emu-val>undefined</emu-val>,\nthen return the IDL value <emu-val>null</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>types</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①①\">flattened member types</a>\nof the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④①\">union type</a>.</p>"
        },
        {
          "html": "If <var>V</var> is <emu-val>null</emu-val> or <emu-val>undefined</emu-val>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①⑥\">dictionary type</a>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④①\">converting</a> <var>V</var> to that dictionary type.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object\">is a platform object</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⓪\">interface type</a> that <var>V</var>\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④\">implements</a>, then return the IDL value that is a reference to the object <var>V</var>.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①②\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⓪\">is an Object</a>, <var>V</var> has an [[ArrayBufferData]]\n<a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots\">internal slot</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer\">IsSharedArrayBuffer</a>(<var>V</var>) is false, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①\">ArrayBuffer</a></code>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④②\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer②\">ArrayBuffer</a></code>.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①③\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①①\">is an Object</a>, <var>V</var>, has an [[ArrayBufferData]]\n<a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①\">internal slot</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer①\">IsSharedArrayBuffer</a>(<var>V</var>) is true, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer①\">SharedArrayBuffer</a></code>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④③\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer②\">SharedArrayBuffer</a></code>.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①④\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①②\">is an Object</a> and <var>V</var> has a [[DataView]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots②\">internal slot</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView①\">DataView</a></code>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④④\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView②\">DataView</a></code>.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①⑤\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①③\">is an Object</a> and <var>V</var> has a [[TypedArrayName]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots③\">internal slot</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-typed-array-type\" id=\"ref-for-dfn-typed-array-type①\">typed array type</a>\nwhose name is the value of <var>V</var>’s [[TypedArrayName]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots④\">internal slot</a>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⑤\">converting</a>\n<var>V</var> to that type.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①⑥\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable③\">IsCallable</a>(<var>V</var>) is true, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-function\" id=\"ref-for-dfn-callback-function②⑤\">callback function</a>\ntype, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⑥\">converting</a>\n<var>V</var> to that callback function type.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①⑦\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①④\">is an Object</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>types</var> includes an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#async-sequence-type\" id=\"ref-for-async-sequence-type④\">async sequence type</a>, then",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <var>types</var> does not include a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-string-type\" id=\"ref-for-dfn-string-type④\">string type</a> or <var>V</var> does not have a [[StringData]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots⑤\">internal slot</a>, then",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>asyncMethod</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod④\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①③\">%Symbol.asyncIterator%</a></code>).</p>"
                    },
                    {
                      "html": "<p>If <var>asyncMethod</var> is not <emu-val>undefined</emu-val>,\nreturn an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type⑤\">async sequence</a> value with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object④\">object</a>\nset to <var>V</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-method\" id=\"ref-for-js-async-sequence-method③\">method</a> set to <var>syncMethod</var>, and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-type\" id=\"ref-for-js-async-sequence-type③\">type</a> set to \"<code>async</code>\".</p>"
                    },
                    {
                      "html": "<p>Let <var>syncMethod</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod⑤\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①④\">%Symbol.iterator%</a></code>).</p>"
                    },
                    {
                      "html": "<p>If <var>syncMethod</var> is not <emu-val>undefined</emu-val>,\nreturn an IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-async-iterable-type\" id=\"ref-for-idl-async-iterable-type⑥\">async sequence</a> value with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-object\" id=\"ref-for-js-async-sequence-object⑤\">object</a>\nset to <var>V</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-method\" id=\"ref-for-js-async-sequence-method④\">method</a> set to <var>syncMethod</var>, and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#js-async-sequence-type\" id=\"ref-for-js-async-sequence-type④\">type</a> set to \"<code>sync</code>\".</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type①⑨\">sequence type</a>, then",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod⑥\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①⑤\">%Symbol.iterator%</a></code>).</p>"
                },
                {
                  "html": "<p>If <var>method</var> is not <emu-val>undefined</emu-val>,\nreturn the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-sequence-from-iterable\" id=\"ref-for-create-sequence-from-iterable①\">creating a sequence</a>\nof that type from <var>V</var> and <var>method</var>.</p>"
                }
              ]
            },
            {
              "html": "If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-frozen-array-type\" id=\"ref-for-dfn-frozen-array-type⑤\">frozen array type</a>, then",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod⑦\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①⑥\">%Symbol.iterator%</a></code>).</p>"
                },
                {
                  "html": "<p>If <var>method</var> is not <emu-val>undefined</emu-val>,\nreturn the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-frozen-array-from-iterable\" id=\"ref-for-create-frozen-array-from-iterable\">creating a frozen array</a>\nof that type from <var>V</var> and <var>method</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①⑦\">dictionary type</a>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⑦\">converting</a>\n<var>V</var> to that dictionary type.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#record-type\" id=\"ref-for-record-type③\">record type</a>, then return the\nresult of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⑧\">converting</a>\n<var>V</var> to that record type.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface②⑤\">callback interface</a>\ntype, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value④⑨\">converting</a>\n<var>V</var> to that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface⑨\">callback interface type</a>.</p>"
            },
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object①⑧\">object</a></code>, then return the IDL value\nthat is a reference to the object <var>V</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-boolean-type\" id=\"ref-for-sec-ecmascript-language-types-boolean-type①\">is a Boolean</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①②\">boolean</a></code>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⓪\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①③\">boolean</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type⑦\">is a Number</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⓪\">numeric type</a>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤①\">converting</a>\n<var>V</var> to that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①①\">numeric type</a>.</p>"
            }
          ]
        },
        {
          "html": "If <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-bigint-type\" id=\"ref-for-sec-ecmascript-language-types-bigint-type②\">is a BigInt</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①③\">bigint</a></code>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤②\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①④\">bigint</a></code></p>"
            }
          ]
        },
        {
          "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-string-type\" id=\"ref-for-dfn-string-type⑤\">string type</a>,\nthen return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤③\">converting</a>\n<var>V</var> to that type.</p>"
        },
        {
          "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①②\">numeric type</a> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⑤\">bigint</a></code>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#converted-to-a-numeric-type-or-bigint\" id=\"ref-for-converted-to-a-numeric-type-or-bigint\">converting</a>\n<var>V</var> to either that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①③\">numeric type</a> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⑥\">bigint</a></code>.</p>"
        },
        {
          "html": "<p>If <var>types</var> includes a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①④\">numeric type</a>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤④\">converting</a>\n<var>V</var> to that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⑤\">numeric type</a>.</p>"
        },
        {
          "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①④\">boolean</a></code>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⑤\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①⑤\">boolean</a></code>.</p>"
        },
        {
          "html": "<p>If <var>types</var> includes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⑦\">bigint</a></code>,\nthen return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⑥\">converting</a>\n<var>V</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⑧\">bigint</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⓪\">Throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⓪\">TypeError</a></code>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to IDL ArrayBuffer",
      "href": "https://webidl.spec.whatwg.org/#js-to-buffer-source",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⑦\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer④\">ArrayBuffer</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⑤\">is not an Object</a>,\nor <var>V</var> does not have an [[ArrayBufferData]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots⑥\">internal slot</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer②\">IsSharedArrayBuffer</a>(<var>V</var>) is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②②\">throw</a>\na <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①③\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowResizable\" id=\"ref-for-AllowResizable⑦\">AllowResizable</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④③\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/proposal-resizablearraybuffer/#sec-isresizablearraybuffer\" id=\"ref-for-sec-isresizablearraybuffer④\">IsResizableArrayBuffer</a>(<var>V</var>) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑤\">ArrayBuffer</a></code> value that is a reference\nto the same object as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to IDL SharedArrayBuffer",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⑧\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer④\">SharedArrayBuffer</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⑥\">is not an Object</a>,\nor <var>V</var> does not have an [[ArrayBufferData]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots⑦\">internal slot</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer③\">IsSharedArrayBuffer</a>(<var>V</var>) is false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⑤\">throw</a>\na <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①④\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowResizable\" id=\"ref-for-AllowResizable⑧\">AllowResizable</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④④\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/proposal-resizablearraybuffer/#sec-isresizablearraybuffer\" id=\"ref-for-sec-isresizablearraybuffer⑤\">IsResizableArrayBuffer</a>(<var>V</var>) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer⑤\">SharedArrayBuffer</a></code> value that is a reference\nto the same object as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to IDL DataView",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑤⑨\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView③\">DataView</a></code> value by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⑦\">is not an Object</a>,\nor <var>V</var> does not have a [[DataView]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots⑧\">internal slot</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⑦\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①⑤\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowShared\" id=\"ref-for-AllowShared⑤\">AllowShared</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④⑤\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer④\">IsSharedArrayBuffer</a>(<var>V</var>.[[ViewedArrayBuffer]]) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⑧\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①⑥\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowResizable\" id=\"ref-for-AllowResizable⑨\">AllowResizable</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④⑥\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/proposal-resizablearraybuffer/#sec-isresizablearraybuffer\" id=\"ref-for-sec-isresizablearraybuffer⑥\">IsResizableArrayBuffer</a>(<var>V</var>.[[ViewedArrayBuffer]]) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw②⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror②⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView④\">DataView</a></code> value that is a reference\nto the same object as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to IDL typed array",
      "html": "A JavaScript value <var>V</var> is\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⓪\">converted</a>\n    to an IDL <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Int8Array\" id=\"ref-for-idl-Int8Array②\">Int8Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Int16Array\" id=\"ref-for-idl-Int16Array①\">Int16Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Int32Array\" id=\"ref-for-idl-Int32Array①\">Int32Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Uint8Array\" id=\"ref-for-idl-Uint8Array②\">Uint8Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Uint16Array\" id=\"ref-for-idl-Uint16Array①\">Uint16Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Uint32Array\" id=\"ref-for-idl-Uint32Array①\">Uint32Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Uint8ClampedArray\" id=\"ref-for-idl-Uint8ClampedArray①\">Uint8ClampedArray</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-BigInt64Array\" id=\"ref-for-idl-BigInt64Array①\">BigInt64Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-BigUint64Array\" id=\"ref-for-idl-BigUint64Array①\">BigUint64Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float16Array\" id=\"ref-for-idl-Float16Array①\">Float16Array</a></code>,\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array①\">Float32Array</a></code>, or\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float64Array\" id=\"ref-for-idl-Float64Array①\">Float64Array</a></code> value\n    by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>T</var> be the IDL type <var>V</var> is being converted to.</p>"
        },
        {
          "html": "<p>If <var>V</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⑧\">is not an Object</a>,\nor <var>V</var> does not have a [[TypedArrayName]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots⑨\">internal slot</a>\nwith a value equal to <var>T</var>’s name,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⓪\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①⑦\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowShared\" id=\"ref-for-AllowShared⑥\">AllowShared</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④⑦\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer⑤\">IsSharedArrayBuffer</a>(<var>V</var>.[[ViewedArrayBuffer]]) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③①\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>If the conversion is not to an IDL type\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-type-extended-attribute-associated-with\" id=\"ref-for-idl-type-extended-attribute-associated-with①⑧\">associated with</a> the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#AllowResizable\" id=\"ref-for-AllowResizable①⓪\">AllowResizable</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute④⑧\">extended attribute</a>, and <a data-link-type=\"abstract-op\" href=\"https://tc39.es/proposal-resizablearraybuffer/#sec-isresizablearraybuffer\" id=\"ref-for-sec-isresizablearraybuffer⑦\">IsResizableArrayBuffer</a>(<var>V</var>.[[ViewedArrayBuffer]]) is true,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③②\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return the IDL value of type <var>T</var> that is a reference to the same object as <var>V</var>.</p>"
        }
      ]
    },
    {
      "name": "ArrayBuffer/create",
      "href": "https://webidl.spec.whatwg.org/#arraybuffer-create",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBuffer\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybuffer-create\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create</dfn> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑥\">ArrayBuffer</a></code> from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence①\">byte sequence</a>\n    <var>bytes</var> in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①③\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands④⑨\">?</a>\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-allocatearraybuffer\" id=\"ref-for-sec-allocatearraybuffer\">AllocateArrayBuffer</a>(<var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-arraybuffer-constructor\" id=\"ref-for-sec-arraybuffer-constructor\">%ArrayBuffer%</a></code>]], <var>bytes</var>’s\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length\">length</a>).</p>"
        },
        {
          "html": "<p>Let <var>arrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥①\">converting</a> <var>jsArrayBuffer</var>\nto an IDL value of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑦\">ArrayBuffer</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-write\" id=\"ref-for-arraybuffer-write\">Write</a> <var>bytes</var> into <var>arrayBuffer</var>.</p>"
        },
        {
          "html": "<p>Return <var>arrayBuffer</var>.</p>"
        }
      ]
    },
    {
      "name": "SharedArrayBuffer/create",
      "href": "https://webidl.spec.whatwg.org/#sharedarraybuffer-create",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"SharedArrayBuffer\" data-dfn-type=\"dfn\" data-export=\"\" id=\"sharedarraybuffer-create\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create</dfn> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer⑥\">SharedArrayBuffer</a></code> from a\n    <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence②\">byte sequence</a> <var>bytes</var> in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①④\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsSharedArrayBuffer</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⓪\">?</a>\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-allocatesharedarraybuffer\" id=\"ref-for-sec-allocatesharedarraybuffer\">AllocateSharedArrayBuffer</a>(<var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-sharedarraybuffer-constructor\" id=\"ref-for-sec-sharedarraybuffer-constructor\">%SharedArrayBuffer%</a></code>]], <var>bytes</var>’s\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length①\">length</a>).</p>"
        },
        {
          "html": "<p>Let <var>sharedArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥②\">converting</a>\n<var>jsSharedArrayBuffer</var> to an IDL value of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer⑦\">SharedArrayBuffer</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-write\" id=\"ref-for-arraybuffer-write①\">Write</a> <var>bytes</var> into <var>sharedArrayBuffer</var>.</p>"
        },
        {
          "html": "<p>Return <var>sharedArrayBuffer</var>.</p>"
        }
      ]
    },
    {
      "name": "ArrayBufferView/create",
      "href": "https://webidl.spec.whatwg.org/#arraybufferview-create",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBufferView\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybufferview-create\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create</dfn> one of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#ArrayBufferView\" id=\"ref-for-ArrayBufferView\">ArrayBufferView</a></code> types from a\n    <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence③\">byte sequence</a> <var>bytes</var> in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①⑤\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: if the type is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView⑤\">DataView</a></code>, then <var>bytes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length②\">length</a> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#eqn-modulo\" id=\"ref-for-eqn-modulo①\">modulo</a>\nthe <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors\">element size</a> of that type is 0.</p>"
        },
        {
          "html": "<p>Let <var>arrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-create\" id=\"ref-for-arraybuffer-create\">creating</a> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑧\">ArrayBuffer</a></code> from <var>bytes</var>\nin <var>realm</var>.</p>"
        },
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④③\">converting</a>\n<var>arrayBuffer</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>Let <var>constructor</var> be the appropriate constructor from <var>realm</var>.[[Intrinsics]] for the type\nof <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#ArrayBufferView\" id=\"ref-for-ArrayBufferView①\">ArrayBufferView</a></code> being created.</p>"
        },
        {
          "html": "<p>Let <var>jsView</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-construct\" id=\"ref-for-sec-construct\">Construct</a>(<var>constructor</var>, « <var>jsArrayBuffer</var> »).</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥③\">converting</a> <var>jsView</var> into the given type.</p>"
        }
      ]
    },
    {
      "name": "get a copy of the buffer source",
      "href": "https://webidl.spec.whatwg.org/#dfn-get-buffer-source-copy",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"get a copy of the buffer source|get a copy of the bytes held by the buffer source\" id=\"dfn-get-buffer-source-copy\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get a copy of the bytes held by the buffer source</dfn>\n    given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type③\">buffer source type</a> instance <var>bufferSource</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsBufferSource</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④④\">converting</a>\n<var>bufferSource</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be <var>jsBufferSource</var>.</p>"
        },
        {
          "html": "<p>Let <var>offset</var> be 0.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be 0.</p>"
        },
        {
          "html": "If <var>jsBufferSource</var> has a [[ViewedArrayBuffer]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①⓪\">internal slot</a>, then:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>jsArrayBuffer</var> to <var>jsBufferSource</var>.[[ViewedArrayBuffer]].</p>"
            },
            {
              "html": "<p>Set <var>offset</var> to <var>jsBufferSource</var>.[[ByteOffset]].</p>"
            },
            {
              "html": "<p>Set <var>length</var> to <var>jsBufferSource</var>.[[ByteLength]].</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p class=\"assertion\">Assert: <var>jsBufferSource</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑨\">ArrayBuffer</a></code> or\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer⑧\">SharedArrayBuffer</a></code> object.</p>"
            },
            {
              "html": "<p>Set <var>length</var> to <var>jsBufferSource</var>.[[ArrayBufferByteLength]].</p>"
            }
          ]
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-isdetachedbuffer\" id=\"ref-for-sec-isdetachedbuffer\">IsDetachedBuffer</a>(<var>jsArrayBuffer</var>) is true, then return the empty\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence④\">byte sequence</a>.</p>"
        },
        {
          "html": "<p>Let <var>bytes</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence⑤\">byte sequence</a> of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length③\">length</a> equal to <var>length</var>.</p>"
        },
        {
          "html": "<p>For <var>i</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range④\">the range</a> <var>offset</var> to <var>offset</var> + <var>length</var> − 1, inclusive, set\n<var>bytes</var>[<var>i</var> − <var>offset</var>] to <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-getvaluefrombuffer\" id=\"ref-for-sec-getvaluefrombuffer\">GetValueFromBuffer</a>(<var>jsArrayBuffer</var>, <var>i</var>, Uint8,\ntrue, Unordered).</p>"
        },
        {
          "html": "<p>Return <var>bytes</var>.</p>"
        }
      ]
    },
    {
      "name": "BufferSource/byte length",
      "href": "https://webidl.spec.whatwg.org/#buffersource-byte-length",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"BufferSource\" data-dfn-type=\"dfn\" data-export=\"\" id=\"buffersource-byte-length\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">byte length</dfn> of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type④\">buffer source type</a> instance\n    <var>bufferSource</var> is the value returned by the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsBufferSource</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⑤\">converting</a>\n<var>bufferSource</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>If <var>jsBufferSource</var> has a [[ViewedArrayBuffer]] internal slot, then return\n<var>jsBufferSource</var>.[[ByteLength]].</p>"
        },
        {
          "html": "<p>Return <var>jsBufferSource</var>.[[ArrayBufferByteLength]].</p>"
        }
      ]
    },
    {
      "name": "BufferSource/underlying buffer",
      "href": "https://webidl.spec.whatwg.org/#buffersource-underlying-buffer",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"BufferSource\" data-dfn-type=\"dfn\" data-export=\"\" id=\"buffersource-underlying-buffer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">underlying buffer</dfn> of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type⑤\">buffer source type</a> instance\n    <var>bufferSource</var> is the value returned by the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>bufferSource</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffer-types\" id=\"ref-for-buffer-types⑥\">buffer type</a> instance, then return <var>bufferSource</var>.</p>"
        },
        {
          "html": "<p>Let <var>jsBufferView</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⑥\">converting</a>\n<var>bufferSource</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>Let <var>jsBuffer</var> be <var>jsBufferView</var>.[[ViewedArrayBuffer]].</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer⑥\">IsSharedArrayBuffer</a>(<var>jsBuffer</var>) is false, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥④\">converting</a> <var>jsBuffer</var> to an IDL value of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①⓪\">ArrayBuffer</a></code>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⑤\">converting</a> <var>jsBuffer</var> to an IDL value of\ntype <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer⑨\">SharedArrayBuffer</a></code>.</p>"
        }
      ]
    },
    {
      "name": "ArrayBuffer/write",
      "href": "https://webidl.spec.whatwg.org/#arraybuffer-write",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBuffer,SharedArrayBuffer\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybuffer-write\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">write</dfn> a\n    <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence⑥\">byte sequence</a> <var>bytes</var> into a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffer-types\" id=\"ref-for-buffer-types⑦\">buffer type</a> instance <var>arrayBuffer</var>, optionally given a\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBuffer/write,SharedArrayBuffer/write\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybuffer-write-startingoffset\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>startingOffset</var></dfn>\n    (default 0):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⑦\">converting</a>\n<var>arrayBuffer</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>bytes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length④\">length</a> ≤ <var>jsArrayBuffer</var>.[[ArrayBufferByteLength]]\n− <var>startingOffset</var>.</p>"
        },
        {
          "html": "<p>For <var>i</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#the-range\" id=\"ref-for-the-range⑤\">the range</a> <var>startingOffset</var> to <var>startingOffset</var> + <var>bytes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length⑤\">length</a> − 1, inclusive, perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-setvalueinbuffer\" id=\"ref-for-sec-setvalueinbuffer\">SetValueInBuffer</a>(<var>jsArrayBuffer</var>,\n<var>i</var>, Uint8, <var>bytes</var>[<var>i</var> - <var>startingOffset</var>], true, Unordered).</p>"
        }
      ]
    },
    {
      "name": "ArrayBufferView/write",
      "href": "https://webidl.spec.whatwg.org/#arraybufferview-write",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBufferView\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybufferview-write\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">write</dfn> a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence\" id=\"ref-for-byte-sequence⑦\">byte sequence</a> <var>bytes</var> into an\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#ArrayBufferView\" id=\"ref-for-ArrayBufferView②\">ArrayBufferView</a></code> <var>view</var>, optionally given a\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBufferView/write\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybufferview-write-startingoffset\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>startingOffset</var></dfn> (default 0):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsView</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⑧\">converting</a> <var>view</var> to\na JavaScript value.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>bytes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length⑥\">length</a> ≤ <var>jsView</var>.[[ByteLength]] −\n<var>startingOffset</var>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: if <var>view</var> is not a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView⑥\">DataView</a></code>, then <var>bytes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#byte-sequence-length\" id=\"ref-for-byte-sequence-length⑦\">length</a> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#eqn-modulo\" id=\"ref-for-eqn-modulo②\">modulo</a>\nthe <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#table-the-typedarray-constructors\" id=\"ref-for-table-the-typedarray-constructors①\">element size</a> of <var>view</var>’s type is 0.</p>"
        },
        {
          "html": "<p>Let <var>arrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⑥\">converting</a>\n<var>jsView</var>.[[ViewedArrayBuffer]] to an IDL value of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①①\">ArrayBuffer</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-write\" id=\"ref-for-arraybuffer-write②\">Write</a> <var>bytes</var> into <var>arrayBuffer</var> with\n<i><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#arraybuffer-write-startingoffset\" id=\"ref-for-arraybuffer-write-startingoffset\">startingOffset</a></i> set to <var>jsView</var>.[[ByteOffset]] +\n<var>startingOffset</var>.</p>"
        }
      ]
    },
    {
      "name": "ArrayBuffer/detach",
      "href": "https://webidl.spec.whatwg.org/#dfn-detach",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBuffer\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-detach\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">detach</dfn> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①⑤\">ArrayBuffer</a></code> <var>arrayBuffer</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value④⑨\">converting</a>\n<var>arrayBuffer</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-detacharraybuffer\" id=\"ref-for-sec-detacharraybuffer\">DetachArrayBuffer</a>(<var>jsArrayBuffer</var>).</p>"
        }
      ]
    },
    {
      "name": "BufferSource/detached",
      "href": "https://webidl.spec.whatwg.org/#buffersource-detached",
      "html": "A <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type⑦\">buffer source type</a> instance <var>bufferSource</var> is\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"BufferSource\" data-dfn-type=\"dfn\" data-export=\"\" id=\"buffersource-detached\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">detached</dfn> if the following steps return true:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⓪\">converting</a>\n<var>bufferSource</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>If <var>jsArrayBuffer</var> has a [[ViewedArrayBuffer]] internal slot, then set <var>jsArrayBuffer</var> to\n<var>jsArrayBuffer</var>.[[ViewedArrayBuffer]].</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-isdetachedbuffer\" id=\"ref-for-sec-isdetachedbuffer①\">IsDetachedBuffer</a>(<var>jsArrayBuffer</var>).</p>"
        }
      ]
    },
    {
      "name": "BufferSource/transferable",
      "href": "https://webidl.spec.whatwg.org/#buffersource-transferable",
      "html": "A <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-buffer-source-type\" id=\"ref-for-dfn-buffer-source-type⑧\">buffer source type</a> instance <var>bufferSource</var> is\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"BufferSource\" data-dfn-type=\"dfn\" data-export=\"\" id=\"buffersource-transferable\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">transferable</dfn> if the following steps return true:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤①\">converting</a>\n<var>bufferSource</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>If <var>jsArrayBuffer</var> has a [[ViewedArrayBuffer]] internal slot, then set <var>jsArrayBuffer</var> to\n<var>jsArrayBuffer</var>.[[ViewedArrayBuffer]].</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-issharedarraybuffer\" id=\"ref-for-sec-issharedarraybuffer⑦\">IsSharedArrayBuffer</a>(<var>jsArrayBuffer</var>) is true, then return false.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-isdetachedbuffer\" id=\"ref-for-sec-isdetachedbuffer②\">IsDetachedBuffer</a>(<var>jsArrayBuffer</var>) is true, then return false.</p>"
        },
        {
          "html": "<p>If <var>jsArrayBuffer</var>.[[ArrayBufferDetachKey]] is not <emu-val>undefined</emu-val>, then\nreturn false.</p>"
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "ArrayBuffer/transfer",
      "href": "https://webidl.spec.whatwg.org/#arraybuffer-transfer",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"ArrayBuffer\" data-dfn-type=\"dfn\" data-export=\"\" id=\"arraybuffer-transfer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">transfer</dfn> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①⑥\">ArrayBuffer</a></code> <var>arrayBuffer</var>, optionally\n    given a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①⑥\">realm</a> <var>targetRealm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArrayBuffer</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤②\">converting</a>\n<var>arrayBuffer</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-isdetachedbuffer\" id=\"ref-for-sec-isdetachedbuffer③\">IsDetachedBuffer</a>(<var>jsArrayBuffer</var>) is false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③③\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③③\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>arrayBufferData</var> be <var>jsArrayBuffer</var>.[[ArrayBufferData]].</p>"
        },
        {
          "html": "<p>Let <var>arrayBufferByteLength</var> be <var>jsArrayBuffer</var>.[[ArrayBufferByteLength]].</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-detacharraybuffer\" id=\"ref-for-sec-detacharraybuffer①\">DetachArrayBuffer</a>(<var>jsArrayBuffer</var>).</p>"
        },
        {
          "html": "<p>If <var>targetRealm</var> is not given, let <var>targetRealm</var> be the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#current-realm\" id=\"ref-for-current-realm①\">current realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>jsTransferred</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤④\">?</a>\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-allocatearraybuffer\" id=\"ref-for-sec-allocatearraybuffer①\">AllocateArrayBuffer</a>(<var>targetRealm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/structured-data.html#sec-arraybuffer-constructor\" id=\"ref-for-sec-arraybuffer-constructor①\">%ArrayBuffer%</a></code>]], 0).</p>"
        },
        {
          "html": "<p>Set <var>jsTransferred</var>.[[ArrayBufferData]] to <var>arrayBufferData</var>.</p>"
        },
        {
          "html": "<p>Set <var>jsTransferred</var>.[[ArrayBufferByteLength]] to <var>arrayBufferByteLength</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⑦\">converting</a> <var>jsTransferred</var> to an IDL\nvalue of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer①⑦\">ArrayBuffer</a></code>.</p>"
        }
      ]
    },
    {
      "name": "convert a JavaScript value to frozen array",
      "html": "A JavaScript value <var>V</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⑧\">converted</a>\n    to an IDL <a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-frozen-array\" id=\"ref-for-idl-frozen-array③\">FrozenArray&lt;<var>T</var>&gt;</a> value\n    by running the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>values</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑥⑨\">converting</a>\n<var>V</var> to IDL type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type②⓪\">sequence&lt;<var>T</var>&gt;</a>.</p>"
        },
        {
          "html": "<p>Return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-frozen-array\" id=\"ref-for-dfn-create-frozen-array③\">creating a frozen array</a>\nfrom <var>values</var>.</p>"
        }
      ]
    },
    {
      "name": "create a frozen array",
      "href": "https://webidl.spec.whatwg.org/#dfn-create-frozen-array",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"create a frozen array|creating a frozen array\" id=\"dfn-create-frozen-array\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a frozen array</dfn>\n    from a sequence of values of type <var>T</var>, follow these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>array</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤③\">converting</a>\nthe sequence of values of type <var>T</var> to a JavaScript value.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-setintegritylevel\" id=\"ref-for-sec-setintegritylevel\">SetIntegrityLevel</a>(<var>array</var>, \"<code>frozen</code>\").</p>"
        },
        {
          "html": "<p>Return <var>array</var>.</p>"
        }
      ]
    },
    {
      "name": "create frozen array from iterable",
      "html": "To create an IDL value of type <a class=\"idl-code\" data-link-type=\"interface\" href=\"https://webidl.spec.whatwg.org/#idl-frozen-array\" id=\"ref-for-idl-frozen-array⑥\">FrozenArray&lt;<var>T</var>&gt;</a> given an\n    iterable <var>iterable</var> and an iterator getter <var>method</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>values</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-sequence-from-iterable\" id=\"ref-for-create-sequence-from-iterable②\">creating a sequence</a>\nof type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type②①\">sequence&lt;<var>T</var>&gt;</a> from <var>iterable</var> and <var>method</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-frozen-array\" id=\"ref-for-dfn-create-frozen-array④\">creating a frozen array</a> from <var>values</var>.</p>"
        }
      ]
    },
    {
      "name": "observable array backing list",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-attribute-backing-list\" id=\"ref-for-observable-array-attribute-backing-list\">backing list</a> for an observable array attribute in the\n    JavaScript binding, given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object①④\">platform object</a> <var>obj</var> and an attribute <var>attribute</var>, is the\n    <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①④\">list</a> returned by the following algorithm:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>obj</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑤\">implements</a> an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①①②\">interface</a> with the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute①②\">regular attribute</a> <var>attribute</var>.</p>"
        },
        {
          "html": "<p>Let <var>oa</var> be <var>obj</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#backing-observable-array-exotic-object\" id=\"ref-for-backing-observable-array-exotic-object\">backing observable array exotic object</a> for <var>attribute</var>.</p>"
        },
        {
          "html": "<p>Return <var>oa</var>.[[ProxyHandler]].[[BackingList]].</p>"
        }
      ]
    },
    {
      "name": "own exposure set",
      "href": "https://webidl.spec.whatwg.org/#own-exposure-set",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"own-exposure-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">own exposure set</dfn> is either a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set④\">set</a> of identifiers or the special value\n<code>*</code>, defined as follows:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the [Exposed] extended attribute takes an identifier I",
              "html": "<p>The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set\">own exposure set</a> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set⑤\">set</a> « <var>I</var> ».</p>"
            },
            {
              "case": "If the [Exposed] extended attribute takes an identifier list I",
              "html": "<p>The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set①\">own exposure set</a> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set⑥\">set</a> <var>I</var>.</p>"
            },
            {
              "case": "If the [Exposed] extended attribute takes a wildcard",
              "html": "<p>The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set②\">own exposure set</a> is <code>*</code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "exposure set intersection",
      "href": "https://webidl.spec.whatwg.org/#exposure-set-intersection",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"exposure-set-intersection\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">exposure set intersection</dfn> of a construct <var>C</var> and interface-or-null <var>H</var> is defined as\nfollows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member①①\">interface member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member①②\">interface mixin member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace-member\" id=\"ref-for-dfn-namespace-member⑧\">namespace member</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-interface\" id=\"ref-for-dfn-partial-interface①②\">partial interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#partial-interface-mixin\" id=\"ref-for-partial-interface-mixin⑨\">partial interface mixin</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-namespace\" id=\"ref-for-dfn-partial-namespace⑤\">partial namespace</a>, or\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin③⑤\">interface mixin</a>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>H</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①①⑧\">interface</a> or null.</p>"
        },
        {
          "html": "<p>If <var>H</var> is null, return <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set③\">own exposure set</a>.</p>"
        },
        {
          "html": "<p>If <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set④\">own exposure set</a> is <code>*</code>, return <var>H</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposure-set\" id=\"ref-for-dfn-exposure-set\">exposure set</a>.</p>"
        },
        {
          "html": "<p>If <var>H</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposure-set\" id=\"ref-for-dfn-exposure-set①\">exposure set</a> is <code>*</code>, return <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set⑤\">own exposure set</a>.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-intersection\" id=\"ref-for-set-intersection\">intersection</a> of <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set⑥\">own exposure set</a> and <var>H</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposure-set\" id=\"ref-for-dfn-exposure-set②\">exposure set</a>.</p>"
        }
      ]
    },
    {
      "name": "exposure set",
      "href": "https://webidl.spec.whatwg.org/#dfn-exposure-set",
      "html": "To get the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-exposure-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">exposure set</dfn> of a construct <var>C</var>,\n    run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①①⑨\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface②⑧\">callback interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace①④\">namespace</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member①②\">interface member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member①③\">interface mixin member</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace-member\" id=\"ref-for-dfn-namespace-member⑨\">namespace member</a>.</p>"
        },
        {
          "html": "<p>Let <var>H</var> be <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#host-interfaces\" id=\"ref-for-host-interfaces①\">host interface</a> if <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member①④\">interface mixin member</a>, or null otherwise.</p>"
        },
        {
          "html": "If <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member①③\">interface member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member①⑤\">interface mixin member</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace-member\" id=\"ref-for-dfn-namespace-member①⓪\">namespace member</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Exposed\" id=\"ref-for-Exposed①⑧\">Exposed</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦②\">extended attribute</a> is specified on <var>C</var>,\nreturn the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#exposure-set-intersection\" id=\"ref-for-exposure-set-intersection\">exposure set intersection</a> of <var>C</var> and <var>H</var>.</p>"
            },
            {
              "html": "<p>Set <var>C</var> to the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②⓪\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-interface\" id=\"ref-for-dfn-partial-interface①③\">partial interface</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin③⑥\">interface mixin</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#partial-interface-mixin\" id=\"ref-for-partial-interface-mixin①⓪\">partial interface mixin</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace①⑤\">namespace</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-namespace\" id=\"ref-for-dfn-partial-namespace⑥\">partial namespace</a>\n<var>C</var> is declared on.</p>"
            }
          ]
        },
        {
          "html": "If <var>C</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-interface\" id=\"ref-for-dfn-partial-interface①④\">partial interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#partial-interface-mixin\" id=\"ref-for-partial-interface-mixin①①\">partial interface mixin</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-namespace\" id=\"ref-for-dfn-partial-namespace⑦\">partial namespace</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Exposed\" id=\"ref-for-Exposed①⑨\">Exposed</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦③\">extended attribute</a> is specified on <var>C</var>,\nreturn the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#exposure-set-intersection\" id=\"ref-for-exposure-set-intersection①\">exposure set intersection</a> of <var>C</var> and <var>H</var>.</p>"
            },
            {
              "html": "<p>Set <var>C</var> to the original <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②①\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin③⑦\">interface mixin</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace①⑥\">namespace</a> definition\nof <var>C</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin③⑧\">interface mixin</a>, then:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p class=\"assertion\">Assert: <var>H</var> is not null.</p>"
            },
            {
              "html": "<p>If the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Exposed\" id=\"ref-for-Exposed②⓪\">Exposed</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦④\">extended attribute</a> is specified on <var>C</var>,\nreturn the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#exposure-set-intersection\" id=\"ref-for-exposure-set-intersection②\">exposure set intersection</a> of <var>C</var> and <var>H</var>.</p>"
            },
            {
              "html": "<p>Set <var>C</var> to <var>H</var>.</p>"
            }
          ]
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>C</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②②\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface②⑨\">callback interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace①⑦\">namespace</a>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: The [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Exposed\" id=\"ref-for-Exposed②①\">Exposed</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦⑤\">extended attribute</a> is specified on <var>C</var>.</p>"
        },
        {
          "html": "<p>Return <var>C</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#own-exposure-set\" id=\"ref-for-own-exposure-set⑦\">own exposure set</a>.</p>"
        }
      ]
    },
    {
      "name": "exposed",
      "href": "https://webidl.spec.whatwg.org/#dfn-exposed",
      "html": "An <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②⑦\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③⓪\">callback interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②⓪\">namespace</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member①⑤\">member</a> <var>construct</var> is\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-exposed\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">exposed</dfn> in a given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm①⑦\">realm</a> <var>realm</var> if the following steps\n    return true:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>construct</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposure-set\" id=\"ref-for-dfn-exposure-set①②\">exposure set</a> is not <code>*</code>, and <var>realm</var>.[[GlobalObject]] does\nnot implement an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②⑧\">interface</a> that is in <var>construct</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposure-set\" id=\"ref-for-dfn-exposure-set①③\">exposure set</a>, then return false.</p>"
        },
        {
          "html": "<p>If <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-settings-object\" id=\"ref-for-concept-realm-settings-object\">settings object</a> is not a <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#secure-context\" id=\"ref-for-secure-context\">secure context</a>, and <var>construct</var> is\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-conditionally-exposed\" id=\"ref-for-dfn-conditionally-exposed\">conditionally exposed</a> on [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#SecureContext\" id=\"ref-for-SecureContext⑨\">SecureContext</a></code>], then return false.</p>"
        },
        {
          "html": "<p>If <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-settings-object\" id=\"ref-for-concept-realm-settings-object①\">settings object</a>’s\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-settings-object-cross-origin-isolated-capability\" id=\"ref-for-concept-settings-object-cross-origin-isolated-capability①\">cross-origin isolated capability</a> is false, and <var>construct</var>\nis <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-conditionally-exposed\" id=\"ref-for-dfn-conditionally-exposed①\">conditionally exposed</a> on [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#CrossOriginIsolated\" id=\"ref-for-CrossOriginIsolated①⑧\">CrossOriginIsolated</a></code>], then return false.</p>"
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "conditionally exposed",
      "href": "https://webidl.spec.whatwg.org/#dfn-conditionally-exposed",
      "html": "An <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①②⑨\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③①\">callback interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②①\">namespace</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member①⑥\">member</a> <var>construct</var> is\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-conditionally-exposed\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">conditionally exposed</dfn> on a given\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦⑧\">extended attribute</a> <var>exposure condition</var> if the following steps return true:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>construct</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③⓪\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③②\">callback interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②②\">namespace</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member①⑥\">interface member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member②②\">interface mixin member</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace-member\" id=\"ref-for-dfn-namespace-member①③\">namespace member</a>.</p>"
        },
        {
          "html": "<p>Let <var>H</var> be <var>construct</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#host-interfaces\" id=\"ref-for-host-interfaces④\">host interface</a> if <var>construct</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member②③\">interface mixin member</a>,\nor null otherwise.</p>"
        },
        {
          "html": "If <var>construct</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member①⑦\">interface member</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin-member\" id=\"ref-for-interface-mixin-member②④\">interface mixin member</a>, or\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace-member\" id=\"ref-for-dfn-namespace-member①④\">namespace member</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <var>exposure condition</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑦⑨\">extended attribute</a> is specified on <var>construct</var>,\nthen return true.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>construct</var> to be the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③①\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-interface\" id=\"ref-for-dfn-partial-interface①⑧\">partial interface</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin④⑤\">interface mixin</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#partial-interface-mixin\" id=\"ref-for-partial-interface-mixin①⑦\">partial interface mixin</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②③\">namespace</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-namespace\" id=\"ref-for-dfn-partial-namespace①①\">partial namespace</a>\n<var>construct</var> is declared on.</p>"
            }
          ]
        },
        {
          "html": "If <var>construct</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-interface\" id=\"ref-for-dfn-partial-interface①⑨\">partial interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#partial-interface-mixin\" id=\"ref-for-partial-interface-mixin①⑧\">partial interface mixin</a>, or\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-partial-namespace\" id=\"ref-for-dfn-partial-namespace①②\">partial namespace</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <var>exposure condition</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑧⓪\">extended attribute</a> is specified on <var>construct</var>,\nthen return true.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>construct</var> to be the original <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③②\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin④⑥\">interface mixin</a>, or\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②④\">namespace</a> definition of <var>construct</var>.</p>"
            }
          ]
        },
        {
          "html": "If <var>construct</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-mixin\" id=\"ref-for-interface-mixin④⑦\">interface mixin</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <var>exposure condition</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑧①\">extended attribute</a> is specified on <var>construct</var>,\nthen return true.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>construct</var> to <var>H</var>.</p>"
            }
          ]
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>construct</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③③\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③③\">callback interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace②⑤\">namespace</a>.</p>"
        },
        {
          "html": "<p>If the <var>exposure condition</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑧②\">extended attribute</a> is specified on <var>construct</var>,\nthen return true.</p>"
        },
        {
          "html": "<p>Otherwise, return false.</p>"
        }
      ]
    },
    {
      "name": "global names",
      "href": "https://webidl.spec.whatwg.org/#dfn-global-name",
      "html": "The [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global③\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute⑧④\">extended attribute</a> also defines the\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-global-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">global names</dfn> for the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①③⑥\">interface</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the [Global] extended attribute takes an identifier",
              "html": "<p>« the given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑤③\">identifier</a> »</p>"
            },
            {
              "case": "If the [Global] extended attribute takes an identifier list",
              "html": "<p>the identifier list</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "overload resolution algorithm",
      "href": "https://webidl.spec.whatwg.org/#dfn-overload-resolution-algorithm",
      "html": "In order to define how function invocations are resolved, the\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-overload-resolution-algorithm\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">overload resolution algorithm</dfn>\n    is defined.  Its input is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-effective-overload-set\" id=\"ref-for-dfn-effective-overload-set①②\">effective overload set</a>,\n    <var>S</var>, and a list of JavaScript values, <var>args</var>.\n    Its output is a pair consisting of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-operation\" id=\"ref-for-dfn-operation⑤⑦\">operation</a> or\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①①⑨\">extended attribute</a> of one of <var>S</var>’s entries\n    and a list of IDL values or the special value “missing”.  The algorithm behaves as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>maxarg</var> be the length of the longest type list of the entries in <var>S</var>.</p>"
        },
        {
          "html": "<p>Let <var>n</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size④\">size</a> of <var>args</var>.</p>"
        },
        {
          "html": "<p>Initialize <var>argcount</var> to be min(<var>maxarg</var>, <var>n</var>).</p>"
        },
        {
          "html": "<p>Remove from <var>S</var> all entries whose type list is not of length <var>argcount</var>.</p>"
        },
        {
          "html": "<p>If <var>S</var> is empty, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Initialize <var>d</var> to −1.</p>"
        },
        {
          "html": "<p>Initialize <var>method</var> to <emu-val>undefined</emu-val>.</p>"
        },
        {
          "html": "<p>If there is more than one entry in <var>S</var>, then set\n<var>d</var> to be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-distinguishing-argument-index\" id=\"ref-for-dfn-distinguishing-argument-index⑤\">distinguishing argument index</a>\nfor the entries of <var>S</var>.</p>"
        },
        {
          "html": "<p>Initialize <var>values</var> to be an empty list, where each entry will be either an IDL value or the special value “missing”.</p>"
        },
        {
          "html": "<p>Initialize <var>i</var> to 0.</p>"
        },
        {
          "html": "While <var>i</var> &lt; <var>d</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be <var>args</var>[<var>i</var>].</p>"
            },
            {
              "html": "<p>Let <var>type</var> be the type at index <var>i</var> in the type list of any entry in <var>S</var>.</p>"
            },
            {
              "html": "<p>Let <var>optionality</var> be the value at index <var>i</var> in the list of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optionality-value\" id=\"ref-for-dfn-optionality-value②\">optionality values</a> of any entry in <var>S</var>.</p>"
            },
            {
              "html": "If <var>optionality</var> is “optional” and <var>V</var> is <emu-val>undefined</emu-val>, then:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If the argument at index <var>i</var> is declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument-default-value\" id=\"ref-for-dfn-optional-argument-default-value①②\">default value</a>,\nthen append to <var>values</var> that default value.</p>"
                },
                {
                  "html": "<p>Otherwise, append to <var>values</var> the special value “missing”.</p>"
                }
              ]
            },
            {
              "html": "<p>Otherwise, append to <var>values</var> the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⓪\">converting</a>\n<var>V</var> to IDL type <var>type</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "If <var>i</var> = <var>d</var>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be <var>args</var>[<var>i</var>].</p>"
            },
            {
              "html": "<p>If <var>V</var> is <emu-val>undefined</emu-val>, and there is an entry in <var>S</var>\nwhose list of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optionality-value\" id=\"ref-for-dfn-optionality-value③\">optionality values</a> has “optional” at index <var>i</var>,\nthen remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> is <emu-val>null</emu-val> or <emu-val>undefined</emu-val>,\nand there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⓪\">nullable type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①⑧\">dictionary type</a></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types⑨\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type⑥\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④②\">union type</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⓪\">annotated</a> union type that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-includes-a-nullable-type\" id=\"ref-for-dfn-includes-a-nullable-type④\">includes a nullable type</a> or that\nhas a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary①⑨\">dictionary type</a> in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①②\">flattened members</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object①\">is a platform object</a>, and\nthere is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⑤\">interface type</a> that <var>V</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⓪\">implements</a></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②⓪\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③①\">nullable</a> version of any of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①①\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type⑦\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④③\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③②\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①②\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①③\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type①⑨\">is an Object</a>, <var>V</var> has an [[ArrayBufferData]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①①\">internal slot</a>, and\nthere is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer②②\">ArrayBuffer</a></code></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-SharedArrayBuffer\" id=\"ref-for-idl-SharedArrayBuffer①⑥\">SharedArrayBuffer</a></code></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②①\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③③\">nullable</a> version of either of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①③\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type⑧\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④④\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③④\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①④\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①④\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②⓪\">is an Object</a>, <var>V</var> has a [[DataView]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①②\">internal slot</a>, and\nthere is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DataView\" id=\"ref-for-idl-DataView⑦\">DataView</a></code></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②②\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⑤\">nullable</a> version of either of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⑤\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type⑨\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④⑤\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⑥\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⑥\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①⑤\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②①\">is an Object</a>, <var>V</var> has a [[TypedArrayName]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①③\">internal slot</a>, and\nthere is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-typed-array-type\" id=\"ref-for-dfn-typed-array-type②\">typed array type</a> whose name\nis equal to the value of <var>V</var>’s [[TypedArrayName]] <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots\" id=\"ref-for-sec-object-internal-methods-and-internal-slots①④\">internal slot</a></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②③\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⑦\">nullable</a> version of either of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⑦\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⓪\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④⑥\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⑧\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⑧\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①⑥\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable⑥\">IsCallable</a>(<var>V</var>) is true,\nand there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-function\" id=\"ref-for-dfn-callback-function③①\">callback function</a> type</p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②④\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type③⑨\">nullable</a> version of any of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types①⑨\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①①\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type④⑦\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type④⓪\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types②⓪\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types①⑦\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "and after performing the following steps,",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod⑧\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①⑧\">%Symbol.asyncIterator%</a></code>).</p>"
                },
                {
                  "html": "<p>If <var>method</var> is <emu-val>undefined</emu-val>, then set <var>method</var> to <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod⑨\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols①⑨\">%Symbol.iterator%</a></code>).</p>"
                }
              ]
            },
            {
              "html": "and after performing the following steps,",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>method</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getmethod\" id=\"ref-for-sec-getmethod①⓪\">GetMethod</a>(<var>V</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⓪\">%Symbol.iterator%</a></code>).</p>"
                }
              ]
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②④\">is an Object</a> and\nthere is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface①⓪\">callback interface type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-dictionary\" id=\"ref-for-idl-dictionary②⓪\">dictionary type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#record-type\" id=\"ref-for-record-type④\">record type</a></p>\n         </li><li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-object\" id=\"ref-for-idl-object②⑤\">object</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type④⑦\">nullable</a> version of any of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types②⑦\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⑤\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤①\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type④⑧\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types②⑧\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②①\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-boolean-type\" id=\"ref-for-sec-ecmascript-language-types-boolean-type②\">is a Boolean</a>\nand there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①⑥\">boolean</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type④⑨\">nullable</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①⑦\">boolean</a></code></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types②⑨\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⑥\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤②\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⓪\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⓪\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②②\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-number-type\" id=\"ref-for-sec-ecmascript-language-types-number-type⑧\">is a Number</a>\nand there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⑥\">numeric type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤①\">nullable</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⑦\">numeric type</a></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③①\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⑦\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤③\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤②\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③②\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②③\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if <var>V</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-bigint-type\" id=\"ref-for-sec-ecmascript-language-types-bigint-type③\">is a BigInt</a>\nand there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint①⑨\">bigint</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤③\">nullable</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint②⓪\">bigint</a></code></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③③\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⑧\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤④\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤④\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③④\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②④\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-string-type\" id=\"ref-for-dfn-string-type⑨\">string type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⑤\">nullable</a> version of any of the above types</p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⑤\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type①⑨\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤⑤\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⑥\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⑥\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②⑤\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⑧\">numeric type</a></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⑦\">nullable</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-numeric-type\" id=\"ref-for-dfn-numeric-type①⑨\">numeric type</a></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⑦\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type②⓪\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤⑥\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⑧\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⑧\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②⑥\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①⑧\">boolean</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑤⑨\">nullable</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean①⑨\">boolean</a></code></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types③⑨\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type②①\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤⑦\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑥⓪\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types④⓪\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②⑦\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if there is an entry in <var>S</var> that has one of the following types at position <var>i</var> of its type list,</p>\n        <ul>\n         <li data-md=\"\">\n          <p><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint②①\">bigint</a></code></p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑥①\">nullable</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-bigint\" id=\"ref-for-idl-bigint②②\">bigint</a></code></p>\n         </li><li data-md=\"\">\n          <p>an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types④①\">annotated type</a> whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types-inner-type\" id=\"ref-for-annotated-types-inner-type②②\">inner type</a> is one of the above types</p>\n         </li><li data-md=\"\">\n          <p>a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-union-type\" id=\"ref-for-dfn-union-type⑤⑧\">union type</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-nullable-type\" id=\"ref-for-dfn-nullable-type⑥②\">nullable</a> union type, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#annotated-types\" id=\"ref-for-annotated-types④②\">annotated</a> union type\nthat has one of the above types in its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-flattened-union-member-types\" id=\"ref-for-dfn-flattened-union-member-types②⑧\">flattened member types</a></p>\n        </li></ul>\n        <p>then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: if there is an entry in <var>S</var> that has <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-any\" id=\"ref-for-idl-any①⑤\">any</a></code> at position <var>i</var>\nof its type list, then remove from <var>S</var> all other entries.</p>"
            },
            {
              "html": "<p>Otherwise: <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⑤\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>callable</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-operation\" id=\"ref-for-dfn-operation⑤⑧\">operation</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⓪\">extended attribute</a>\nof the single entry in <var>S</var>.</p>"
        },
        {
          "html": "If <var>i</var> = <var>d</var> and <var>method</var> is not <emu-val>undefined</emu-val>, then",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be <var>args</var>[<var>i</var>].</p>"
            },
            {
              "html": "<p>Let <var>T</var> be the type at index <var>i</var> in the\ntype list of the remaining entry in <var>S</var>.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>T</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type②③\">sequence type</a>.</p>"
            },
            {
              "html": "<p>Append to <var>values</var> the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-sequence-from-iterable\" id=\"ref-for-create-sequence-from-iterable③\">creating a sequence</a>\nof type <var>T</var> from <var>V</var> and <var>method</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "While <var>i</var> &lt; <var>argcount</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be <var>args</var>[<var>i</var>].</p>"
            },
            {
              "html": "<p>Let <var>type</var> be the type at index <var>i</var> in the type list of the remaining entry in <var>S</var>.</p>"
            },
            {
              "html": "<p>Let <var>optionality</var> be the value at index <var>i</var> in the list of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optionality-value\" id=\"ref-for-dfn-optionality-value④\">optionality values</a> of the remaining entry in <var>S</var>.</p>"
            },
            {
              "html": "If <var>optionality</var> is “optional” and <var>V</var> is <emu-val>undefined</emu-val>, then:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If the argument at index <var>i</var> is declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument-default-value\" id=\"ref-for-dfn-optional-argument-default-value①③\">default value</a>,\nthen append to <var>values</var> that default value.</p>"
                },
                {
                  "html": "<p>Otherwise, append to <var>values</var> the special value “missing”.</p>"
                }
              ]
            },
            {
              "html": "<p>Otherwise, append to <var>values</var> the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦①\">converting</a> <var>V</var> to IDL type <var>type</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "While <var>i</var> is less than the number of arguments <var>callable</var> is declared to take:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>callable</var>’s argument at index <var>i</var> is declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument-default-value\" id=\"ref-for-dfn-optional-argument-default-value①④\">default value</a>,\nthen append to <var>values</var> that default value.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>callable</var>’s argument at index <var>i</var> is not variadic, then append to <var>values</var> the special value “missing”.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Return the pair &lt;<var>callable</var>, <var>values</var>&gt;.</p>"
        }
      ]
    },
    {
      "name": "implementation-check an object",
      "href": "https://webidl.spec.whatwg.org/#implementation-check-an-object",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-local-lt=\"implementation check|implementation-check\" data-noexport=\"\" id=\"implementation-check-an-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">implementation-check an object</dfn> <var>jsValue</var>\n    against the interface <var>interface</var>,\n    with the identifier <var>name</var>\n    and the type <var>type</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>object</var> to <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑤⑨\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject\">ToObject</a>(<var>jsValue</var>).</p>"
        },
        {
          "html": "<p>If <var>object</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object①⑧\">platform object</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check\">perform a security check</a>, passing:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>the platform object <var>object</var></p>\n       </li><li data-md=\"\">\n        <p>the identifier <var>name</var></p>\n       </li><li data-md=\"\">\n        <p>the type <var>type</var></p>\n      </li></ul>"
        },
        {
          "html": "<p>If <var>object</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①①\">implement</a> <var>interface</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⑥\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>object</var>.</p>"
        }
      ]
    },
    {
      "name": "create an interface object",
      "href": "https://webidl.spec.whatwg.org/#create-an-interface-object",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-object\" id=\"ref-for-dfn-interface-object①⑥\">interface object</a> for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑥⑦\">interface</a> <var>I</var>\n    with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑥⑥\">identifier</a> <var>id</var> and in <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm②⑤\">realm</a> <var>realm</var>\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create an interface object\" data-noexport=\"\" id=\"create-an-interface-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>steps</var> be <var>I</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#overridden-constructor-steps\" id=\"ref-for-overridden-constructor-steps①\">overridden constructor steps</a> if they exist, or\nthe following steps otherwise:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>I</var> was not declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-constructors\" id=\"ref-for-idl-constructors②③\">constructor operation</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⑦\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⑦\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" data-refhint-key=\"d89aa3d8\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects⑤\">NewTarget</a></code> is <emu-val>undefined</emu-val>, then\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⑧\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⑧\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>args</var> be the passed arguments.</p>"
            },
            {
              "html": "<p>Let <var>n</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑤\">size</a> of <var>args</var>.</p>"
            },
            {
              "html": "<p>Let <var>id</var> be the identifier of interface <var>I</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set①\">Compute the effective overload set</a> for constructors with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑥⑦\">identifier</a> <var>id</var> on\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑥⑧\">interface</a> <var>I</var> and with argument count <var>n</var>, and let <var>S</var> be the result.</p>"
            },
            {
              "html": "<p>Let &lt;<var>constructor</var>, <var>values</var>&gt; be the result\nof passing <var>S</var> and <var>args</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-overload-resolution-algorithm\" id=\"ref-for-dfn-overload-resolution-algorithm③\">overload resolution algorithm</a>.</p>"
            },
            {
              "html": "<p>Let <var>object</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#internally-create-a-new-object-implementing-the-interface\" id=\"ref-for-internally-create-a-new-object-implementing-the-interface\">internally creating a new object implementing</a> <var>I</var>, with <var>realm</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" data-refhint-key=\"d89aa3d8\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects⑥\">NewTarget</a></code>.</p>"
            },
            {
              "html": "<p>Perform the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#constructor-steps\" id=\"ref-for-constructor-steps②\">constructor steps</a> of <var>constructor</var>\nwith <var>object</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧\">this</a> and <var>values</var> as the argument values.</p>"
            },
            {
              "html": "<p>Let <var>O</var> be <var>object</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⑤\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>O</var> is an object that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①③\">implements</a> <var>I</var>.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>O</var>.[[Realm]] is <var>realm</var>.</p>"
            },
            {
              "html": "<p>Return <var>O</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>constructorProto</var> be <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-function-prototype-object\" id=\"ref-for-sec-properties-of-the-function-prototype-object\">%Function.prototype%</a></code>]].</p>"
        },
        {
          "html": "<p>If <var>I</var> inherits from some other interface <var>P</var>,\nthen set <var>constructorProto</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-object\" id=\"ref-for-dfn-interface-object①⑦\">interface object</a> of <var>P</var> in <var>realm</var>.</p>"
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction④\">CreateBuiltinFunction</a>(<var>steps</var>, « [[Unforgeables]] »,\n<var>realm</var>, <var>constructorProto</var>).</p>"
        },
        {
          "html": "<p>Let <var>unforgeables</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate②\">OrdinaryObjectCreate</a>(<emu-val>null</emu-val>).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-unforgeable-regular-operations\" id=\"ref-for-define-the-unforgeable-regular-operations\">Define the unforgeable regular operations</a> of <var>I</var> on <var>unforgeables</var>, given <var>realm</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-unforgeable-regular-attributes\" id=\"ref-for-define-the-unforgeable-regular-attributes\">Define the unforgeable regular attributes</a> of <var>I</var> on <var>unforgeables</var>, given <var>realm</var>.</p>"
        },
        {
          "html": "<p>Set <var>F</var>.[[Unforgeables]] to <var>unforgeables</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname\">SetFunctionName</a>(<var>F</var>, <var>id</var>).</p>"
        },
        {
          "html": "<p>Let <var>length</var> be 0.</p>"
        },
        {
          "html": "If <var>I</var> was declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-constructors\" id=\"ref-for-idl-constructors②④\">constructor operation</a>, then",
          "rationale": "compute",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set②\">Compute the effective overload set</a> for constructors with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑥⑧\">identifier</a> <var>id</var> on\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑥⑨\">interface</a> <var>I</var> and with argument count 0, and let <var>S</var> be the result.</p>"
            },
            {
              "html": "<p>Set <var>length</var> to the length of the\nshortest argument list of the entries in <var>S</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength\">SetFunctionLength</a>(<var>F</var>, <var>length</var>).</p>"
        },
        {
          "html": "<p>Let <var>proto</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-an-interface-prototype-object\" id=\"ref-for-create-an-interface-prototype-object\">creating an interface\nprototype object</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦⓪\">interface</a> <var>I</var> in <var>realm</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow\">DefinePropertyOrThrow</a>(<var>F</var>, \"<code>prototype</code>\",\nPropertyDescriptor{[[Value]]: <var>proto</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val>}).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-constants\" id=\"ref-for-define-the-constants\">Define the constants</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦①\">interface</a> <var>I</var> on <var>F</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-static-attributes\" id=\"ref-for-define-the-static-attributes\">Define the static attributes</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦②\">interface</a> <var>I</var> on <var>F</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-static-operations\" id=\"ref-for-define-the-static-operations\">Define the static operations</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦③\">interface</a> <var>I</var> on <var>F</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "create a legacy factory function",
      "href": "https://webidl.spec.whatwg.org/#create-a-legacy-factory-function",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-factory-function\" id=\"ref-for-dfn-legacy-factory-function③\">legacy factory function</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#legacyfactoryfunction-identifier\" id=\"ref-for-legacyfactoryfunction-identifier④\">identifier</a> <var>id</var>\n    for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦④\">interface</a> <var>I</var> in <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm②⑥\">realm</a> <var>realm</var>\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create a legacy factory function\" data-noexport=\"\" id=\"create-a-legacy-factory-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>steps</var> be the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" data-refhint-key=\"d89aa3d8\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects⑧\">NewTarget</a></code> is <emu-val>undefined</emu-val>, then\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw③⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror③⑨\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Let <var>args</var> be the passed arguments.</p>"
            },
            {
              "html": "<p>Let <var>n</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑥\">size</a> of <var>args</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set③\">Compute the effective overload set</a> for legacy factory functions with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑥⑨\">identifier</a> <var>id</var>\non <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦⑤\">interface</a> <var>I</var> and with argument count <var>n</var>, and let <var>S</var> be the result.</p>"
            },
            {
              "html": "<p>Let &lt;<var>constructor</var>, <var>values</var>&gt; be the result of passing <var>S</var> and\n<var>args</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-overload-resolution-algorithm\" id=\"ref-for-dfn-overload-resolution-algorithm④\">overload resolution algorithm</a>.</p>"
            },
            {
              "html": "<p>Let <var>object</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#internally-create-a-new-object-implementing-the-interface\" id=\"ref-for-internally-create-a-new-object-implementing-the-interface①\">internally creating a new object implementing</a> <var>I</var>, with <var>realm</var> and\n<code class=\"idl\"><a data-link-type=\"idl\" data-refhint-key=\"d89aa3d8\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects⑨\">NewTarget</a></code>.</p>"
            },
            {
              "html": "<p>Perform the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#constructor-steps\" id=\"ref-for-constructor-steps③\">constructor steps</a> of <var>constructor</var>\nwith <var>object</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑨\">this</a> and <var>values</var> as the argument values.</p>"
            },
            {
              "html": "<p>Let <var>O</var> be <var>object</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⑥\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>O</var> is an object that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①④\">implements</a> <var>I</var>.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: <var>O</var>.[[Realm]] is <var>realm</var>.</p>"
            },
            {
              "html": "<p>Return <var>O</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction⑤\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname①\">SetFunctionName</a>(<var>F</var>, <var>id</var>).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set④\">Compute the effective overload set</a> for legacy factory functions with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦⓪\">identifier</a> <var>id</var>\non <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦⑥\">interface</a> <var>I</var> and with argument count 0, and let <var>S</var> be the result.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be the length of the shortest argument list of the entries in <var>S</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength①\">SetFunctionLength</a>(<var>F</var>, <var>length</var>).</p>"
        },
        {
          "html": "<p>Let <var>proto</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object①⓪\">interface prototype object</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦⑦\">interface</a> <var>I</var> in <var>realm</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow①\">DefinePropertyOrThrow</a>(<var>F</var>, \"<code>prototype</code>\",\nPropertyDescriptor{[[Value]]: <var>proto</var>, [[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>false</emu-val>}).</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "create an interface prototype object",
      "href": "https://webidl.spec.whatwg.org/#create-an-interface-prototype-object",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object①①\">interface prototype object</a> for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑦⑨\">interface</a> <var>interface</var> and <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm②⑦\">realm</a> <var>realm</var>\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create an interface prototype object\" data-noexport=\"\" id=\"create-an-interface-prototype-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>proto</var> be null.</p>"
        },
        {
          "html": "<p>If <var>interface</var> is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global①④\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②④\">extended attribute</a>,\nand <var>interface</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties④\">supports named properties</a>,\nthen set <var>proto</var> to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-named-properties-object\" id=\"ref-for-create-a-named-properties-object\">creating a named\nproperties object</a> for <var>interface</var> and <var>realm</var>.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>interface</var> is declared to inherit from another interface,\nthen set <var>proto</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object①②\">interface prototype object</a> in <var>realm</var>\nof that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherited-interfaces\" id=\"ref-for-dfn-inherited-interfaces①⑧\">inherited interface</a>.</p>"
        },
        {
          "html": "<p>Otherwise, if <var>interface</var> is the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④④\">DOMException</a></code> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧⓪\">interface</a>,\nthen set <var>proto</var> to <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-error-prototype-object\" id=\"ref-for-sec-properties-of-the-error-prototype-object\">%Error.prototype%</a></code>]].</p>"
        },
        {
          "html": "<p>Otherwise, set <var>proto</var> to <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object④\">%Object.prototype%</a></code>]].</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>proto</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②⑤\">is an Object</a>.</p>"
        },
        {
          "html": "<p>Let <var>interfaceProtoObj</var> be null.</p>"
        },
        {
          "html": "If <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#realm-is-global-prototype-chain-mutable\" id=\"ref-for-realm-is-global-prototype-chain-mutable\">is global prototype chain mutable</a> is true, then:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>interfaceProtoObj</var> to <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate③\">OrdinaryObjectCreate</a>(<var>proto</var>).</p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>interface</var> is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global①⑤\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⑤\">extended attribute</a>, or\n<var>interface</var> is in the set of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherited-interfaces\" id=\"ref-for-dfn-inherited-interfaces①⑨\">inherited interfaces</a> of an interface\nthat is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global①⑥\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⑥\">extended attribute</a>, then:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>interfaceProtoObj</var> to <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-makebasicobject\" id=\"ref-for-sec-makebasicobject\">MakeBasicObject</a>(« [[Prototype]], [[Extensible]] »).</p>"
            },
            {
              "html": "<p>Set <var>interfaceProtoObj</var>.[[Prototype]] to <var>proto</var>.</p>"
            },
            {
              "html": "<p>Set the internal methods of <var>interfaceProtoObj</var>\nwhich are specific to <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#immutable-prototype-exotic-object\" id=\"ref-for-immutable-prototype-exotic-object\">immutable prototype exotic objects</a>\nto the definitions specified in\n<a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-immutable-prototype-exotic-objects\" id=\"ref-for-sec-immutable-prototype-exotic-objects\">ECMA-262 Immutable prototype exotic objects</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, set <var>interfaceProtoObj</var> to <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate④\">OrdinaryObjectCreate</a>(<var>proto</var>).</p>"
        },
        {
          "html": "If <var>interface</var> has any <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②①\">member</a> declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Unscopable\" id=\"ref-for-Unscopable⑤\">Unscopable</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⑦\">extended attribute</a>,\nthen:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>unscopableObject</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate⑤\">OrdinaryObjectCreate</a>(<emu-val>null</emu-val>).</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⓪\">For each</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed⑧\">exposed</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②②\">member</a> <var>member</var> of <var>interface</var>\nthat is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Unscopable\" id=\"ref-for-Unscopable⑥\">Unscopable</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⑧\">extended attribute</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>id</var> be <var>member</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦①\">identifier</a>.</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②\">CreateDataPropertyOrThrow</a>(<var>unscopableObject</var>, <var>id</var>,\n<emu-val>true</emu-val>).</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>desc</var> be the PropertyDescriptor{[[Value]]: <var>unscopableObject</var>,\n[[Writable]]: <emu-val>false</emu-val>, [[Enumerable]]: <emu-val>false</emu-val>,\n[[Configurable]]: <emu-val>true</emu-val>}.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow②\">DefinePropertyOrThrow</a>(<var>interfaceProtoObj</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②③\">%Symbol.unscopables%</a></code>, <var>desc</var>).</p>"
            }
          ]
        },
        {
          "html": "If <var>interface</var> is not declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global①⑦\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①②⑨\">extended attribute</a>, then:",
          "rationale": "define",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-attributes\" id=\"ref-for-define-the-regular-attributes\">Define the regular attributes</a> of <var>interface</var> on <var>interfaceProtoObj</var> given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-operations\" id=\"ref-for-define-the-regular-operations\">Define the regular operations</a> of <var>interface</var> on <var>interfaceProtoObj</var> given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-iteration-methods\" id=\"ref-for-define-the-iteration-methods\">Define the iteration methods</a> of <var>interface</var> on <var>interfaceProtoObj</var> given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-asynchronous-iteration-methods\" id=\"ref-for-define-the-asynchronous-iteration-methods\">Define the asynchronous iteration methods</a> of <var>interface</var> on <var>interfaceProtoObj</var>\ngiven <var>realm</var>.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-constants\" id=\"ref-for-define-the-constants①\">Define the constants</a> of <var>interface</var> on <var>interfaceProtoObj</var> given <var>realm</var>.</p>"
        },
        {
          "html": "If the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNoInterfaceObject\" id=\"ref-for-LegacyNoInterfaceObject①①\">LegacyNoInterfaceObject</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①③⓪\">extended attribute</a> was not specified on <var>interface</var>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>constructor</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-object\" id=\"ref-for-dfn-interface-object①⑧\">interface object</a> of <var>interface</var> in <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the PropertyDescriptor{[[Writable]]: <emu-val>true</emu-val>,\n[[Enumerable]]: <emu-val>false</emu-val>, [[Configurable]]: <emu-val>true</emu-val>,\n[[Value]]: <var>constructor</var>}.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow③\">DefinePropertyOrThrow</a>(<var>interfaceProtoObj</var>, \"<code>constructor</code>\", <var>desc</var>).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>interfaceProtoObj</var>.</p>"
        }
      ]
    },
    {
      "name": "create a named properties object",
      "href": "https://webidl.spec.whatwg.org/#create-a-named-properties-object",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object③\">named properties object</a> for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧④\">interface</a> <var>interface</var> and <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm②⑧\">realm</a> <var>realm</var>,\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create a named properties object\" data-noexport=\"\" id=\"create-a-named-properties-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>proto</var> be null.</p>"
        },
        {
          "html": "<p>If <var>interface</var> is declared to inherit from another interface,\nthen set <var>proto</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object①⑥\">interface prototype object</a> in <var>realm</var> for the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherited-interfaces\" id=\"ref-for-dfn-inherited-interfaces②⓪\">inherited interface</a>.</p>"
        },
        {
          "html": "<p>Otherwise, set <var>proto</var> to <var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object⑤\">%Object.prototype%</a></code>]].</p>"
        },
        {
          "html": "<p>Let <var>obj</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-makebasicobject\" id=\"ref-for-sec-makebasicobject①\">MakeBasicObject</a>(« [[Prototype]], [[Extensible]] »).</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[GetOwnProperty]] as specified in <a href=\"https://webidl.spec.whatwg.org/#named-properties-object-getownproperty\">§ 3.7.4.1 [[GetOwnProperty]]</a>.</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[DefineOwnProperty]] as specified in <a href=\"https://webidl.spec.whatwg.org/#named-properties-object-defineownproperty\">§ 3.7.4.2 [[DefineOwnProperty]]</a>.</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[Delete]] as specified in <a href=\"https://webidl.spec.whatwg.org/#named-properties-object-delete\">§ 3.7.4.3 [[Delete]]</a>.</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[SetPrototypeOf]] as specified in <a href=\"https://webidl.spec.whatwg.org/#named-properties-object-setprototypeof\">§ 3.7.4.4 [[SetPrototypeOf]]</a>.</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[PreventExtensions]] as specified in <a href=\"https://webidl.spec.whatwg.org/#named-properties-object-preventextensions\">§ 3.7.4.5 [[PreventExtensions]]</a>.</p>"
        },
        {
          "html": "<p>Set <var>obj</var>.[[Prototype]] to <var>proto</var>.</p>"
        },
        {
          "html": "<p>Return <var>obj</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the internal [[GetOwnProperty]] method of named properties object",
      "html": "When the [[GetOwnProperty]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object⑤\">named properties object</a> <var>O</var>\n    is called with property key <var>P</var>, the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>A</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧⑥\">interface</a> for the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object⑥\">named properties object</a> <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>object</var> be <var>O</var>.[[Realm]]'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global③\">global object</a>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>object</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⑤\">implements</a> <var>A</var>.</p>"
        },
        {
          "html": "If the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-visibility\" id=\"ref-for-dfn-named-property-visibility\">named property visibility algorithm</a> with\nproperty name <var>P</var> and object <var>object</var> is true, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>operation</var> be the operation used to declare the named property getter.</p>"
            },
            {
              "html": "<p>Let <var>value</var> be an uninitialized variable.</p>"
            },
            {
              "html": "<p>If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦③\">identifier</a>, then\nset <var>value</var> to the result of performing the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-determine-the-value-of-a-named-property\" id=\"ref-for-dfn-determine-the-value-of-a-named-property\">determine the value of a named property</a>\nwith <var>P</var> as the name.</p>"
            },
            {
              "html": "<p>Otherwise, <var>operation</var> was defined with an identifier.  Set <var>value</var> to the result\nof performing the steps listed in the description of <var>operation</var> with <var>P</var> as the only argument value.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be a newly created <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-property-descriptor-specification-type\" id=\"ref-for-sec-property-descriptor-specification-type\">Property Descriptor</a> with no fields.</p>"
            },
            {
              "html": "<p>Set <var>desc</var>.[[Value]] to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⑦\">converting</a>\n<var>value</var> to a JavaScript value.</p>"
            },
            {
              "html": "<p>If <var>A</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⑥\">implements</a> an interface with the\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyUnenumerableNamedProperties\" id=\"ref-for-LegacyUnenumerableNamedProperties④\">LegacyUnenumerableNamedProperties</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①③③\">extended attribute</a>,\nthen set <var>desc</var>.[[Enumerable]] to <emu-val>false</emu-val>,\notherwise set it to <emu-val>true</emu-val>.</p>"
            },
            {
              "html": "<p>Set <var>desc</var>.[[Writable]] to <emu-val>true</emu-val> and\n<var>desc</var>.[[Configurable]] to <emu-val>true</emu-val>.</p>"
            },
            {
              "html": "<p>Return <var>desc</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarygetownproperty\" id=\"ref-for-sec-ordinarygetownproperty\">OrdinaryGetOwnProperty</a>(<var>O</var>, <var>P</var>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[DefineOwnProperty]] internal method of named properties object",
      "html": "When the [[DefineOwnProperty]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object⑦\">named properties object</a> is called,\n    the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[Delete]] internal method of named properties object",
      "html": "When the [[Delete]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object⑧\">named properties object</a> is called,\n    the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[SetPrototypeOf]] internal method of a named properties object",
      "html": "When the [[SetPrototypeOf]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object⑨\">named properties object</a> <var>O</var> is called with\n    JavaScript language value <var>V</var>, the following step is taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>O</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#realm-is-global-prototype-chain-mutable\" id=\"ref-for-realm-is-global-prototype-chain-mutable①\">is global prototype chain mutable</a> is true,\nreturn <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarysetprototypeof\" id=\"ref-for-sec-ordinarysetprototypeof\">OrdinarySetPrototypeOf</a>(<var>O</var>, <var>V</var>).</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-set-immutable-prototype\" id=\"ref-for-sec-set-immutable-prototype\">SetImmutablePrototype</a>(<var>O</var>, <var>V</var>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[PreventExtensions]] internal method of named properties object",
      "html": "When the [[PreventExtensions]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object①⓪\">named properties object</a> is called,\n    the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "define the constants",
      "href": "https://webidl.spec.whatwg.org/#define-the-constants",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-constants\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the constants</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧⑦\">interface</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③⑥\">callback interface</a>, or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace③⑧\">namespace</a>\n    <var>definition</var> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm②⑨\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①①\">For each</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-constant\" id=\"ref-for-dfn-constant④⓪\">constant</a> <var>const</var> that is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②③\">member</a> of <var>definition</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>const</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed⑨\">exposed</a> in <var>realm</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue\">continue</a>.</p>"
            },
            {
              "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⑧\">converting</a>\n<var>const</var>’s IDL value to a JavaScript value.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the PropertyDescriptor{[[Writable]]: <emu-val>false</emu-val>,\n[[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>false</emu-val>,\n[[Value]]: <var>value</var>}.</p>"
            },
            {
              "html": "<p>Let <var>id</var> be <var>const</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦④\">identifier</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow④\">DefinePropertyOrThrow</a>(<var>target</var>, <var>id</var>, <var>desc</var>).</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "define the regular attributes",
      "href": "https://webidl.spec.whatwg.org/#define-the-regular-attributes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-regular-attributes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the regular attributes</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧⑧\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace③⑨\">namespace</a> <var>definition</var> on <var>target</var>,\n    given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⓪\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attributes</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑤\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute②⑤\">regular attributes</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②④\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove\">Remove</a> from <var>attributes</var> all the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute⑤⑤\">attributes</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface②\">unforgeable</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-attributes\" id=\"ref-for-define-the-attributes①\">Define the attributes</a> <var>attributes</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the static attributes",
      "href": "https://webidl.spec.whatwg.org/#define-the-static-attributes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-static-attributes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the static attributes</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑧⑨\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⓪\">namespace</a> <var>definition</var> on <var>target</var>,\n    given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③①\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attributes</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑥\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-attribute\" id=\"ref-for-dfn-static-attribute①①\">static attributes</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②⑤\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-attributes\" id=\"ref-for-define-the-attributes②\">Define the attributes</a> <var>attributes</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the unforgeable regular attributes",
      "href": "https://webidl.spec.whatwg.org/#define-the-unforgeable-regular-attributes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-unforgeable-regular-attributes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the unforgeable regular attributes</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨⓪\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④①\">namespace</a> <var>definition</var> on <var>target</var>,\n    given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③②\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attributes</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑦\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface③\">unforgeable</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute②⑥\">regular attributes</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②⑥\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-attributes\" id=\"ref-for-define-the-attributes③\">Define the attributes</a> <var>attributes</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the attributes",
      "href": "https://webidl.spec.whatwg.org/#define-the-attributes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-attributes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the attributes</dfn> <var>attributes</var> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨①\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④②\">namespace</a> <var>definition</var> on <var>target</var>\n    given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③③\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①②\">For each</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute⑤⑥\">attribute</a> <var>attr</var> of <var>attributes</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>attr</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①⓪\">exposed</a> in <var>realm</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue①\">continue</a>.</p>"
            },
            {
              "html": "<p>Let <var>getter</var> be the result of creating an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute-getter\" id=\"ref-for-dfn-attribute-getter③\">attribute getter</a>\ngiven <var>attr</var>, <var>definition</var>, and <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>setter</var> be the result of creating an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute-setter\" id=\"ref-for-dfn-attribute-setter③\">attribute setter</a>\ngiven <var>attr</var>, <var>definition</var>, and <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>configurable</var> be <emu-val>false</emu-val> if <var>attr</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface④\">unforgeable</a>\nand <emu-val>true</emu-val> otherwise.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the PropertyDescriptor{[[Get]]: <var>getter</var>, [[Set]]: <var>setter</var>,\n[[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <var>configurable</var>}.</p>"
            },
            {
              "html": "<p>Let <var>id</var> be <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦⑤\">identifier</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow⑤\">DefinePropertyOrThrow</a>(<var>target</var>, <var>id</var>, <var>desc</var>).</p>"
            },
            {
              "html": "<p>If <var>attr</var>’s type is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-observable-array-type\" id=\"ref-for-dfn-observable-array-type④\">observable array type</a> with type argument <var>T</var>, then set\n<var>target</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#backing-observable-array-exotic-object\" id=\"ref-for-backing-observable-array-exotic-object①\">backing observable array exotic object</a> for <var>attr</var> to the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#creating-an-observable-array-exotic-object\" id=\"ref-for-creating-an-observable-array-exotic-object\">creating an observable array exotic object</a> in <var>realm</var>, given <var>T</var>, <var>attr</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-attribute-set-an-indexed-value\" id=\"ref-for-observable-array-attribute-set-an-indexed-value④\">set an indexed value</a> algorithm, and <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-attribute-delete-an-indexed-value\" id=\"ref-for-observable-array-attribute-delete-an-indexed-value④\">delete an indexed value</a> algorithm.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "attribute getter",
      "href": "https://webidl.spec.whatwg.org/#dfn-attribute-getter",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-attribute-getter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">attribute getter</dfn> is created as follows, given an\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute⑤⑦\">attribute</a> <var>attribute</var>, a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④③\">namespace</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨②\">interface</a> <var>target</var>, and a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③④\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>steps</var> be the following series of steps:",
          "rationale": "try",
          "steps": [
            {
              "html": "Try running the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>idlObject</var> be null.</p>"
                },
                {
                  "html": "If <var>target</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨③\">interface</a>, and <var>attribute</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute②⑦\">regular attribute</a>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be the <emu-val>this</emu-val> value, if it is not\n<emu-val>null</emu-val> or <emu-val>undefined</emu-val>, or <var>realm</var>’s\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global④\">global object</a> otherwise.\n(This will subsequently cause a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①④\">TypeError</a></code> in a few steps, if\nthe global object does not implement <var>target</var> and [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientThis\" id=\"ref-for-LegacyLenientThis⑥\">LegacyLenientThis</a></code>] is not\nspecified.)</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object②\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check①\">perform a security check</a>,\npassing <var>jsValue</var>, <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦⑥\">identifier</a>, and \"getter\".</p>"
                    },
                    {
                      "html": "If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⑨\">implement</a> <var>target</var>, then:",
                      "rationale": "if",
                      "steps": [
                        {
                          "html": "<p>If <var>attribute</var> was specified with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientThis\" id=\"ref-for-LegacyLenientThis⑦\">LegacyLenientThis</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①③⑥\">extended attribute</a>, then return <emu-val>undefined</emu-val>.</p>"
                        },
                        {
                          "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⓪\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⓪\">TypeError</a></code>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p>If <var>attribute</var>’s type is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-observable-array-type\" id=\"ref-for-dfn-observable-array-type⑤\">observable array type</a>, then return <var>jsValue</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#backing-observable-array-exotic-object\" id=\"ref-for-backing-observable-array-exotic-object②\">backing observable array exotic object</a> for <var>attribute</var>.</p>"
                    },
                    {
                      "html": "<p>Set <var>idlObject</var> to the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⑥\">interface type</a> value that represents a reference\nto <var>jsValue</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>R</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#getter-steps\" id=\"ref-for-getter-steps⑤\">getter steps</a> of <var>attribute</var> with\n<var>idlObject</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪\">this</a>.</p>"
                },
                {
                  "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑤⑨\">converting</a> <var>R</var> to a\nJavaScript value of the type <var>attribute</var> is declared as.</p>"
                }
              ]
            }
          ],
          "additional": [
            {
              "html": "And then, if <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#an-exception-was-thrown\" id=\"ref-for-an-exception-was-thrown\">an exception <var>E</var> was thrown</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>attribute</var>’s type is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-promise-type\" id=\"ref-for-dfn-promise-type⑨\">promise type</a>, then return\n<a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑥⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call⑥\">Call</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-promise.reject\" id=\"ref-for-sec-promise.reject\">%Promise.reject%</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor⑤\">%Promise%</a></code>, «<var>E</var>»).</p>"
                },
                {
                  "html": "<p>Otherwise, end these steps and allow the exception to propagate.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction⑥\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Let <var>name</var> be the string \"<code>get </code>\" prepended to <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦⑦\">identifier</a>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname②\">SetFunctionName</a>(<var>F</var>, <var>name</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength②\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "attribute setter",
      "href": "https://webidl.spec.whatwg.org/#dfn-attribute-setter",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-attribute-setter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">attribute setter</dfn> is created as follows, given an\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute\" id=\"ref-for-dfn-attribute⑤⑧\">attribute</a> <var>attribute</var>, a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④④\">namespace</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨④\">interface</a> <var>target</var>, and a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⑤\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>target</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⑤\">namespace</a>:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p class=\"assertion\">Assert: <var>attribute</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-read-only\" id=\"ref-for-dfn-read-only②⓪\">read only</a>.</p>"
            },
            {
              "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>attribute</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-read-only\" id=\"ref-for-dfn-read-only②①\">read only</a> and does not have a\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientSetter\" id=\"ref-for-LegacyLenientSetter①①\">LegacyLenientSetter</a></code>], [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#PutForwards\" id=\"ref-for-PutForwards①⑤\">PutForwards</a></code>] or [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Replaceable\" id=\"ref-for-Replaceable①①\">Replaceable</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①③⑦\">extended attribute</a>, return\n<emu-val>undefined</emu-val>; there is no <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-attribute-setter\" id=\"ref-for-dfn-attribute-setter⑤\">attribute setter</a> function.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>attribute</var>’s type is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-promise-type\" id=\"ref-for-dfn-promise-type①⓪\">promise type</a>.</p>"
        },
        {
          "html": "Let <var>steps</var> be the following series of steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>V</var> be <emu-val>undefined</emu-val>.</p>"
            },
            {
              "html": "<p>If any arguments were passed, then set <var>V</var> to the value of the first argument passed.</p>"
            },
            {
              "html": "<p>Let <var>id</var> be <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑦⑧\">identifier</a>.</p>"
            },
            {
              "html": "<p>Let <var>idlObject</var> be null.</p>"
            },
            {
              "html": "If <var>attribute</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute②⑧\">regular attribute</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>jsValue</var> be the <emu-val>this</emu-val> value, if it is not\n<emu-val>null</emu-val> or <emu-val>undefined</emu-val>, or <var>realm</var>’s\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global⑤\">global object</a> otherwise.\n(This will subsequently cause a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑤\">TypeError</a></code> in a few steps, if\nthe global object does not implement <var>target</var> and [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientThis\" id=\"ref-for-LegacyLenientThis⑧\">LegacyLenientThis</a></code>] is not\nspecified.)</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object③\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check②\">perform a security check</a>, passing\n<var>jsValue</var>, <var>id</var>, and \"setter\".</p>"
                },
                {
                  "html": "<p>Let <var>validThis</var> be true if <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⓪\">implements</a> <var>target</var>, or false otherwise.</p>"
                },
                {
                  "html": "<p>If <var>validThis</var> is false and <var>attribute</var> was not specified with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientThis\" id=\"ref-for-LegacyLenientThis⑨\">LegacyLenientThis</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①③⑧\">extended attribute</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④①\">TypeError</a></code>.</p>"
                },
                {
                  "html": "If <var>attribute</var> is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Replaceable\" id=\"ref-for-Replaceable①②\">Replaceable</a></code>] extended attribute, then:",
                  "rationale": "perform",
                  "steps": [
                    {
                      "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow③\">CreateDataPropertyOrThrow</a>(<var>jsValue</var>, <var>id</var>, <var>V</var>).</p>"
                    },
                    {
                      "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>If <var>validThis</var> is false, then return <emu-val>undefined</emu-val>.</p>"
                },
                {
                  "html": "<p>If <var>attribute</var> is declared with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientSetter\" id=\"ref-for-LegacyLenientSetter①②\">LegacyLenientSetter</a></code>] extended attribute, then\nreturn <emu-val>undefined</emu-val>.</p>"
                },
                {
                  "html": "If <var>attribute</var> is declared with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#PutForwards\" id=\"ref-for-PutForwards①⑥\">PutForwards</a></code>] extended attribute, then:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>Q</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦①\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-get-o-p\" id=\"ref-for-sec-get-o-p②\">Get</a>(<var>jsValue</var>, <var>id</var>).</p>"
                    },
                    {
                      "html": "<p>If <var>Q</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②⑥\">is not an Object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④②\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④②\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Let <var>forwardId</var> be the identifier argument of the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#PutForwards\" id=\"ref-for-PutForwards①⑦\">PutForwards</a></code>] extended\nattribute.</p>"
                    },
                    {
                      "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-set-o-p-v-throw\" id=\"ref-for-sec-set-o-p-v-throw\">Set</a>(<var>Q</var>, <var>forwardId</var>, <var>V</var>, <emu-val>false</emu-val>).</p>"
                    },
                    {
                      "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Set <var>idlObject</var> to the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⑦\">interface type</a> value that represents a reference\nto <var>jsValue</var>.</p>"
                },
                {
                  "html": "If <var>attribute</var>’s type is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-observable-array-type\" id=\"ref-for-dfn-observable-array-type⑥\">observable array type</a> with type argument <var>T</var>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>newValues</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦②\">converting</a> <var>V</var> to\nan IDL value of type <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#sequence-type\" id=\"ref-for-sequence-type②⑤\">sequence&lt;<var>T</var>&gt;</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>oa</var> be <var>idlObject</var>’s <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#backing-observable-array-exotic-object\" id=\"ref-for-backing-observable-array-exotic-object③\">backing observable array exotic object</a>.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-length\" id=\"ref-for-observable-array-exotic-object-set-the-length\">Set the length</a> of <var>oa</var>.[[ProxyHandler]] to 0.</p>"
                    },
                    {
                      "html": "<p>Let <var>i</var> be 0.</p>"
                    },
                    {
                      "html": "While <var>i</var> &lt; <var>newValues</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑦\">size</a>:",
                      "rationale": "perform",
                      "steps": [
                        {
                          "html": "<p>Perform the algorithm steps given by\n<var>oa</var>.[[ProxyHandler]].[[SetAlgorithm]], given <var>newValues</var>[<var>i</var>] and <var>i</var>.</p>"
                        },
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⓪\">Append</a> <var>newValues</var>[<var>i</var>] to <var>oa</var>.[[ProxyHandler]].[[BackingList]].</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "Let <var>idlValue</var> be determined as follows:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "attribute’s type is an enumeration",
                      "html": "",
                      "rationale": "let",
                      "steps": [
                        {
                          "html": "<p>Let <var>S</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring⑥\">ToString</a>(<var>V</var>).</p>"
                        },
                        {
                          "html": "<p>If <var>S</var> is not one of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-enumeration-value\" id=\"ref-for-dfn-enumeration-value⑥\">enumeration’s values</a>, then\nreturn <emu-val>undefined</emu-val>.</p>"
                        },
                        {
                          "html": "<p>Otherwise, <var>idlValue</var> is the enumeration value equal to <var>S</var>.</p>"
                        }
                      ]
                    },
                    {
                      "case": "Otherwise",
                      "html": "<var>idlValue</var> is the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦③\">converting</a> <var>V</var> to an\n        IDL value of <var>attribute</var>’s type."
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Perform the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#setter-steps\" id=\"ref-for-setter-steps④\">setter steps</a> of <var>attribute</var>,\nwith <var>idlObject</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①\">this</a> and <var>idlValue</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#the-given-value\" id=\"ref-for-the-given-value②\">the given value</a>.</p>"
            },
            {
              "html": "<p>Return <emu-val>undefined</emu-val></p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction⑦\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Let <var>name</var> be the string \"<code>set </code>\" prepended to <var>id</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname③\">SetFunctionName</a>(<var>F</var>, <var>name</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength③\">SetFunctionLength</a>(<var>F</var>, 1).</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "define the regular operations",
      "href": "https://webidl.spec.whatwg.org/#define-the-regular-operations",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-regular-operations\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the regular operations</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨⑥\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⑥\">namespace</a> <var>definition</var> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⑥\">realm</a> <var>realm</var>,\n    run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>operations</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑧\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-operation\" id=\"ref-for-dfn-regular-operation③⑥\">regular operations</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②⑦\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove①\">Remove</a> from <var>operations</var> all the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-operation\" id=\"ref-for-dfn-operation⑥⓪\">operations</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface⑥\">unforgeable</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-operations\" id=\"ref-for-define-the-operations\">Define the operations</a> <var>operations</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the static operations",
      "href": "https://webidl.spec.whatwg.org/#define-the-static-operations",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-static-operations\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the static operations</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨⑦\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⑦\">namespace</a> <var>definition</var> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⑦\">realm</a> <var>realm</var>,\n    run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>operations</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①⑨\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-operation\" id=\"ref-for-dfn-static-operation①⑥\">static operations</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②⑧\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-operations\" id=\"ref-for-define-the-operations①\">Define the operations</a> <var>operations</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the unforgeable regular operations",
      "href": "https://webidl.spec.whatwg.org/#define-the-unforgeable-regular-operations",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-unforgeable-regular-operations\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the unforgeable regular operations</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨⑧\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⑧\">namespace</a> <var>definition</var> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⑧\">realm</a> <var>realm</var>,\n    run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>operations</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⓪\">list</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface⑦\">unforgeable</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-operation\" id=\"ref-for-dfn-regular-operation③⑦\">regular operations</a> that are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-member\" id=\"ref-for-dfn-member②⑨\">members</a> of <var>definition</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-operations\" id=\"ref-for-define-the-operations②\">Define the operations</a> <var>operations</var> of <var>definition</var> on <var>target</var> given <var>realm</var>.</p>"
        }
      ]
    },
    {
      "name": "define the operations",
      "href": "https://webidl.spec.whatwg.org/#define-the-operations",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-operations\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the operations</dfn> <var>operations</var> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface①⑨⑨\">interface</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace④⑨\">namespace</a> <var>definition</var> on <var>target</var>,\n    given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm③⑨\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①③\">For each</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-operation\" id=\"ref-for-dfn-operation⑥①\">operation</a> <var>op</var> of <var>operations</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>op</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①②\">exposed</a> in <var>realm</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue②\">continue</a>.</p>"
            },
            {
              "html": "<p>Let <var>method</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-operation-function\" id=\"ref-for-dfn-create-operation-function①\">creating an operation function</a>\ngiven <var>op</var>, <var>definition</var>, and <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>modifiable</var> be <emu-val>false</emu-val> if <var>op</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-on-an-interface\" id=\"ref-for-dfn-unforgeable-on-an-interface⑧\">unforgeable</a>\nand <emu-val>true</emu-val> otherwise.</p>"
            },
            {
              "html": "<p>Let <var>desc</var> be the PropertyDescriptor{[[Value]]: <var>method</var>,\n[[Writable]]: <var>modifiable</var>, [[Enumerable]]: <emu-val>true</emu-val>,\n[[Configurable]]: <var>modifiable</var>}.</p>"
            },
            {
              "html": "<p>Let <var>id</var> be <var>op</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧⓪\">identifier</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow⑥\">DefinePropertyOrThrow</a>(<var>target</var>, <var>id</var>, <var>desc</var>).</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "creating an operation function",
      "href": "https://webidl.spec.whatwg.org/#dfn-create-operation-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"creating an operation function\" data-noexport=\"\" id=\"dfn-create-operation-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an operation function</dfn>,\n    given an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-operation\" id=\"ref-for-dfn-operation⑥②\">operation</a> <var>op</var>, a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace⑤⓪\">namespace</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪⓪\">interface</a> <var>target</var>, and a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④⓪\">realm</a> <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>id</var> be <var>op</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧①\">identifier</a>.</p>"
        },
        {
          "html": "Let <var>steps</var> be the following series of steps, given function argument\nvalues <var>args</var>:",
          "rationale": "try",
          "steps": [
            {
              "html": "Try running the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>idlObject</var> be null.</p>"
                },
                {
                  "html": "If <var>target</var> is an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪①\">interface</a>, and <var>op</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-operation\" id=\"ref-for-dfn-static-operation①⑦\">static operation</a>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be the <emu-val>this</emu-val> value, if it is not\n<emu-val>null</emu-val> or <emu-val>undefined</emu-val>, or <var>realm</var>’s\n<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global⑥\">global object</a> otherwise.\n(This will subsequently cause a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①⑦\">TypeError</a></code> in a few steps, if\nthe global object does not implement <var>target</var> and [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyLenientThis\" id=\"ref-for-LegacyLenientThis①⓪\">LegacyLenientThis</a></code>] is not\nspecified.)</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object④\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check③\">perform a security check</a>,\npassing <var>jsValue</var>, <var>id</var>, and \"method\".</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②②\">implement</a> the interface <var>target</var>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④③\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Set <var>idlObject</var> to the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⑧\">interface type</a> value that represents a reference\nto <var>jsValue</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>n</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑧\">size</a> of <var>args</var>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set⑤\">Compute the effective overload set</a>  for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-operation\" id=\"ref-for-dfn-regular-operation③⑧\">regular operations</a> (if <var>op</var> is a\nregular operation) or for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-operation\" id=\"ref-for-dfn-static-operation①⑧\">static operations</a> (if <var>op</var> is a static operation)\nwith <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧②\">identifier</a> <var>id</var> on <var>target</var> and with argument count <var>n</var>, and let <var>S</var> be\nthe result.</p>"
                },
                {
                  "html": "<p>Let &lt;<var>operation</var>, <var>values</var>&gt; be the result of passing\n<var>S</var> and <var>args</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-overload-resolution-algorithm\" id=\"ref-for-dfn-overload-resolution-algorithm⑤\">overload resolution algorithm</a>.</p>"
                },
                {
                  "html": "<p>Let <var>R</var> be <emu-val>null</emu-val>.</p>"
                },
                {
                  "html": "If <var>operation</var> is declared with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Default\" id=\"ref-for-Default⑥\">Default</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④⓪\">extended attribute</a>, then:",
                  "rationale": "assert",
                  "steps": [
                    {
                      "html": "<p class=\"assertion\">Assert: <var>operation</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#has-default-method-steps\" id=\"ref-for-has-default-method-steps①\">has default method steps</a>.</p>"
                    },
                    {
                      "html": "<p>Set <var>R</var> to the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-method-steps\" id=\"ref-for-default-method-steps①\">default method steps</a> for <var>operation</var>,\nwith <var>idlObject</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③③\">this</a> and <var>values</var> as the argument values.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Otherwise, set <var>R</var> to the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps⑦\">method steps</a> of <var>operation</var>,\nwith <var>idlObject</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③④\">this</a> and <var>values</var> as the argument values.</p>"
                },
                {
                  "html": "<p>Return <var>R</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⓪\">converted to a JavaScript value</a>.</p>\n          <p class=\"XXX\"> <var>R</var> is assumed to be an IDL value of the type <var>op</var> is declared to return. <a href=\"https://github.com/whatwg/webidl/issues/674\">[whatwg/webidl Issue #674]</a></p>"
                }
              ]
            }
          ],
          "additional": [
            {
              "html": "And then, if <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#an-exception-was-thrown\" id=\"ref-for-an-exception-was-thrown①\">an exception <var>E</var> was thrown</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>op</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-return-type\" id=\"ref-for-dfn-return-type⑤\">return type</a>\nthat is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-promise-type\" id=\"ref-for-dfn-promise-type①①\">promise type</a>, then return\n<a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call⑦\">Call</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-promise.reject\" id=\"ref-for-sec-promise.reject①\">%Promise.reject%</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor⑥\">%Promise%</a></code>, «<var>E</var>»).</p>"
                },
                {
                  "html": "<p>Otherwise, end these steps and allow the exception to propagate.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction⑧\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname④\">SetFunctionName</a>(<var>F</var>, <var>id</var>).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#compute-the-effective-overload-set\" id=\"ref-for-compute-the-effective-overload-set⑥\">Compute the effective overload set</a>  for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-operation\" id=\"ref-for-dfn-regular-operation③⑨\">regular operations</a> (if <var>op</var> is a regular\noperation) or for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-static-operation\" id=\"ref-for-dfn-static-operation①⑨\">static operations</a> (if <var>op</var> is a static operation) with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧③\">identifier</a>\n<var>id</var> on <var>target</var> and with argument count 0, and let <var>S</var> be the result.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be the length of the shortest argument list in the entries in <var>S</var>.</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength④\">SetFunctionLength</a>(<var>F</var>, <var>length</var>).</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "default toJSON steps",
      "href": "https://webidl.spec.whatwg.org/#default-tojson-steps",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"default-tojson-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">default toJSON steps</dfn> for an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪②\">interface</a> <var>I</var> are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>map</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map⑨\">ordered map</a>.</p>"
        },
        {
          "html": "<p>Let <var>stack</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-an-inheritance-stack\" id=\"ref-for-create-an-inheritance-stack\">creating an inheritance stack</a>\nfor <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪③\">interface</a> <var>I</var>.</p>"
        },
        {
          "html": "<p>Invoke <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#collect-attribute-values-of-an-inheritance-stack\" id=\"ref-for-collect-attribute-values-of-an-inheritance-stack\">collect attribute values of an inheritance stack</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑤\">this</a>, <var>stack</var>, and\n<var>map</var>.</p>"
        },
        {
          "html": "<p>Let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate⑥\">OrdinaryObjectCreate</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object⑥\">%Object.prototype%</a></code>).</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate①\">For each</a> <var>key</var> → <var>value</var> of <var>map</var>,",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>k</var> be <var>key</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥①\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Let <var>v</var> be <var>value</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥②\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⑥\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow④\">CreateDataPropertyOrThrow</a>(<var>result</var>, <var>k</var>, <var>v</var>).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.</p>"
        }
      ]
    },
    {
      "name": "collect attribute values of an inheritance stack",
      "href": "https://webidl.spec.whatwg.org/#collect-attribute-values-of-an-inheritance-stack",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"collect-attribute-values-of-an-inheritance-stack\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">collect attribute values of an inheritance stack</dfn> given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object①⑨\">platform object</a>\n    <var>object</var>, a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack\">stack</a> <var>stack</var>, and an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①⓪\">ordered map</a> <var>map</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>I</var> be the result of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack-pop\" id=\"ref-for-stack-pop\">popping</a> from <var>stack</var>.</p>"
        },
        {
          "html": "<p>Invoke <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#collect-attribute-values\" id=\"ref-for-collect-attribute-values\">collect attribute values</a> given <var>object</var>, <var>I</var>, and <var>map</var>.</p>"
        },
        {
          "html": "<p>If <var>stack</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty①\">is not empty</a>, then invoke\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#collect-attribute-values-of-an-inheritance-stack\" id=\"ref-for-collect-attribute-values-of-an-inheritance-stack①\">collect attribute values of an inheritance stack</a> given <var>object</var>, <var>stack</var>, and <var>map</var>.</p>"
        }
      ]
    },
    {
      "name": "collect attribute values",
      "href": "https://webidl.spec.whatwg.org/#collect-attribute-values",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"collect-attribute-values\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">collect attribute values</dfn> given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object②⓪\">platform object</a> <var>object</var>, an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪④\">interface</a>\n    <var>I</var>, and an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①①\">ordered map</a> <var>map</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If a <code>toJSON</code> operation with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Default\" id=\"ref-for-Default⑧\">Default</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④②\">extended attribute</a> is declared\non <var>I</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①④\">for each</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①③\">exposed</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-regular-attribute\" id=\"ref-for-dfn-regular-attribute②⑨\">regular attribute</a> <var>attr</var> that is an\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-member\" id=\"ref-for-dfn-interface-member②④\">interface member</a> of <var>I</var>, in order:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>id</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧⑥\">identifier</a> of <var>attr</var>.</p>"
            },
            {
              "html": "<p>Let <var>value</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#getter-steps\" id=\"ref-for-getter-steps⑥\">getter steps</a> of <var>attr</var> with <var>object</var> as\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑥\">this</a>.</p>"
            },
            {
              "html": "<p>If <var>value</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-json-types\" id=\"ref-for-dfn-json-types①③\">JSON type</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set③\">set</a> <var>map</var>[<var>id</var>] to <var>value</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "create an inheritance stack",
      "href": "https://webidl.spec.whatwg.org/#create-an-inheritance-stack",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"create-an-inheritance-stack\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an inheritance stack</dfn> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪⑤\">interface</a> <var>I</var>,\n    run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>stack</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack\" id=\"ref-for-stack①\">stack</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack-push\" id=\"ref-for-stack-push\">Push</a> <var>I</var> onto <var>stack</var>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while①\">While</a> <var>I</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherit\" id=\"ref-for-dfn-inherit①④\">inherits</a> from an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪⑥\">interface</a>,",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>I</var> be that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⓪⑦\">interface</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#stack-push\" id=\"ref-for-stack-push①\">Push</a> <var>I</var> onto <var>stack</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>stack</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the toString method of interfaces",
      "html": "The value of the property is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects①⓪\">built-in function object</a>, which behaves as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>thisValue</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>O</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject①\">ToObject</a>(<var>thisValue</var>).</p>"
        },
        {
          "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object⑤\">is a platform object</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check④\">perform a security check</a>, passing:</p>\n        <ul>\n         <li data-md=\"\">\n          <p>the platform object <var>O</var>,</p>\n         </li><li data-md=\"\">\n          <p>the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑧⑦\">identifier</a> of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-stringifier\" id=\"ref-for-dfn-stringifier⑥\">stringifier</a>, and</p>\n         </li><li data-md=\"\">\n          <p>the type \"<code>method</code>\".</p>\n        </li></ul>"
        },
        {
          "html": "<p>If <var>O</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②④\">implement</a> the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②①①\">interface</a>\non which the stringifier was declared, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④④\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>V</var> be an uninitialized variable.</p>"
        },
        {
          "html": "Depending on how <code>stringifier</code> was specified:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "as a declaration",
                  "html": "<p>Set <var>V</var> to the result of performing the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-stringification-behavior\" id=\"ref-for-dfn-stringification-behavior①\">stringification behavior</a>\nof the interface.</p>"
                },
                {
                  "case": "on an attribute",
                  "html": "<p>Set <var>V</var> to the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#getter-steps\" id=\"ref-for-getter-steps⑦\">getter steps</a> of the attribute\n(or those listed in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#getter-steps\" id=\"ref-for-getter-steps⑧\">getter steps</a> of the inherited attribute, if this attribute is declared to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherit-getter\" id=\"ref-for-dfn-inherit-getter①\">inherit its getter</a>),\nwith <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑦\">this</a>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥③\">converting</a> <var>V</var> to a String value.</p>"
        }
      ]
    },
    {
      "name": "define the iteration methods",
      "href": "https://webidl.spec.whatwg.org/#define-the-iteration-methods",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-iteration-methods\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"bs-old-id\" id=\"es-iterable-values\"></span><span class=\"bs-old-id\" id=\"es-iterable-keys\"></span><span class=\"bs-old-id\" id=\"es-iterable-entries\"></span>define the iteration methods</dfn>\n    of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②①②\">interface</a> <var>definition</var> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④①\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>definition</var> has an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-indexed-property-getter\" id=\"ref-for-dfn-indexed-property-getter⑦\">indexed property getter</a>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty\">DefineMethodProperty</a>(<var>target</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②④\">%Symbol.iterator%</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-array.prototype.values\" id=\"ref-for-sec-array.prototype.values\">%Array.prototype.values%</a></code>, false).</p>"
            },
            {
              "html": "If <var>definition</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-value-iterator\" id=\"ref-for-dfn-value-iterator⑥\">value iterator</a>, then:",
              "rationale": "perform",
              "steps": [
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow⑤\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>entries</code>\",\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-array.prototype.entries\" id=\"ref-for-sec-array.prototype.entries\">%Array.prototype.entries%</a></code>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑦⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow⑥\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>keys</code>\",\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-array.prototype.keys\" id=\"ref-for-sec-array.prototype.keys\">%Array.prototype.keys%</a></code>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow⑦\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>values</code>\",\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-array.prototype.values\" id=\"ref-for-sec-array.prototype.values①\">%Array.prototype.values%</a></code>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow⑧\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>forEach</code>\",\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-array.prototype.foreach\" id=\"ref-for-sec-array.prototype.foreach\">%Array.prototype.forEach%</a></code>).</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Otherwise, if <var>definition</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-pair-iterator\" id=\"ref-for-dfn-pair-iterator③\">pair iterator</a>, then:",
          "rationale": "define",
          "steps": [
            {
              "html": "Define the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⑤\">%Symbol.iterator%</a></code> and <code class=\"idl\">entries</code> methods:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>steps</var> be the following series of steps:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject②\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object⑥\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check⑤\">perform a security check</a>,\npassing <var>jsValue</var>, \"<code>%Symbol.iterator%</code>\", and \"<code>method</code>\".</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⑤\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⑤\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⑤\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Return a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-iterator-object\" id=\"ref-for-dfn-default-iterator-object\">default iterator object</a> for <var>definition</var>, with\n<var>jsValue</var> as its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-target\" id=\"ref-for-default-iterator-object-target\">target</a>, \"<code>key+value</code>\"\nas its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-kind\" id=\"ref-for-default-iterator-object-kind\">kind</a>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-index\" id=\"ref-for-default-iterator-object-index\">index</a>\nset to 0.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction⑨\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname⑤\">SetFunctionName</a>(<var>F</var>, \"<code>entries</code>\").</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength⑤\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty①\">DefineMethodProperty</a>(<var>target</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⑥\">%Symbol.iterator%</a></code>, <var>F</var>, false).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow⑨\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>entries</code>\", <var>F</var>).</p>"
                }
              ]
            },
            {
              "html": "Define the <code class=\"idl\">keys</code> method:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>steps</var> be the following series of steps:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject③\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object⑦\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check⑥\">perform a security check</a>,\npassing <var>jsValue</var>, \"<code>keys</code>\", and \"<code>method</code>\".</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⑥\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⑥\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⑥\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Return a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-iterator-object\" id=\"ref-for-dfn-default-iterator-object①\">default iterator object</a> for <var>definition</var>, with\n<var>jsValue</var> as its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-target\" id=\"ref-for-default-iterator-object-target①\">target</a>, \"<code>key</code>\" as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-kind\" id=\"ref-for-default-iterator-object-kind①\">kind</a>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-index\" id=\"ref-for-default-iterator-object-index①\">index</a> set to 0.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⓪\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname⑥\">SetFunctionName</a>(<var>F</var>, \"<code>keys</code>\").</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength⑥\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⓪\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>keys</code>\", <var>F</var>).</p>"
                }
              ]
            },
            {
              "html": "Define the <code class=\"idl\">values</code> method:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>steps</var> be the following series of steps:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject④\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object⑧\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check⑦\">perform a security check</a>,\npassing <var>jsValue</var>, \"<code>values</code>\", and \"<code>method</code>\".</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⑦\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⑦\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⑦\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Return a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-iterator-object\" id=\"ref-for-dfn-default-iterator-object②\">default iterator object</a> for <var>definition</var>, with\n<var>jsValue</var> as its <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-target\" id=\"ref-for-default-iterator-object-target②\">target</a>, \"<code>value</code>\" as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-kind\" id=\"ref-for-default-iterator-object-kind②\">kind</a>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-index\" id=\"ref-for-default-iterator-object-index②\">index</a> set to 0.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①①\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname⑦\">SetFunctionName</a>(<var>F</var>, \"<code>values</code>\").</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength⑦\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①①\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>values</code>\", <var>F</var>).</p>"
                }
              ]
            },
            {
              "html": "Define the <code class=\"idl\">forEach</code> method:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>steps</var> be the following series of steps, given function argument values\n<var>callback</var> and <var>thisArg</var>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject⑤\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object⑨\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check⑧\">perform a security check</a>,\npassing <var>jsValue</var>, \"<code>forEach</code>\", and \"<code>method</code>\".</p>"
                    },
                    {
                      "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⑧\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⑧\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⑧\">TypeError</a></code>.</p>"
                    },
                    {
                      "html": "<p>Let <var>idlCallback</var> be <var>callback</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦④\">converted</a> to a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Function\" id=\"ref-for-Function\">Function</a></code>.</p>"
                    },
                    {
                      "html": "<p>Let <var>idlObject</var> be the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface①⑨\">interface type</a> value that represents a reference\nto <var>jsValue</var>.</p>"
                    },
                    {
                      "html": "<p>Let <var>pairs</var> be <var>idlObject</var>’s list of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-value-pairs-to-iterate-over\" id=\"ref-for-dfn-value-pairs-to-iterate-over①\">value pairs to iterate over</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>i</var> be 0.</p>"
                    },
                    {
                      "html": "While <var>i</var> &lt; <var>pairs</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑨\">size</a>:",
                      "rationale": "let",
                      "steps": [
                        {
                          "html": "<p>Let <var>pair</var> be <var>pairs</var>[<var>i</var>].</p>"
                        },
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-a-callback-function\" id=\"ref-for-invoke-a-callback-function\">Invoke</a> <var>idlCallback</var> with « <var>pair</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-value\" id=\"ref-for-value-pair-value①\">value</a>, <var>pair</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-key\" id=\"ref-for-value-pair-key①\">key</a>, <var>idlObject</var> » and with <var>thisArg</var> as the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-this-value\" id=\"ref-for-dfn-callback-this-value\">callback this value</a>.</p>"
                        },
                        {
                          "html": "<p>Set <var>pairs</var> to <var>idlObject</var>’s current list of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-value-pairs-to-iterate-over\" id=\"ref-for-dfn-value-pairs-to-iterate-over②\">value pairs to iterate over</a>. (It might have changed.)</p>"
                        },
                        {
                          "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①②\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname⑧\">SetFunctionName</a>(<var>F</var>, \"<code>forEach</code>\").</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength⑧\">SetFunctionLength</a>(<var>F</var>, 1).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑧⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①②\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>forEach</code>\", <var>F</var>).</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "iterator result",
      "href": "https://webidl.spec.whatwg.org/#iterator-result",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"iterator-result\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">iterator result</dfn> for a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair\" id=\"ref-for-value-pair⑥\">value pair</a> <var>pair</var> and a kind <var>kind</var> is given by the\n  following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>result</var> be a value determined by the value of <var>kind</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "\"key\"",
                  "html": "",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlKey</var> be <var>pair</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-key\" id=\"ref-for-value-pair-key②\">key</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>key</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥④\">converting</a> <var>idlKey</var> to a JavaScript value.</p>"
                    },
                    {
                      "html": "<p><var>result</var> is <var>key</var>.</p>"
                    }
                  ]
                },
                {
                  "case": "\"value\"",
                  "html": "",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlValue</var> be <var>pair</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-value\" id=\"ref-for-value-pair-value②\">value</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⑤\">converting</a> <var>idlValue</var> to a JavaScript value.</p>"
                    },
                    {
                      "html": "<p><var>result</var> is <var>value</var>.</p>"
                    }
                  ]
                },
                {
                  "case": "\"key+value\"",
                  "html": "",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>idlKey</var> be <var>pair</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-key\" id=\"ref-for-value-pair-key③\">key</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>idlValue</var> be <var>pair</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair-value\" id=\"ref-for-value-pair-value③\">value</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>key</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⑥\">converting</a> <var>idlKey</var> to a JavaScript value.</p>"
                    },
                    {
                      "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⑦\">converting</a> <var>idlValue</var> to a JavaScript value.</p>"
                    },
                    {
                      "html": "<p>Let <var>array</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-arraycreate\" id=\"ref-for-sec-arraycreate\">ArrayCreate</a>(2).</p>"
                    },
                    {
                      "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①③\">CreateDataPropertyOrThrow</a>(<var>array</var>, \"<code>0</code>\", <var>key</var>).</p>"
                    },
                    {
                      "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①④\">CreateDataPropertyOrThrow</a>(<var>array</var>, \"<code>1</code>\", <var>value</var>).</p>"
                    },
                    {
                      "html": "<p><var>result</var> is <var>array</var>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject\">CreateIteratorResultObject</a>(<var>result</var>, <emu-val>false</emu-val>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the next property of iterators",
      "html": "An <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\" id=\"ref-for-dfn-iterator-prototype-object④\">iterator prototype object</a> must have a <code class=\"idl\">next</code> data property with attributes\n    { [[Writable]]: <emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }\n    and whose value is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects①①\">built-in function object</a> that behaves as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>interface</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②①⑧\">interface</a> for which the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\" id=\"ref-for-dfn-iterator-prototype-object⑤\">iterator prototype object</a> exists.</p>"
        },
        {
          "html": "<p>Let <var>thisValue</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>object</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject⑥\">ToObject</a>(<var>thisValue</var>).</p>"
        },
        {
          "html": "<p>If <var>object</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object①⓪\">is a platform object</a>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check⑨\">perform a security check</a>, passing:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>the platform object <var>object</var>,</p>\n       </li><li data-md=\"\">\n        <p>the identifier \"<code>next</code>\", and</p>\n       </li><li data-md=\"\">\n        <p>the type \"<code>method</code>\".</p>\n      </li></ul>"
        },
        {
          "html": "<p>If <var>object</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-iterator-object\" id=\"ref-for-dfn-default-iterator-object⑦\">default iterator object</a> for <var>interface</var>,\nthen <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw④⑨\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror④⑨\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>index</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-index\" id=\"ref-for-default-iterator-object-index③\">index</a>.</p>"
        },
        {
          "html": "<p>Let <var>kind</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-kind\" id=\"ref-for-default-iterator-object-kind③\">kind</a>.</p>"
        },
        {
          "html": "<p>Let <var>values</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-iterator-object-target\" id=\"ref-for-default-iterator-object-target③\">target</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-value-pairs-to-iterate-over\" id=\"ref-for-dfn-value-pairs-to-iterate-over③\">value pairs to iterate over</a>.</p>"
        },
        {
          "html": "<p>Let <var>len</var> be the length of <var>values</var>.</p>"
        },
        {
          "html": "<p>If <var>index</var> is greater than or equal to <var>len</var>, then\nreturn <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject①\">CreateIteratorResultObject</a>(<emu-val>undefined</emu-val>, <emu-val>true</emu-val>).</p>"
        },
        {
          "html": "<p>Let <var>pair</var> be the entry in <var>values</var> at index <var>index</var>.</p>"
        },
        {
          "html": "<p>Set <var>object</var>’s index to <var>index</var> + 1.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#iterator-result\" id=\"ref-for-iterator-result\">iterator result</a> for <var>pair</var> and <var>kind</var>.</p>"
        }
      ]
    },
    {
      "name": "define the asynchronous iteration methods",
      "href": "https://webidl.spec.whatwg.org/#define-the-asynchronous-iteration-methods",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-asynchronous-iteration-methods\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the asynchronous iteration methods</dfn> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②②①\">interface</a> <var>definition</var> on\n    <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④②\">realm</a> <var>realm</var>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>definition</var> does not have an an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration①⑥\">asynchronously iterable declaration</a> (of either\nsort), then return.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>definition</var> does not have an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-indexed-property-getter\" id=\"ref-for-dfn-indexed-property-getter⑧\">indexed property getter</a> or an\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-iterable-declaration\" id=\"ref-for-dfn-iterable-declaration①②\">iterable declaration</a>.</p>"
        },
        {
          "html": "If <var>definition</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#pair-asynchronously-iterable-declaration\" id=\"ref-for-pair-asynchronously-iterable-declaration②\">pair asynchronously iterable declaration</a>, then define the\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⑦\">%Symbol.asyncIterator%</a></code> and <code class=\"idl\">entries</code> methods:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>steps</var> be the following series of steps, given function argument values <var>args</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject⑦\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object①①\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check①⓪\">perform a security check</a>, passing\n<var>jsValue</var>, \"<code>%Symbol.asyncIterator%</code>\", and \"<code>method</code>\".</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements②⑨\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤⓪\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⓪\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>idlObject</var> be the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface②⓪\">interface type</a> value that represents a reference to\n<var>jsValue</var>.</p>"
                },
                {
                  "html": "<p>Let <var>idlArgs</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#converting-arguments-for-an-asynchronous-iterator-method\" id=\"ref-for-converting-arguments-for-an-asynchronous-iterator-method\">converting arguments for an asynchronous iterator method</a> given <var>args</var>.</p>"
                },
                {
                  "html": "<p>Let <var>iterator</var> be a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-asynchronous-iterator-object\" id=\"ref-for-dfn-default-asynchronous-iterator-object\">default asynchronous iterator object</a> for\n<var>definition</var> with <var>idlObject</var> as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-target\" id=\"ref-for-default-asynchronous-iterator-object-target\">target</a>, \"<code>key+value</code>\" as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-kind\" id=\"ref-for-default-asynchronous-iterator-object-kind\">kind</a>, and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished\">is finished</a> set to false.</p>"
                },
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#asynchronous-iterator-initialization-steps\" id=\"ref-for-asynchronous-iterator-initialization-steps②\">asynchronous iterator initialization steps</a> for <var>definition</var> with\n<var>idlObject</var>, <var>iterator</var>, and <var>idlArgs</var>, if any such steps exist.</p>"
                },
                {
                  "html": "<p>Return <var>iterator</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①③\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname⑨\">SetFunctionName</a>(<var>F</var>, \"<code>entries</code>\").</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength⑨\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty②\">DefineMethodProperty</a>(<var>target</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⑧\">%Symbol.asyncIterator%</a></code>, <var>F</var>, false).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⑤\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>entries</code>\", <var>F</var>).</p>"
            }
          ]
        },
        {
          "html": "If <var>definition</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#pair-asynchronously-iterable-declaration\" id=\"ref-for-pair-asynchronously-iterable-declaration③\">pair asynchronously iterable declaration</a>, then define the\n<code class=\"idl\">keys</code> method:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>steps</var> be the following series of steps, given function argument values <var>args</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject⑧\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object①②\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check①①\">perform a security check</a>, passing\n<var>jsValue</var>, \"<code>keys</code>\", and \"<code>method</code>\".</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③⓪\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤①\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤①\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>idlObject</var> be the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface②①\">interface type</a> value that represents a reference to\n<var>jsValue</var>.</p>"
                },
                {
                  "html": "<p>Let <var>idlArgs</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#converting-arguments-for-an-asynchronous-iterator-method\" id=\"ref-for-converting-arguments-for-an-asynchronous-iterator-method①\">converting arguments for an asynchronous iterator method</a> given <var>args</var>.</p>"
                },
                {
                  "html": "<p>Let <var>iterator</var> be a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-asynchronous-iterator-object\" id=\"ref-for-dfn-default-asynchronous-iterator-object①\">default asynchronous iterator object</a> for\n<var>definition</var> with <var>idlObject</var> as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-target\" id=\"ref-for-default-asynchronous-iterator-object-target①\">target</a>, \"<code>key</code>\" as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-kind\" id=\"ref-for-default-asynchronous-iterator-object-kind①\">kind</a>, and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished①\">is finished</a> set to false.</p>"
                },
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#asynchronous-iterator-initialization-steps\" id=\"ref-for-asynchronous-iterator-initialization-steps③\">asynchronous iterator initialization steps</a> for <var>definition</var> with\n<var>idlObject</var>, <var>iterator</var>, and <var>idlArgs</var>, if any such steps exist.</p>"
                },
                {
                  "html": "<p>Return <var>iterator</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①④\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname①⓪\">SetFunctionName</a>(<var>F</var>, \"<code>keys</code>\").</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength①⓪\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⑥\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>keys</code>\", <var>F</var>).</p>"
            }
          ]
        },
        {
          "html": "Define the <code class=\"idl\">values</code>, and possibly <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols②⑨\">%Symbol.asyncIterator%</a></code>, methods:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>steps</var> be the following series of steps, given function argument values <var>args</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>jsValue</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject⑨\">ToObject</a>(<emu-val>this</emu-val> value).</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-a-platform-object\" id=\"ref-for-is-a-platform-object①③\">is a platform object</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-perform-a-security-check\" id=\"ref-for-dfn-perform-a-security-check①②\">perform a security check</a>, passing\n<var>jsValue</var>, \"<code>values</code>\", and \"<code>method</code>\".</p>"
                },
                {
                  "html": "<p>If <var>jsValue</var> does not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③①\">implement</a> <var>definition</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤②\">throw</a> a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤②\">TypeError</a></code>.</p>"
                },
                {
                  "html": "<p>Let <var>idlObject</var> be the IDL <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-interface\" id=\"ref-for-idl-interface②②\">interface type</a> value that represents a reference to\n<var>jsValue</var>.</p>"
                },
                {
                  "html": "<p>Let <var>idlArgs</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#converting-arguments-for-an-asynchronous-iterator-method\" id=\"ref-for-converting-arguments-for-an-asynchronous-iterator-method②\">converting arguments for an asynchronous iterator method</a> given <var>args</var>.</p>"
                },
                {
                  "html": "<p>Let <var>iterator</var> be a newly created <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-asynchronous-iterator-object\" id=\"ref-for-dfn-default-asynchronous-iterator-object②\">default asynchronous iterator object</a> for\n<var>definition</var> with <var>idlObject</var> as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-target\" id=\"ref-for-default-asynchronous-iterator-object-target②\">target</a>, \"<code>value</code>\" as its\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-kind\" id=\"ref-for-default-asynchronous-iterator-object-kind②\">kind</a>, and\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished②\">is finished</a> set to false.</p>"
                },
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#asynchronous-iterator-initialization-steps\" id=\"ref-for-asynchronous-iterator-initialization-steps④\">asynchronous iterator initialization steps</a> for <var>definition</var> with\n<var>idlObject</var>, <var>iterator</var>, and <var>idlArgs</var>, if any such steps exist.</p>"
                },
                {
                  "html": "<p>Return <var>iterator</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⑤\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname①①\">SetFunctionName</a>(<var>F</var>, \"<code>values</code>\").</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength①①\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands⑨⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⑦\">CreateDataPropertyOrThrow</a>(<var>target</var>, \"<code>values</code>\", <var>F</var>).</p>"
            },
            {
              "html": "<p>If <var>definition</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-asynchronously-iterable-declaration\" id=\"ref-for-value-asynchronously-iterable-declaration①\">value asynchronously iterable declaration</a>, then perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⓪\">!</a>\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty③\">DefineMethodProperty</a>(<var>target</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-well-known-symbols\" id=\"ref-for-sec-well-known-symbols③⓪\">%Symbol.asyncIterator%</a></code>, <var>F</var>, false).</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "converting arguments for an asynchronous iterator method",
      "href": "https://webidl.spec.whatwg.org/#converting-arguments-for-an-asynchronous-iterator-method",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"converting arguments for an asynchronous iterator method\" data-noexport=\"\" id=\"converting-arguments-for-an-asynchronous-iterator-method\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert arguments for an asynchronous iterator method</dfn>,\n    given an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②②②\">interface</a> <var>definition</var> that has an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration①⑦\">asynchronously iterable declaration</a> and a\n    <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②①\">list</a> of JavaScript values <var>args</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>idlArgs</var> be an empty list.</p>"
        },
        {
          "html": "<p>Let <var>argCount</var> be the number of arguments of <var>definition</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration①⑧\">asynchronously iterable declaration</a>, or 0 if the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration①⑨\">asynchronously iterable declaration</a>\ndoes not have an argument list.</p>"
        },
        {
          "html": "<p>Let <var>i</var> be 0.</p>"
        },
        {
          "html": "While <var>i</var> &lt; <var>argCount</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>i</var> ≥ <var>args</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⓪\">size</a>, or if <var>args</var>[<var>i</var>] is <emu-val>undefined</emu-val>,\nthen:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If the argument to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration②⓪\">asynchronously iterable declaration</a> at index <var>i</var> is\ndeclared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-optional-argument-default-value\" id=\"ref-for-dfn-optional-argument-default-value①⑥\">default value</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①①\">append</a> that\ndefault value to <var>idlArgs</var>.</p>"
                },
                {
                  "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①②\">append</a> to <var>idlArgs</var> the special value \"missing\".</p>"
                }
              ]
            },
            {
              "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①③\">append</a> to <var>idlArgs</var> the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⑤\">converting</a> <var>args</var>[<var>i</var>] to the IDL type given in the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-async-iterable-declaration\" id=\"ref-for-dfn-async-iterable-declaration②①\">asynchronously iterable declaration</a>’s argument list at index <var>i</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>idlArgs</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the next property of asynchronous iterators",
      "html": "An <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-asynchronous-iterator-prototype-object\" id=\"ref-for-dfn-asynchronous-iterator-prototype-object③\">asynchronous iterator prototype object</a> must have a <code class=\"idl\">next</code> data\n    property with attributes { [[Writable]]: <emu-val>true</emu-val>,\n    [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }\n    and whose value is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects①②\">built-in function object</a> that behaves as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>interface</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②②⑧\">interface</a> for which the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-asynchronous-iterator-prototype-object\" id=\"ref-for-dfn-asynchronous-iterator-prototype-object④\">asynchronous iterator prototype object</a> exists.</p>"
        },
        {
          "html": "<p>Let <var>thisValidationPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability⑤\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor⑦\">%Promise%</a></code>).</p>"
        },
        {
          "html": "<p>Let <var>thisValue</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>object</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type③\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject①⓪\">ToObject</a>(<var>thisValue</var>)).</p>"
        },
        {
          "html": "<p><a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-ifabruptrejectpromise\" id=\"ref-for-sec-ifabruptrejectpromise\">IfAbruptRejectPromise</a>(<var>object</var>, <var>thisValidationPromiseCapability</var>).</p>"
        },
        {
          "html": "If this threw an exception <var>e</var>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call⑧\">Call</a>(<var>thisValidationPromiseCapability</var>.[[Reject]],\n<emu-val>undefined</emu-val>, « <var>e</var> »).</p>"
            },
            {
              "html": "<p>Return <var>thisValidationPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "If <var>object</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-asynchronous-iterator-object\" id=\"ref-for-dfn-default-asynchronous-iterator-object⑦\">default asynchronous iterator object</a> for <var>interface</var>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>error</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤③\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call⑨\">Call</a>(<var>thisValidationPromiseCapability</var>.[[Reject]],\n<emu-val>undefined</emu-val>, « <var>error</var> »).</p>"
            },
            {
              "html": "<p>Return <var>thisValidationPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "Let <var>nextSteps</var> be the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>nextPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability⑥\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor⑧\">%Promise%</a></code>).</p>"
            },
            {
              "html": "If <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished③\">is finished</a> is true, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject②\">CreateIteratorResultObject</a>(<emu-val>undefined</emu-val>,\n<emu-val>true</emu-val>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⓪\">Call</a>(<var>nextPromiseCapability</var>.[[Resolve]],\n<emu-val>undefined</emu-val>, « <var>result</var> »).</p>"
                },
                {
                  "html": "<p>Return <var>nextPromiseCapability</var>.[[Promise]].</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>kind</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-kind\" id=\"ref-for-default-asynchronous-iterator-object-kind③\">kind</a>.</p>"
            },
            {
              "html": "<p>Let <var>nextPromise</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-get-the-next-iteration-result\" id=\"ref-for-dfn-get-the-next-iteration-result①\">getting the next iteration result</a> with <var>object</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-target\" id=\"ref-for-default-asynchronous-iterator-object-target③\">target</a> and <var>object</var>.</p>"
            },
            {
              "html": "Let <var>fulfillSteps</var> be the following steps, given <var>next</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise\">ongoing promise</a> to\nnull.</p>"
                },
                {
                  "html": "If <var>next</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#end-of-iteration\" id=\"ref-for-end-of-iteration③\">end of iteration</a>, then:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished④\">is finished</a> to true.</p>"
                    },
                    {
                      "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject③\">CreateIteratorResultObject</a>(<emu-val>undefined</emu-val>,\n<emu-val>true</emu-val>).</p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise, if <var>interface</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#pair-asynchronously-iterable-declaration\" id=\"ref-for-pair-asynchronously-iterable-declaration④\">pair asynchronously iterable declaration</a>:",
                  "rationale": "assert",
                  "steps": [
                    {
                      "html": "<p class=\"assertion\">Assert: <var>next</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-pair\" id=\"ref-for-value-pair⑦\">value pair</a>.</p>"
                    },
                    {
                      "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#iterator-result\" id=\"ref-for-iterator-result①\">iterator result</a> for <var>next</var> and <var>kind</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise:",
                  "rationale": "assert",
                  "steps": [
                    {
                      "html": "<p class=\"assertion\">Assert: <var>interface</var> has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#value-asynchronously-iterable-declaration\" id=\"ref-for-value-asynchronously-iterable-declaration②\">value asynchronously iterable declaration</a>.</p>"
                    },
                    {
                      "html": "<p class=\"assertion\">Assert: <var>next</var> is a value of the type that appears in the declaration.</p>"
                    },
                    {
                      "html": "<p>Let <var>value</var> be <var>next</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⑧\">converted to a JavaScript value</a>.</p>"
                    },
                    {
                      "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject④\">CreateIteratorResultObject</a>(<var>value</var>, <emu-val>false</emu-val>).</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>onFulfilled</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⑥\">CreateBuiltinFunction</a>(<var>fulfillSteps</var>, « »).</p>"
            },
            {
              "html": "Let <var>rejectSteps</var> be the following steps, given <var>reason</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise①\">ongoing promise</a> to\nnull.</p>"
                },
                {
                  "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished⑤\">is finished</a> to true.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤③\">Throw</a> <var>reason</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>onRejected</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⑦\">CreateBuiltinFunction</a>(<var>rejectSteps</var>, « »).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen②\">PerformPromiseThen</a>(<var>nextPromise</var>, <var>onFulfilled</var>, <var>onRejected</var>,\n<var>nextPromiseCapability</var>).</p>"
            },
            {
              "html": "<p>Return <var>nextPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>ongoingPromise</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise②\">ongoing promise</a>.</p>"
        },
        {
          "html": "If <var>ongoingPromise</var> is not null, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>afterOngoingPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⑥\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability⑦\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor⑨\">%Promise%</a></code>).</p>"
            },
            {
              "html": "<p>Let <var>onSettled</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⑧\">CreateBuiltinFunction</a>(<var>nextSteps</var>, « »).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen③\">PerformPromiseThen</a>(<var>ongoingPromise</var>, <var>onSettled</var>, <var>onSettled</var>,\n<var>afterOngoingPromiseCapability</var>).</p>"
            },
            {
              "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise③\">ongoing promise</a> to\n<var>afterOngoingPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise④\">ongoing promise</a> to the result of\nrunning <var>nextSteps</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise⑤\">ongoing promise</a>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the return property of asynchronous iterators",
      "html": "If an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#asynchronous-iterator-return\" id=\"ref-for-asynchronous-iterator-return\">asynchronous iterator return</a> algorithm is defined for the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②②⑨\">interface</a>, then the\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-asynchronous-iterator-prototype-object\" id=\"ref-for-dfn-asynchronous-iterator-prototype-object⑤\">asynchronous iterator prototype object</a> must have a <code class=\"idl\">return</code> data\n    property with attributes { [[Writable]]: <emu-val>true</emu-val>,\n    [[Enumerable]]: <emu-val>true</emu-val>, [[Configurable]]: <emu-val>true</emu-val> }\n    and whose value is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects①③\">built-in function object</a>, taking one argument <var>value</var>, that behaves as\n    follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>interface</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②③⓪\">interface</a> for which the\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-asynchronous-iterator-prototype-object\" id=\"ref-for-dfn-asynchronous-iterator-prototype-object⑥\">asynchronous iterator prototype object</a> exists.</p>"
        },
        {
          "html": "<p>Let <var>returnPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability⑧\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①⓪\">%Promise%</a></code>).</p>"
        },
        {
          "html": "<p>Let <var>thisValue</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>object</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type④\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toobject\" id=\"ref-for-sec-toobject①①\">ToObject</a>(<var>thisValue</var>)).</p>"
        },
        {
          "html": "<p><a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-ifabruptrejectpromise\" id=\"ref-for-sec-ifabruptrejectpromise①\">IfAbruptRejectPromise</a>(<var>object</var>, <var>returnPromiseCapability</var>).</p>"
        },
        {
          "html": "If this threw an exception <var>e</var>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①①\">Call</a>(<var>returnPromiseCapability</var>.[[Reject]],\n<emu-val>undefined</emu-val>, « <var>e</var> »).</p>"
            },
            {
              "html": "<p>Return <var>returnPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "If <var>object</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-default-asynchronous-iterator-object\" id=\"ref-for-dfn-default-asynchronous-iterator-object⑧\">default asynchronous iterator object</a> for <var>interface</var>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>error</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤④\">TypeError</a></code>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⓪⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①②\">Call</a>(<var>returnPromiseCapability</var>.[[Reject]],\n<emu-val>undefined</emu-val>, « <var>error</var> »).</p>"
            },
            {
              "html": "<p>Return <var>returnPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "Let <var>returnSteps</var> be the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>returnPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability⑨\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①①\">%Promise%</a></code>).</p>"
            },
            {
              "html": "If <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished⑥\">is finished</a> is true, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject⑤\">CreateIteratorResultObject</a>(<var>value</var>, <emu-val>true</emu-val>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①③\">Call</a>(<var>returnPromiseCapability</var>.[[Resolve]],\n<emu-val>undefined</emu-val>, « <var>result</var> »).</p>"
                },
                {
                  "html": "<p>Return <var>returnPromiseCapability</var>.[[Promise]].</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-is-finished\" id=\"ref-for-default-asynchronous-iterator-object-is-finished⑦\">is finished</a> to true.</p>"
            },
            {
              "html": "<p>Return the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#asynchronous-iterator-return\" id=\"ref-for-asynchronous-iterator-return①\">asynchronous iterator return</a> algorithm for\n<var>interface</var>, given <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-target\" id=\"ref-for-default-asynchronous-iterator-object-target④\">target</a>, <var>object</var>,\nand <var>value</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>ongoingPromise</var> be <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise⑥\">ongoing promise</a>.</p>"
        },
        {
          "html": "If <var>ongoingPromise</var> is not null, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>afterOngoingPromiseCapability</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-newpromisecapability\" id=\"ref-for-sec-newpromisecapability①⓪\">NewPromiseCapability</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①②\">%Promise%</a></code>).</p>"
            },
            {
              "html": "<p>Let <var>onSettled</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction①⑨\">CreateBuiltinFunction</a>(<var>returnSteps</var>, « »).</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen④\">PerformPromiseThen</a>(<var>ongoingPromise</var>, <var>onSettled</var>, <var>onSettled</var>,\n<var>afterOngoingPromiseCapability</var>).</p>"
            },
            {
              "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise⑦\">ongoing promise</a> to\n<var>afterOngoingPromiseCapability</var>.[[Promise]].</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise⑧\">ongoing promise</a> to the result of\nrunning <var>returnSteps</var>.</p>"
            }
          ]
        },
        {
          "html": "Let <var>fulfillSteps</var> be the following steps:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject⑥\">CreateIteratorResultObject</a>(<var>value</var>, <emu-val>true</emu-val>).</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>onFulfilled</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⓪\">CreateBuiltinFunction</a>(<var>fulfillSteps</var>, « »).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-performpromisethen\" id=\"ref-for-sec-performpromisethen⑤\">PerformPromiseThen</a>(<var>object</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#default-asynchronous-iterator-object-ongoing-promise\" id=\"ref-for-default-asynchronous-iterator-object-ongoing-promise⑨\">ongoing promise</a>, <var>onFulfilled</var>, <emu-val>undefined</emu-val>, <var>returnPromiseCapability</var>).</p>"
        },
        {
          "html": "<p>Return <var>returnPromiseCapability</var>.[[Promise]].</p>"
        }
      ]
    },
    {
      "name": "to invoke the size method of Maps",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-size-getter\" id=\"ref-for-dfn-map-size-getter\">map size getter</a> is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects①④\">built-in function object</a>\n    whose behavior when invoked is as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object\">implementation-checked</a> against <var>A</var> with identifier \"<code>size</code>\" and type \"<code>getter</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries①\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return <var>map</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-size\" id=\"ref-for-map-size\">size</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑥⑨\">converted to a JavaScript value</a>.</p>"
        }
      ]
    },
    {
      "name": "create a map iterator",
      "href": "https://webidl.spec.whatwg.org/#create-a-map-iterator",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"create-a-map-iterator\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a map iterator</dfn>\n    from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①②\">map</a> <var>map</var>\n    and a <var>kind</var> which is either \"<code>key+value</code>\", \"<code>key</code>\", or \"<code>value</code>\":",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>closure</var> be a new <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-abstract-closure\" id=\"ref-for-sec-abstract-closure\">Abstract Closure</a> with no parameters\nthat captures <var>map</var> and <var>kind</var> and performs the following steps when called:",
          "rationale": "for",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate②\">For each</a> <var>key</var> → <var>value</var> of <var>map</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>key</var> and <var>value</var> to each <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⓪\">converted to a JavaScript value</a>.</p>"
                },
                {
                  "html": "<p>If <var>kind</var> is \"<code>key</code>\", let <var>result</var> be <var>key</var>.</p>"
                },
                {
                  "html": "<p>Else if <var>kind</var> is \"<code>value</code>\", let <var>result</var> be <var>value</var>.</p>"
                },
                {
                  "html": "<p>Else, let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createarrayfromlist\" id=\"ref-for-sec-createarrayfromlist\">CreateArrayFromList</a>(« <var>key</var>, <var>value</var> »).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generatoryield\" id=\"ref-for-sec-generatoryield\">GeneratorYield</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject⑦\">CreateIteratorResultObject</a>(<var>result</var>, <emu-val>false</emu-val>)).</p>"
                }
              ]
            },
            {
              "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-createiteratorfromclosure\" id=\"ref-for-sec-createiteratorfromclosure\">CreateIteratorFromClosure</a>(<var>closure</var>, \"<code>%MapIteratorPrototype%</code>\", <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/keyed-collections.html#sec-%25mapiteratorprototype%25-object\" id=\"ref-for-sec-%25mapiteratorprototype%25-object\">%MapIteratorPrototype%</a></code>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the entries method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①\">implementation-checked</a> against <var>A</var> with identifier \"<code>entries</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries②\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-map-iterator\" id=\"ref-for-create-a-map-iterator\">creating a map iterator</a> from <var>map</var> with kind \"<code>key+value</code>\".</p>"
        }
      ]
    },
    {
      "name": "to invoke the keys method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object②\">implementation-checked</a> against <var>A</var> with identifier \"<code>keys</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries③\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-map-iterator\" id=\"ref-for-create-a-map-iterator①\">creating a map iterator</a> from <var>map</var> with kind \"<code>key</code>\".</p>"
        }
      ]
    },
    {
      "name": "to invoke the values method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object③\">implementation-checked</a> against <var>A</var> with identifier \"<code>values</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries④\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-map-iterator\" id=\"ref-for-create-a-map-iterator②\">creating a map iterator</a> from <var>map</var> with kind \"<code>value</code>\".</p>"
        }
      ]
    },
    {
      "name": "to invoke the forEach method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object④\">implementation-checked</a> against <var>A</var> with identifier \"<code>forEach</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries⑤\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>callbackFn</var> be the first argument passed to the function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable⑦\">IsCallable</a>(<var>callbackFn</var>) is <emu-val>false</emu-val>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤④\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⑤\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>thisArg</var> be the second argument passed to the function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate③\">For each</a> <var>key</var> → <var>value</var> of <var>map</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>jsKey</var> and <var>jsValue</var> be <var>key</var> and <var>value</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦①\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①④\">Call</a>(<var>callbackFn</var>, <var>thisArg</var>, « <var>jsValue</var>, <var>jsKey</var>, <var>O</var> »).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the get method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object⑤\">implementation-checked</a> against <var>A</var> with identifier \"<code>get</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries⑥\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>keyType</var> be the key type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-maplike-declaration\" id=\"ref-for-dfn-maplike-declaration①⓪\">maplike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>keyArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>key</var> be <var>keyArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⑥\">converted to an IDL value</a> of type <var>keyType</var>.</p>"
        },
        {
          "html": "<p>If <var>key</var> is -0, set <var>key</var> to +0.</p>"
        },
        {
          "html": "<p>If <var>map</var>[<var>key</var>] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exists</a>, then return <var>map</var>[<var>key</var>],\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦②\">converted to a JavaScript value</a>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the has method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object⑥\">implementation-checked</a> against <var>A</var> with identifier \"<code>has</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries⑦\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>keyType</var> be the key type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-maplike-declaration\" id=\"ref-for-dfn-maplike-declaration①①\">maplike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>keyArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>key</var> be <var>keyArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⑦\">converted to an IDL value</a> of type <var>keyType</var>.</p>"
        },
        {
          "html": "<p>If <var>key</var> is -0, set <var>key</var> to +0.</p>"
        },
        {
          "html": "<p>If <var>map</var>[<var>key</var>] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exists</a>, then return <emu-val>true</emu-val>;\notherwise return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the set method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object⑦\">implementation-checked</a> against <var>A</var> with identifier \"<code>set</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries⑧\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>keyType</var> be the key type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-maplike-declaration\" id=\"ref-for-dfn-maplike-declaration①②\">maplike declaration</a>, and <var>valueType</var> be the value type.</p>"
        },
        {
          "html": "<p>Let <var>keyArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>key</var> be <var>keyArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⑧\">converted to an IDL value</a> of type <var>keyType</var>.</p>"
        },
        {
          "html": "<p>If <var>key</var> is -0, set <var>key</var> to +0.</p>"
        },
        {
          "html": "<p>Let <var>valueArg</var> be the second argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be <var>valueArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑦⑨\">converted to an IDL value</a> of type <var>valueType</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set④\">Set</a> <var>map</var>[<var>key</var>] to <var>value</var>.</p>"
        },
        {
          "html": "<p>Return <var>O</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the delete method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object⑧\">implementation-checked</a> against <var>A</var> with identifier \"<code>delete</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries⑨\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>keyType</var> be the key type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-maplike-declaration\" id=\"ref-for-dfn-maplike-declaration①③\">maplike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>keyArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>key</var> be <var>keyArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⓪\">converted to an IDL value</a> of type <var>keyType</var>.</p>"
        },
        {
          "html": "<p>If <var>key</var> is -0, set <var>key</var> to +0.</p>"
        },
        {
          "html": "<p>Let <var>retVal</var> be <emu-val>true</emu-val> if <var>map</var>[<var>key</var>] exists,\nor else <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-remove\" id=\"ref-for-map-remove\">Remove</a> <var>map</var>[<var>key</var>].</p>"
        },
        {
          "html": "<p>Return <var>retVal</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the clear method of Maps",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object⑨\">implementation-checked</a> against <var>A</var> with identifier \"<code>clear</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>map</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-map-entries\" id=\"ref-for-dfn-map-entries①⓪\">map entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-clear\" id=\"ref-for-map-clear\">Clear</a> <var>map</var>.</p>"
        },
        {
          "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the size method of Sets",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-size-getter\" id=\"ref-for-dfn-set-size-getter\">set size getter</a> is a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-built-in-function-objects\" id=\"ref-for-sec-built-in-function-objects②④\">built-in function object</a>\n    whose behavior when invoked is as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①⓪\">implementation-checked</a> against <var>A</var> with identifier \"<code>size</code>\" and type \"<code>getter</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries①\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return <var>set</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①①\">size</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦③\">converted to a JavaScript value</a>.</p>"
        }
      ]
    },
    {
      "name": "create a set iterator",
      "href": "https://webidl.spec.whatwg.org/#create-a-set-iterator",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"create-a-set-iterator\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a set iterator</dfn>\n    from a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set⑦\">set</a> <var>set</var>\n    and a <var>kind</var> which is either \"<code>key+value</code>\" or \"<code>value</code>\":",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>closure</var> be a new <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-abstract-closure\" id=\"ref-for-sec-abstract-closure①\">Abstract Closure</a> with no parameters\nthat captures <var>set</var> and <var>kind</var> and performs the following steps when called:",
          "rationale": "for",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑤\">For each</a> <var>entry</var> of <var>set</var>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>entry</var> to be <var>entry</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦④\">converted to a JavaScript value</a>.</p>"
                },
                {
                  "html": "<p>If <var>kind</var> is \"<code>value</code>\", let <var>result</var> be <var>entry</var>.</p>"
                },
                {
                  "html": "<p>Else, let <var>result</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createarrayfromlist\" id=\"ref-for-sec-createarrayfromlist①\">CreateArrayFromList</a>(« <var>entry</var>, <var>entry</var> »).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generatoryield\" id=\"ref-for-sec-generatoryield①\">GeneratorYield</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createiterresultobject\" id=\"ref-for-sec-createiterresultobject⑧\">CreateIteratorResultObject</a>(<var>result</var>, <emu-val>false</emu-val>)).</p>"
                }
              ]
            },
            {
              "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-createiteratorfromclosure\" id=\"ref-for-sec-createiteratorfromclosure①\">CreateIteratorFromClosure</a>(<var>closure</var>, \"<code>%SetIteratorPrototype%</code>\", <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/keyed-collections.html#sec-%25setiteratorprototype%25-object\" id=\"ref-for-sec-%25setiteratorprototype%25-object\">%SetIteratorPrototype%</a></code>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the entries method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①①\">implementation-checked</a> against <var>A</var> with identifier \"<code>entries</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries②\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-set-iterator\" id=\"ref-for-create-a-set-iterator\">creating a set iterator</a> from <var>set</var> with kind \"<code>key+value</code>\".</p>"
        }
      ]
    },
    {
      "name": "to invoke the values method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①②\">implementation-checked</a> against <var>A</var> with identifier \"<code>values</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries③\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-set-iterator\" id=\"ref-for-create-a-set-iterator①\">creating a set iterator</a> from <var>set</var> with kind \"<code>value</code>\".</p>"
        }
      ]
    },
    {
      "name": "to invoke the forEach method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①③\">implementation-checked</a> against <var>A</var> with identifier \"<code>forEach</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries④\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>callbackFn</var> be the first argument passed to the function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable⑧\">IsCallable</a>(<var>callbackFn</var>) is <emu-val>false</emu-val>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⑥\">TypeError</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>thisArg</var> be the second argument passed to the function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate④\">For each</a> <var>value</var> of <var>set</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>jsValue</var> be <var>value</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⑤\">converted to a JavaScript value</a>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⑤\">Call</a>(<var>callbackFn</var>, <var>thisArg</var>, « <var>jsValue</var>, <var>jsValue</var>, <var>O</var>»).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the has method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①④\">implementation-checked</a> against <var>A</var> with identifier \"<code>has</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries⑤\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>valueType</var> be the value type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-setlike-declaration\" id=\"ref-for-dfn-setlike-declaration①⓪\">setlike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>valueArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be <var>valueArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧①\">converted to an IDL value</a> of type <var>valueType</var>.</p>"
        },
        {
          "html": "<p>If <var>value</var> is -0, set <var>value</var> to +0.</p>"
        },
        {
          "html": "<p>If <var>set</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain\">contains</a> <var>value</var>, then return <emu-val>true</emu-val>,\notherwise return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the add method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①⑤\">implementation-checked</a> against <var>A</var> with identifier \"<code>add</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries⑥\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p>Let <var>valueType</var> be the value type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-setlike-declaration\" id=\"ref-for-dfn-setlike-declaration①①\">setlike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>valueArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be <var>valueArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧②\">converted to an IDL value</a> of type <var>valueType</var>.</p>"
        },
        {
          "html": "<p>If <var>value</var> is -0, set <var>value</var> to +0.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑧\">Append</a> <var>value</var> to <var>set</var>.</p>"
        },
        {
          "html": "<p>Return <var>O</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the delete method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①⑥\">implementation-checked</a> against <var>A</var> with identifier \"<code>delete</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be <var>O</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries⑦\">set entries</a>.</p>"
        },
        {
          "html": "<p>Let <var>valueType</var> be the value type specified in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-setlike-declaration\" id=\"ref-for-dfn-setlike-declaration①②\">setlike declaration</a>.</p>"
        },
        {
          "html": "<p>Let <var>valueArg</var> be the first argument passed to this function, or <emu-val>undefined</emu-val> if not supplied.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be <var>valueArg</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧③\">converted to an IDL value</a> of type <var>valueType</var>.</p>"
        },
        {
          "html": "<p>If <var>value</var> is -0, set <var>value</var> to +0.</p>"
        },
        {
          "html": "<p>Let <var>retVal</var> be <emu-val>true</emu-val> if <var>set</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain①\">contains</a> <var>value</var>, or else <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove②\">Remove</a> <var>value</var> from <var>set</var>.</p>"
        },
        {
          "html": "<p>Return <var>retVal</var>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the clear method of Sets",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the <emu-val>this</emu-val> value, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implementation-check-an-object\" id=\"ref-for-implementation-check-an-object①⑦\">implementation-checked</a> against <var>A</var> with identifier \"<code>clear</code>\" and type \"<code>method</code>\".</p>"
        },
        {
          "html": "<p>Let <var>set</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-entries\" id=\"ref-for-dfn-set-entries⑧\">set entries</a> of the IDL value\nthat represents a reference to <var>O</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty\">Empty</a> <var>set</var>.</p>"
        },
        {
          "html": "<p>Return <emu-val>undefined</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "new",
      "href": "https://webidl.spec.whatwg.org/#new",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"new\" id=\"new\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a new object implementing the interface</dfn> <var>interface</var>, with a\n  <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④④\">realm</a> <var>realm</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#internally-create-a-new-object-implementing-the-interface\" id=\"ref-for-internally-create-a-new-object-implementing-the-interface②\">internally creating a new object implementing</a> <var>interface</var>, with <var>realm</var> and\n<emu-val>undefined</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "internally create a new object implementing the interface",
      "href": "https://webidl.spec.whatwg.org/#internally-create-a-new-object-implementing-the-interface",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"internally-create-a-new-object-implementing-the-interface\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">internally create a new object implementing the interface</dfn> <var>interface</var>, with a\n  <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④⑤\">realm</a> <var>realm</var> and a JavaScript value <var>newTarget</var>, perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>interface</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①⑤\">exposed</a> in <var>realm</var>.</p>"
        },
        {
          "html": "If <var>newTarget</var> is <emu-val>undefined</emu-val>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>prototype</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object④④\">interface prototype object</a> for <var>interface</var> in\n<var>realm</var>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p class=\"assertion\">Assert: <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable⑨\">IsCallable</a>(<var>newTarget</var>) is true.</p>"
            },
            {
              "html": "<p>Let <var>prototype</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-get-o-p\" id=\"ref-for-sec-get-o-p③\">Get</a>(<var>newTarget</var>, \"prototype\").</p>"
            },
            {
              "html": "If <var>prototype</var> <a data-link-type=\"dfn\" data-refhint-key=\"df9c128d\" href=\"https://tc39.es/ecma262/#sec-object-type\" id=\"ref-for-sec-object-type②⑧\">is not an Object</a>, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>targetRealm</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⑧\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-getfunctionrealm\" id=\"ref-for-sec-getfunctionrealm\">GetFunctionRealm</a>(<var>newTarget</var>).</p>"
                },
                {
                  "html": "<p>Set <var>prototype</var> to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-prototype-object\" id=\"ref-for-dfn-interface-prototype-object④⑤\">interface prototype object</a> for <var>interface</var> in\n<var>targetRealm</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>slots</var> be « [[Prototype]], [[Extensible]], [[Realm]], [[PrimaryInterface]] ».</p>"
        },
        {
          "html": "<p>If <var>interface</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑤\">DOMException</a></code>, append [[ErrorData]] to <var>slots</var>.</p>"
        },
        {
          "html": "<p>Let <var>instance</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-makebasicobject\" id=\"ref-for-sec-makebasicobject②\">MakeBasicObject</a>(<var>slots</var>).</p>"
        },
        {
          "html": "<p>Set <var>instance</var>.[[Realm]] to <var>realm</var>.</p>"
        },
        {
          "html": "<p>Set <var>instance</var>.[[PrimaryInterface]] to <var>interface</var>.</p>"
        },
        {
          "html": "<p>Set <var>instance</var>.[[Prototype]] to <var>prototype</var>.</p>"
        },
        {
          "html": "<p>Let <var>interfaces</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#interface-inclusive-inherited-interfaces\" id=\"ref-for-interface-inclusive-inherited-interfaces①\">inclusive inherited interfaces</a> of <var>interface</var>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑥\">For every</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②③⑥\">interface</a> <var>ancestor interface</var> in <var>interfaces</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>unforgeables</var> be the value of the [[Unforgeables]] slot of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface-object\" id=\"ref-for-dfn-interface-object②③\">interface object</a> of <var>ancestor interface</var> in <var>realm</var>.</p>"
            },
            {
              "html": "<p>Let <var>keys</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①①⑨\">!</a> <var>unforgeables</var>.[[OwnPropertyKeys]]().</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②②\">For each</a> element <var>key</var> of <var>keys</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>descriptor</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⓪\">!</a> <var>unforgeables</var>.[[GetOwnProperty]](<var>key</var>).</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-definepropertyorthrow\" id=\"ref-for-sec-definepropertyorthrow⑦\">DefinePropertyOrThrow</a>(<var>instance</var>, <var>key</var>, <var>descriptor</var>).</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "If <var>interface</var> is declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global②③\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④⑤\">extended attribute</a>, then:",
          "rationale": "define",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-operations\" id=\"ref-for-define-the-regular-operations①\">Define the regular operations</a> of <var>interface</var> on <var>instance</var>, given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-attributes\" id=\"ref-for-define-the-regular-attributes①\">Define the regular attributes</a> of <var>interface</var> on <var>instance</var>, given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-iteration-methods\" id=\"ref-for-define-the-iteration-methods①\">Define the iteration methods</a> of <var>interface</var> on <var>instance</var> given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-asynchronous-iteration-methods\" id=\"ref-for-define-the-asynchronous-iteration-methods①\">Define the asynchronous iteration methods</a> of <var>interface</var> on <var>instance</var> given <var>realm</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-global-property-references\" id=\"ref-for-define-the-global-property-references\">Define the global property references</a> on <var>instance</var>, given <var>realm</var>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[SetPrototypeOf]] as defined in <a href=\"https://webidl.spec.whatwg.org/#platform-object-setprototypeof\">§ 3.8.1 [[SetPrototypeOf]]</a>.</p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>interfaces</var> contains an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②③⑦\">interface</a> which\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-indexed-properties\" id=\"ref-for-dfn-support-indexed-properties①⓪\">supports indexed properties</a>,\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties⑥\">named properties</a>, or both:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>instance</var>.[[GetOwnProperty]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-getownproperty\" id=\"ref-for-legacy-platform-object-getownproperty①\">§ 3.9.1 [[GetOwnProperty]]</a>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[Set]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-set\">§ 3.9.2 [[Set]]</a>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[DefineOwnProperty]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-defineownproperty\">§ 3.9.3 [[DefineOwnProperty]]</a>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[Delete]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-delete\">§ 3.9.4 [[Delete]]</a>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[PreventExtensions]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-preventextensions\">§ 3.9.5 [[PreventExtensions]]</a>.</p>"
            },
            {
              "html": "<p>Set <var>instance</var>.[[OwnPropertyKeys]] as defined in\n<a href=\"https://webidl.spec.whatwg.org/#legacy-platform-object-ownpropertykeys\">§ 3.9.6 [[OwnPropertyKeys]]</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>instance</var>.</p>"
        }
      ]
    },
    {
      "name": "define the global property references",
      "href": "https://webidl.spec.whatwg.org/#define-the-global-property-references",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"define-the-global-property-references\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">define the global property references</dfn> on <var>target</var>, given <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm④⑥\">realm</a> <var>realm</var>,\n  perform the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>interfaces</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②③\">list</a> that contains every <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②③⑧\">interface</a> that is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①⑥\">exposed</a> in\n<var>realm</var>.</p>"
        },
        {
          "html": "<p>Sort <var>interfaces</var> in such a way that if <var>A</var> and <var>B</var> are <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-item\" id=\"ref-for-list-item⑥\">items</a> of <var>interfaces</var>,\nand <var>A</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-inherit\" id=\"ref-for-dfn-inherit①⑤\">inherits</a> from <var>B</var>, <var>A</var> has a higher index in <var>interfaces</var> than <var>B</var>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑦\">For every</a> <var>interface</var> of <var>interfaces</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>interface</var> is not declared with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNoInterfaceObject\" id=\"ref-for-LegacyNoInterfaceObject①③\">LegacyNoInterfaceObject</a></code>] or\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNamespace\" id=\"ref-for-LegacyNamespace⑧\">LegacyNamespace</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④⑥\">extended attributes</a>, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>id</var> be <var>interface</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨⓪\">identifier</a>.</p>"
                },
                {
                  "html": "<p>Let <var>interfaceObject</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-an-interface-object\" id=\"ref-for-create-an-interface-object\">creating\nan interface object</a> for <var>interface</var> with <var>id</var> in <var>realm</var>.</p>"
                },
                {
                  "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty④\">DefineMethodProperty</a>(<var>target</var>, <var>id</var>, <var>interfaceObject</var>, false).</p>"
                },
                {
                  "html": "If the <var>interface</var> is declared with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyWindowAlias\" id=\"ref-for-LegacyWindowAlias①④\">LegacyWindowAlias</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④⑦\">extended attribute</a>,\nand <var>target</var> implements the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑥\">Window</a></code> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②③⑨\">interface</a>, then:",
                  "rationale": "for",
                  "steps": [
                    {
                      "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑧\">For every</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#legacywindowalias-identifier\" id=\"ref-for-legacywindowalias-identifier⑤\">identifier</a> <var>id</var> in\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyWindowAlias\" id=\"ref-for-LegacyWindowAlias①⑤\">LegacyWindowAlias</a></code>]'s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#legacywindowalias-identifier\" id=\"ref-for-legacywindowalias-identifier⑥\">identifiers</a>:",
                      "rationale": "perform",
                      "steps": [
                        {
                          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty⑤\">DefineMethodProperty</a>(<var>target</var>, <var>id</var>, <var>interfaceObject</var>, false).</p>"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "html": "If the <var>interface</var> is declared with a [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyFactoryFunction\" id=\"ref-for-LegacyFactoryFunction①⑨\">LegacyFactoryFunction</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①④⑧\">extended attribute</a>,\nthen:",
              "rationale": "for",
              "steps": [
                {
                  "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑨\">For every</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#legacyfactoryfunction-identifier\" id=\"ref-for-legacyfactoryfunction-identifier⑤\">identifier</a> <var>id</var> in\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyFactoryFunction\" id=\"ref-for-LegacyFactoryFunction②⓪\">LegacyFactoryFunction</a></code>]'s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#legacyfactoryfunction-identifier\" id=\"ref-for-legacyfactoryfunction-identifier⑥\">identifiers</a>:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>legacyFactoryFunction</var> be the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-legacy-factory-function\" id=\"ref-for-create-a-legacy-factory-function\">creating a legacy factory function</a> with\n<var>id</var> for <var>interface</var> in <var>realm</var>.</p>"
                    },
                    {
                      "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty⑥\">DefineMethodProperty</a>(<var>target</var>, <var>id</var>, <var>legacyFactoryFunction</var>, false).</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⓪\">For every</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface③⑦\">callback interface</a> <var>interface</var> that is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①⑦\">exposed</a> in\n<var>realm</var> and on which <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-constant\" id=\"ref-for-dfn-constant④①\">constants</a> are defined:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>id</var> be <var>interface</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨①\">identifier</a>.</p>"
            },
            {
              "html": "<p>Let <var>interfaceObject</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-legacy-callback-interface-object\" id=\"ref-for-create-a-legacy-callback-interface-object\">creating a legacy callback interface object</a> for <var>interface</var> with <var>id</var> in <var>realm</var>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty⑦\">DefineMethodProperty</a>(<var>target</var>, <var>id</var>, <var>interfaceObject</var>, false).</p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②①\">For every</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace⑤①\">namespace</a> <var>namespace</var> that is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed①⑧\">exposed</a> in\n<var>realm</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>id</var> be <var>namespace</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨②\">identifier</a>.</p>"
            },
            {
              "html": "<p>Let <var>namespaceObject</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-a-namespace-object\" id=\"ref-for-create-a-namespace-object\">creating a namespace object</a> for <var>namespace</var> in <var>realm</var>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty⑧\">DefineMethodProperty</a>(<var>target</var>, <var>id</var>, <var>namespaceObject</var>, false).</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "to invoke the internal [[SetPrototypeOf]] method of a platform object that implements an interface with [Global] extended attribute",
      "html": "When the [[SetPrototypeOf]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object③⓪\">platform object</a> <var>O</var> that implements an\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②④⑤\">interface</a> with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global②⑤\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤⓪\">extended attribute</a> is called with\n    JavaScript language value <var>V</var>, the following step is taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>O</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm①\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#realm-is-global-prototype-chain-mutable\" id=\"ref-for-realm-is-global-prototype-chain-mutable②\">is global prototype chain mutable</a> is true,\nreturn <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②②\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarysetprototypeof\" id=\"ref-for-sec-ordinarysetprototypeof①\">OrdinarySetPrototypeOf</a>(<var>O</var>, <var>V</var>).</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②③\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-set-immutable-prototype\" id=\"ref-for-sec-set-immutable-prototype①\">SetImmutablePrototype</a>(<var>O</var>, <var>V</var>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[GetOwnProperty]] internal method of legacy platform objects",
      "html": "The [[GetOwnProperty]] internal method of every <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object⑤\">legacy platform object</a> <var>O</var>\n    must behave as follows when called with property name <var>P</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②④\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#LegacyPlatformObjectGetOwnProperty\" id=\"ref-for-LegacyPlatformObjectGetOwnProperty\">LegacyPlatformObjectGetOwnProperty</a>(<var>O</var>, <var>P</var>, <emu-val>false</emu-val>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[Set]] internal method of legacy platform objects",
      "html": "The [[Set]] internal method of every <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object⑥\">legacy platform object</a> <var>O</var>\n    must behave as follows when called with\n    property name <var>P</var>, value <var>V</var>, and JavaScript language value <var>Receiver</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>O</var> and <var>Receiver</var> are the same object, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③⑥\">implements</a> an interface with an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-indexed-property-setter\" id=\"ref-for-dfn-indexed-property-setter④\">indexed property setter</a>\nand <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index\">is an array index</a>, then:",
              "rationale": "invoke",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-indexed-setter\" id=\"ref-for-invoke-indexed-setter\">Invoke the indexed property setter</a> on <var>O</var> with <var>P</var> and <var>V</var>.</p>"
                },
                {
                  "html": "<p>Return <emu-val>true</emu-val>.</p>"
                }
              ]
            },
            {
              "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③⑦\">implements</a> an interface with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-setter\" id=\"ref-for-dfn-named-property-setter③\">named property setter</a>\nand <var>P</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type③\">is a String</a>, then:",
              "rationale": "invoke",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-named-setter\" id=\"ref-for-invoke-named-setter\">Invoke the named property setter</a> on <var>O</var> with <var>P</var> and <var>V</var>.</p>"
                },
                {
                  "html": "<p>Return <emu-val>true</emu-val>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>ownDesc</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⑤\">?</a> <a data-link-type=\"abstract-op\" href=\"https://webidl.spec.whatwg.org/#LegacyPlatformObjectGetOwnProperty\" id=\"ref-for-LegacyPlatformObjectGetOwnProperty①\">LegacyPlatformObjectGetOwnProperty</a>(<var>O</var>, <var>P</var>, <emu-val>true</emu-val>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarysetwithowndescriptor\" id=\"ref-for-sec-ordinarysetwithowndescriptor\">OrdinarySetWithOwnDescriptor</a>(<var>O</var>, <var>P</var>, <var>V</var>, <var>Receiver</var>, <var>ownDesc</var>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[DefineOwnProperty]] internal method of legacy platform objects",
      "html": "When the [[DefineOwnProperty]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object⑦\">legacy platform object</a> <var>O</var>\n    is called with property key <var>P</var> and <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-property-descriptor-specification-type\" id=\"ref-for-sec-property-descriptor-specification-type①\">Property Descriptor</a> <var>Desc</var>,\n    the following steps must be taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-indexed-properties\" id=\"ref-for-dfn-support-indexed-properties①①\">supports indexed properties</a> and\n<var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index①\">is an array index</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the result of calling <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-isdatadescriptor\" id=\"ref-for-sec-isdatadescriptor\">IsDataDescriptor</a>(<var>Desc</var>) is\n<emu-val>false</emu-val>, then return\n<emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>O</var> does not implement an interface with an\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-indexed-property-setter\" id=\"ref-for-dfn-indexed-property-setter⑤\">indexed property setter</a>, then return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-indexed-setter\" id=\"ref-for-invoke-indexed-setter①\">Invoke the indexed property setter</a> on <var>O</var> with <var>P</var> and <var>Desc</var>.[[Value]].</p>"
            },
            {
              "html": "<p>Return <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties⑦\">supports named properties</a>,\n<var>O</var> does not implement an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②④⑦\">interface</a> with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global②⑥\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤①\">extended attribute</a>,\n<var>P</var> <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type④\">is a String</a>,\nand <var>P</var> is not an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-unforgeable-property-name\" id=\"ref-for-dfn-unforgeable-property-name\">unforgeable property name</a>\nof <var>O</var>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>creating</var> be true if <var>P</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names③\">supported property name</a>, and false otherwise.</p>"
            },
            {
              "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③⑧\">implements</a> an interface with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyOverrideBuiltIns\" id=\"ref-for-LegacyOverrideBuiltIns⑧\">LegacyOverrideBuiltIns</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤②\">extended attribute</a> or <var>O</var> does not have an own property\nnamed <var>P</var>, then:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>creating</var> is false and <var>O</var> does not implement an\ninterface with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-setter\" id=\"ref-for-dfn-named-property-setter④\">named property setter</a>, then return <emu-val>false</emu-val>.</p>"
                },
                {
                  "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③⑨\">implements</a> an interface with a\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-setter\" id=\"ref-for-dfn-named-property-setter⑤\">named property setter</a>, then:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If the result of calling <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-isdatadescriptor\" id=\"ref-for-sec-isdatadescriptor①\">IsDataDescriptor</a>(<var>Desc</var>) is\n<emu-val>false</emu-val>, then return\n<emu-val>false</emu-val>.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-named-setter\" id=\"ref-for-invoke-named-setter①\">Invoke the named property setter</a> on <var>O</var> with <var>P</var> and <var>Desc</var>.[[Value]].</p>"
                    },
                    {
                      "html": "<p>Return <emu-val>true</emu-val>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarydefineownproperty\" id=\"ref-for-sec-ordinarydefineownproperty\">OrdinaryDefineOwnProperty</a>(<var>O</var>, <var>P</var>, <var>Desc</var>).</p>"
        }
      ]
    },
    {
      "name": "to invoke the [[Delete]] internal method of legacy platform objects",
      "html": "The [[Delete]] internal method of every <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object⑧\">legacy platform object</a> <var>O</var>\n    must behave as follows when called with property name <var>P</var>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-indexed-properties\" id=\"ref-for-dfn-support-indexed-properties①②\">supports indexed properties</a> and\n<var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index②\">is an array index</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>index</var> be the result of calling <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32②\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "<p>If <var>index</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-indices\" id=\"ref-for-dfn-supported-property-indices④\">supported property index</a>, then return <emu-val>true</emu-val>.</p>"
            },
            {
              "html": "<p>Return <emu-val>false</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties⑧\">supports named properties</a>,\n<var>O</var> does not implement an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②④⑧\">interface</a> with the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#Global\" id=\"ref-for-Global②⑦\">Global</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤③\">extended attribute</a>\nand the result of calling the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-visibility\" id=\"ref-for-dfn-named-property-visibility①\">named property visibility algorithm</a>\nwith property name <var>P</var> and object <var>O</var> is true, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>O</var> does not implement an interface with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-deleter\" id=\"ref-for-dfn-named-property-deleter④\">named property deleter</a>, then return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>Let <var>operation</var> be the operation used to declare the named property deleter.</p>"
            },
            {
              "html": "If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨③\">identifier</a>, then:",
              "rationale": "perform",
              "steps": [
                {
                  "html": "<p>Perform the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-delete-an-existing-named-property\" id=\"ref-for-dfn-delete-an-existing-named-property\">delete an existing named property</a>\nwith <var>P</var> as the name.</p>"
                },
                {
                  "html": "<p>If the steps indicated that the deletion failed, then return <emu-val>false</emu-val>.</p>"
                }
              ]
            },
            {
              "html": "Otherwise, <var>operation</var> was defined with an identifier:",
              "rationale": "perform",
              "steps": [
                {
                  "html": "<p>Perform <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps⑧\">method steps</a> of <var>operation</var> with <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑨\">this</a> and « <var>P</var> » as the\nargument values.</p>"
                },
                {
                  "html": "<p>If <var>operation</var> was declared with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-return-type\" id=\"ref-for-dfn-return-type⑦\">return type</a> of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-boolean\" id=\"ref-for-idl-boolean②②\">boolean</a></code>\nand the steps returned <emu-val>false</emu-val>, then return <emu-val>false</emu-val>.</p>"
                }
              ]
            },
            {
              "html": "<p>Return <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "If <var>O</var> has an own property with name <var>P</var>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the property is not configurable, then return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>Otherwise, remove the property from <var>O</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <emu-val>true</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the internal [[PreventExtensions]] method of legacy platform objects",
      "html": "When the [[PreventExtensions]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object⑨\">legacy platform object</a> is called,\n    the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "to invoke the internal [[OwnPropertyKeys]] method of legacy platform objects",
      "html": "When the [[OwnPropertyKeys]] internal method of a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-platform-object\" id=\"ref-for-dfn-legacy-platform-object①②\">legacy platform object</a> <var>O</var> is called,\n    the following steps are taken:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>keys</var> be a new empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②④\">list</a> of JavaScript String and Symbol values.</p>"
        },
        {
          "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-indexed-properties\" id=\"ref-for-dfn-support-indexed-properties①③\">supports indexed properties</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑤\">for each</a> <var>index</var> of <var>O</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-indices\" id=\"ref-for-dfn-supported-property-indices⑤\">supported property indices</a>, in ascending numerical order, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑥\">append</a> <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①②⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring⑦\">ToString</a>(<var>index</var>) to\n<var>keys</var>.</p>"
        },
        {
          "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties⑨\">supports named properties</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑦\">for each</a> <var>P</var> of <var>O</var>’s\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names④\">supported property names</a> that is visible according to the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-visibility\" id=\"ref-for-dfn-named-property-visibility②\">named property visibility algorithm</a>,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑧\">append</a> <var>P</var> to <var>keys</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②⑨\">For each</a> <var>P</var> of <var>O</var>’s own property keys that is a String, in ascending chronological order of\nproperty creation, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⓪\">append</a> <var>P</var> to <var>keys</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③①\">For each</a> <var>P</var> of <var>O</var>’s own property keys that is a Symbol, in ascending chronological order of\nproperty creation, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③②\">append</a> <var>P</var> to <var>keys</var>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>keys</var> has no duplicate items.</p>"
        },
        {
          "html": "<p>Return <var>keys</var>.</p>"
        }
      ]
    },
    {
      "name": "to determine if a property name is an array index",
      "href": "https://webidl.spec.whatwg.org/#is-an-array-index",
      "html": "To determine if a property name <var>P</var> <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"is an array index|is not an array index\" data-noexport=\"\" id=\"is-an-array-index\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"bs-old-id\" id=\"dfn-array-index-property-name\"></span>is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#array-index\" id=\"ref-for-array-index①\">array index</a></dfn>, the following algorithm is\n    applied:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>P</var> <a data-link-type=\"dfn\" data-refhint-key=\"da7b0a98\" href=\"https://tc39.es/ecma262/#sec-ecmascript-language-types-string-type\" id=\"ref-for-sec-ecmascript-language-types-string-type⑤\">is not a String</a>, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>index</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-canonicalnumericindexstring\" id=\"ref-for-sec-canonicalnumericindexstring\">CanonicalNumericIndexString</a>(<var>P</var>).</p>"
        },
        {
          "html": "<p>If <var>index</var> is <emu-val>undefined</emu-val>, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/#sec-isinteger\" id=\"ref-for-sec-isinteger\">IsInteger</a>(<var>index</var>) is <emu-val>false</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>If <var>index</var> is −0, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>If <var>index</var> &lt; 0, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>If <var>index</var> ≥ 2<sup>32</sup> − 1, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>Return <emu-val>true</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "named property visibility algorithm",
      "href": "https://webidl.spec.whatwg.org/#dfn-named-property-visibility",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-named-property-visibility\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">named property visibility algorithm</dfn>\n    is used to determine if a given named property is exposed on an object.\n    Some named properties are not exposed on an object depending on whether\n    the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyOverrideBuiltIns\" id=\"ref-for-LegacyOverrideBuiltIns⑨\">LegacyOverrideBuiltIns</a></code>] <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤④\">extended attribute</a> was used.\n    The algorithm operates as follows, with property name <var>P</var> and object <var>O</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>P</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names⑤\">supported property name</a> of <var>O</var>, then return false.</p>"
        },
        {
          "html": "<p>If <var>O</var> has an own property named <var>P</var>, then return false.</p>"
        },
        {
          "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④⓪\">implements</a> an interface that has the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyOverrideBuiltIns\" id=\"ref-for-LegacyOverrideBuiltIns①⓪\">LegacyOverrideBuiltIns</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤⑤\">extended attribute</a>, then return true.</p>"
        },
        {
          "html": "<p>Let <var>prototype</var> be <var>O</var>.[[GetPrototypeOf]]().</p>"
        },
        {
          "html": "While <var>prototype</var> is not null:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>prototype</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-properties-object\" id=\"ref-for-dfn-named-properties-object①②\">named properties object</a>,\nand <var>prototype</var> has an own property named <var>P</var>, then return false.</p>"
            },
            {
              "html": "<p>Set <var>prototype</var> to <var>prototype</var>.[[GetPrototypeOf]]().</p>"
            }
          ]
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "invoke the indexed property setter",
      "href": "https://webidl.spec.whatwg.org/#invoke-indexed-setter",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"invoke the indexed property setter\" id=\"invoke-indexed-setter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"bs-old-id\" id=\"invoking-indexed-setter\"></span>invoke an indexed property setter</dfn>\n    on a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object③②\">platform object</a> <var>O</var> with property name <var>P</var> and JavaScript value <var>V</var>, the following steps must be performed:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>index</var> be the result of calling <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⓪\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32③\">ToUint32</a>(<var>P</var>).</p>"
        },
        {
          "html": "<p>Let <var>creating</var> be true if <var>index</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-indices\" id=\"ref-for-dfn-supported-property-indices⑥\">supported property index</a>,\nand false otherwise.</p>"
        },
        {
          "html": "<p>Let <var>operation</var> be the operation used to declare the indexed property setter.</p>"
        },
        {
          "html": "<p>Let <var>T</var> be the type of the second argument of <var>operation</var>.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧④\">converting</a> <var>V</var> to an IDL value of type <var>T</var>.</p>"
        },
        {
          "html": "If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨④\">identifier</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>creating</var> is true, then perform the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-the-value-of-a-new-indexed-property\" id=\"ref-for-dfn-set-the-value-of-a-new-indexed-property\">set the value of a new indexed property</a>\nwith <var>index</var> as the index and <var>value</var> as the value.</p>"
            },
            {
              "html": "<p>Otherwise, <var>creating</var> is false.  Perform the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-the-value-of-an-existing-indexed-property\" id=\"ref-for-dfn-set-the-value-of-an-existing-indexed-property\">set the value of an existing indexed property</a>\nwith <var>index</var> as the index and <var>value</var> as the value.</p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, <var>operation</var> was defined with an identifier.  Perform the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps⑨\">method steps</a> of\n<var>operation</var> with <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⓪\">this</a> and « <var>index</var>, <var>value</var> » as the argument values.</p>"
        }
      ]
    },
    {
      "name": "invoke the named property setter",
      "href": "https://webidl.spec.whatwg.org/#invoke-named-setter",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"invoke the named property setter\" id=\"invoke-named-setter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"bs-old-id\" id=\"invoking-named-setter\"></span>invoke a named property setter</dfn>\n    on a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-platform-object\" id=\"ref-for-dfn-platform-object③③\">platform object</a> <var>O</var> with property name <var>P</var> and JavaScript value <var>V</var>, the following steps must be performed:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>creating</var> be true if <var>P</var> is not a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names⑥\">supported property name</a>, and false otherwise.</p>"
        },
        {
          "html": "<p>Let <var>operation</var> be the operation used to declare the named property setter.</p>"
        },
        {
          "html": "<p>Let <var>T</var> be the type of the second argument of <var>operation</var>.</p>"
        },
        {
          "html": "<p>Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⑤\">converting</a> <var>V</var> to an IDL value of type <var>T</var>.</p>"
        },
        {
          "html": "If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨⑤\">identifier</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>creating</var> is true, then perform the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-the-value-of-a-new-named-property\" id=\"ref-for-dfn-set-the-value-of-a-new-named-property\">set the value of a new named property</a>\nwith <var>P</var> as the name and <var>value</var> as the value.</p>"
            },
            {
              "html": "<p>Otherwise, <var>creating</var> is false.  Perform the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-set-the-value-of-an-existing-named-property\" id=\"ref-for-dfn-set-the-value-of-an-existing-named-property\">set the value of an existing named property</a>\nwith <var>P</var> as the name and <var>value</var> as the value.</p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, <var>operation</var> was defined with an identifier.  Perform the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps①⓪\">method steps</a> of\n<var>operation</var> with <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④①\">this</a> and « <var>P</var>, <var>value</var> » as the argument values.</p>"
        }
      ]
    },
    {
      "name": "LegacyPlatformObjectGetOwnProperty",
      "href": "https://webidl.spec.whatwg.org/#LegacyPlatformObjectGetOwnProperty",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"abstract-op\" data-export=\"\" id=\"LegacyPlatformObjectGetOwnProperty\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><span class=\"bs-old-id\" id=\"getownproperty-guts\"></span>LegacyPlatformObjectGetOwnProperty</dfn>\n    abstract operation performs the following steps when called with\n    an object <var>O</var>, a property name <var>P</var>, and a boolean <var>ignoreNamedProps</var> value:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-indexed-properties\" id=\"ref-for-dfn-support-indexed-properties①④\">supports indexed properties</a>\nand <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index③\">is an array index</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>index</var> be the result of calling <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32④\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "If <var>index</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-indices\" id=\"ref-for-dfn-supported-property-indices⑦\">supported property index</a>, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>operation</var> be the operation used to declare the indexed property getter.</p>"
                },
                {
                  "html": "<p>Let <var>value</var> be an uninitialized variable.</p>"
                },
                {
                  "html": "<p>If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨⑥\">identifier</a>, then\nset <var>value</var> to the result of performing the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-determine-the-value-of-an-indexed-property\" id=\"ref-for-dfn-determine-the-value-of-an-indexed-property\">determine the value of an indexed property</a>\nwith <var>index</var> as the index.</p>"
                },
                {
                  "html": "<p>Otherwise, <var>operation</var> was defined with an identifier.  Set <var>value</var> to the result\nof performing the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps①①\">method steps</a> of <var>operation</var> with <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④②\">this</a> and «\n<var>index</var> » as the argument values.</p>"
                },
                {
                  "html": "<p>Let <var>desc</var> be a newly created <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-property-descriptor-specification-type\" id=\"ref-for-sec-property-descriptor-specification-type②\">Property Descriptor</a> with no fields.</p>"
                },
                {
                  "html": "<p>Set <var>desc</var>.[[Value]] to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⑥\">converting</a>\n<var>value</var> to a JavaScript value.</p>"
                },
                {
                  "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④①\">implements</a> an interface with an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-indexed-property-setter\" id=\"ref-for-dfn-indexed-property-setter⑥\">indexed property setter</a>, then set\n<var>desc</var>.[[Writable]] to <emu-val>true</emu-val>, otherwise set it to\n<emu-val>false</emu-val>.</p>"
                },
                {
                  "html": "<p>Set <var>desc</var>.[[Enumerable]] and <var>desc</var>.[[Configurable]] to <emu-val>true</emu-val>.</p>"
                },
                {
                  "html": "<p>Return <var>desc</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>ignoreNamedProps</var> to true.</p>"
            }
          ]
        },
        {
          "html": "If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-support-named-properties\" id=\"ref-for-dfn-support-named-properties①⓪\">supports named properties</a> and\n<var>ignoreNamedProps</var> is false, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "If the result of running the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-visibility\" id=\"ref-for-dfn-named-property-visibility③\">named property visibility algorithm</a> with\nproperty name <var>P</var> and object <var>O</var> is true, then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>operation</var> be the operation used to declare the named property getter.</p>"
                },
                {
                  "html": "<p>Let <var>value</var> be an uninitialized variable.</p>"
                },
                {
                  "html": "<p>If <var>operation</var> was defined without an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier⑨⑦\">identifier</a>, then\nset <var>value</var> to the result of performing the steps listed in the interface description to\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-determine-the-value-of-a-named-property\" id=\"ref-for-dfn-determine-the-value-of-a-named-property①\">determine the value of a named property</a>\nwith <var>P</var> as the name.</p>"
                },
                {
                  "html": "<p>Otherwise, <var>operation</var> was defined with an identifier.  Set <var>value</var> to the result\nof performing the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#method-steps\" id=\"ref-for-method-steps①②\">method steps</a> of <var>operation</var> with <var>O</var> as <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④③\">this</a> and « <var>P</var> »\nas the argument values.</p>"
                },
                {
                  "html": "<p>Let <var>desc</var> be a newly created <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-property-descriptor-specification-type\" id=\"ref-for-sec-property-descriptor-specification-type③\">Property Descriptor</a> with no fields.</p>"
                },
                {
                  "html": "<p>Set <var>desc</var>.[[Value]] to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⑦\">converting</a>\n<var>value</var> to a JavaScript value.</p>"
                },
                {
                  "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④②\">implements</a> an interface with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-named-property-setter\" id=\"ref-for-dfn-named-property-setter⑥\">named property setter</a>, then set\n<var>desc</var>.[[Writable]] to <emu-val>true</emu-val>, otherwise set it to\n<emu-val>false</emu-val>.</p>"
                },
                {
                  "html": "<p>If <var>O</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④③\">implements</a> an interface with the\n[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyUnenumerableNamedProperties\" id=\"ref-for-LegacyUnenumerableNamedProperties⑤\">LegacyUnenumerableNamedProperties</a></code>]\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-extended-attribute\" id=\"ref-for-dfn-extended-attribute①⑤⑥\">extended attribute</a>,\nthen set <var>desc</var>.[[Enumerable]] to <emu-val>false</emu-val>,\notherwise set it to <emu-val>true</emu-val>.</p>"
                },
                {
                  "html": "<p>Set <var>desc</var>.[[Configurable]] to <emu-val>true</emu-val>.</p>"
                },
                {
                  "html": "<p>Return <var>desc</var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarygetownproperty\" id=\"ref-for-sec-ordinarygetownproperty①\">OrdinaryGetOwnProperty</a>(<var>O</var>, <var>P</var>).</p>"
        }
      ]
    },
    {
      "name": "creating an observable array exotic object",
      "href": "https://webidl.spec.whatwg.org/#creating-an-observable-array-exotic-object",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"creating an observable array exotic object\" data-noexport=\"\" id=\"creating-an-observable-array-exotic-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an observable array exotic object</dfn>\n    in a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm⑤⓪\">realm</a> <var>realm</var>, given Web IDL type <var>T</var> and algorithms <var>setAlgorithm</var> and <var>deleteAlgorithm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>innerArray</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-arraycreate\" id=\"ref-for-sec-arraycreate①\">ArrayCreate</a>(0).</p>"
        },
        {
          "html": "<p>Let <var>handler</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate⑦\">OrdinaryObjectCreate</a>(<emu-val>null</emu-val>,\n« [[Type]], [[SetAlgorithm]], [[DeleteAlgorithm]], [[BackingList]] »).</p>"
        },
        {
          "html": "<p>Set <var>handler</var>.[[Type]] to <var>T</var>.</p>"
        },
        {
          "html": "<p>Set <var>handler</var>.[[SetAlgorithm]] to <var>setAlgorithm</var>.</p>"
        },
        {
          "html": "<p>Set <var>handler</var>.[[DeleteAlgorithm]] to <var>deleteAlgorithm</var>.</p>"
        },
        {
          "html": "<p>Let <var>defineProperty</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②①\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-defineProperty\">§ 3.10.1 defineProperty</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⑧\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>defineProperty</code>\", <var>defineProperty</var>).</p>"
        },
        {
          "html": "<p>Let <var>deleteProperty</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②②\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-deleteProperty\">§ 3.10.2 deleteProperty</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow①⑨\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>deleteProperty</code>\", <var>deleteProperty</var>).</p>"
        },
        {
          "html": "<p>Let <var>get</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②③\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-get\">§ 3.10.3 get</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⑤\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②⓪\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>get</code>\", <var>get</var>).</p>"
        },
        {
          "html": "<p>Let <var>getOwnPropertyDescriptor</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②④\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-getOwnPropertyDescriptor\">§ 3.10.4 getOwnPropertyDescriptor</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⑥\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②①\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>getOwnPropertyDescriptor</code>\", <var>getOwnPropertyDescriptor</var>).</p>"
        },
        {
          "html": "<p>Let <var>has</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⑤\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-has\">§ 3.10.5 has</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⑦\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②②\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>has</code>\", <var>has</var>).</p>"
        },
        {
          "html": "<p>Let <var>ownKeys</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⑥\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-ownKeys\">§ 3.10.6 ownKeys</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②③\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>ownKeys</code>\", <var>ownKeys</var>).</p>"
        },
        {
          "html": "<p>Let <var>preventExtensions</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⑦\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-preventExtensions\">§ 3.10.7 preventExtensions</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①③⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②④\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>preventExtensions</code>\", <var>preventExtensions</var>).</p>"
        },
        {
          "html": "<p>Let <var>set</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⑧\">CreateBuiltinFunction</a>(the steps from <a href=\"https://webidl.spec.whatwg.org/#js-observable-array-set\">§ 3.10.8 set</a>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createdatapropertyorthrow\" id=\"ref-for-sec-createdatapropertyorthrow②⑤\">CreateDataPropertyOrThrow</a>(<var>handler</var>, \"<code>set</code>\", <var>set</var>).</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-proxycreate\" id=\"ref-for-sec-proxycreate\">ProxyCreate</a>(<var>innerArray</var>, <var>handler</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object defineProperty trap",
      "html": "The steps for the <code>defineProperty</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object①\">observable array exotic objects</a>, given <var>O</var>, <var>P</var>, and <var>descriptorObj</var> are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>descriptor</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④②\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-topropertydescriptor\" id=\"ref-for-sec-topropertydescriptor\">ToPropertyDescriptor</a>(<var>descriptorObj</var>).</p>"
        },
        {
          "html": "If <var>P</var> is \"length\", then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-isaccessordescriptor\" id=\"ref-for-sec-isaccessordescriptor\">IsAccessorDescriptor</a>(<var>descriptor</var>) is <emu-val>true</emu-val>, then return\n<emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Configurable]] is present and has the value <emu-val>true</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Enumerable]] is present and has the value <emu-val>true</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Writable]] is present and has the value <emu-val>false</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Value]] is present, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-length\" id=\"ref-for-observable-array-exotic-object-set-the-length①\">setting the length</a> given <var>handler</var> and\n<var>descriptor</var>.[[Value]].</p>"
            },
            {
              "html": "<p>Return <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index④\">is an array index</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-isaccessordescriptor\" id=\"ref-for-sec-isaccessordescriptor①\">IsAccessorDescriptor</a>(<var>descriptor</var>) is <emu-val>true</emu-val>, then return\n<emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Configurable]] is present and has the value <emu-val>false</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Enumerable]] is present and has the value <emu-val>false</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Writable]] is present and has the value <emu-val>false</emu-val>,\nthen return <emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>If <var>descriptor</var>.[[Value]] is present, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-indexed-value\" id=\"ref-for-observable-array-exotic-object-set-the-indexed-value\">setting the indexed value</a> given <var>handler</var>, <var>P</var>, and\n<var>descriptor</var>.[[Value]].</p>"
            },
            {
              "html": "<p>Return <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④③\">?</a> <var>O</var>.[[DefineOwnProperty]](<var>P</var>, <var>descriptor</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object deleteProperty trap",
      "html": "The steps for the <code>deleteProperty</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object②\">observable array exotic objects</a>, given <var>O</var> and <var>P</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>If <var>P</var> is \"length\", then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index⑤\">is an array index</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>oldLen</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①③\">size</a>.</p>"
            },
            {
              "html": "<p>Let <var>index</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④④\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32⑤\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "<p>If <var>index</var> ≠ <var>oldLen</var> − 1, then return\n<emu-val>false</emu-val>.</p>"
            },
            {
              "html": "<p>Perform the algorithm steps given by <var>handler</var>.[[DeleteAlgorithm]], given\n<var>handler</var>.[[BackingList]][<var>index</var>] and <var>index</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove③\">Remove</a> the last item from <var>handler</var>.[[BackingList]].</p>"
            },
            {
              "html": "<p>Return <emu-val>true</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⑤\">?</a> <var>O</var>.[[Delete]](<var>P</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object get trap",
      "html": "The steps for the <code>get</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object③\">observable array exotic objects</a>, given <var>O</var>, <var>P</var>, and <var>Receiver</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①④\">size</a>.</p>"
        },
        {
          "html": "<p>If <var>P</var> is \"length\", then return <var>length</var>.</p>"
        },
        {
          "html": "If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index⑥\">is an array index</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>index</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⑥\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32⑥\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "<p>If <var>index</var> ≥ <var>length</var>, then return <emu-val>undefined</emu-val>.</p>"
            },
            {
              "html": "<p>Let <var>jsValue</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⑧\">converting</a>\n<var>handler</var>.[[BackingList]][<var>index</var>] to a JavaScript value.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: the above step never throws an exception.</p>"
            },
            {
              "html": "<p>Return <var>jsValue</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⑦\">?</a> <var>O</var>.[[Get]](<var>P</var>, <var>Receiver</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object getOwnPropertyDescriptor trap",
      "html": "The steps for the <code>getOwnPropertyDescriptor</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object④\">observable array exotic objects</a>, given <var>O</var> and <var>P</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑤\">size</a>.</p>"
        },
        {
          "html": "<p>If <var>P</var> is \"length\", then return <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⑧\">!</a>\n<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-frompropertydescriptor\" id=\"ref-for-sec-frompropertydescriptor\">FromPropertyDescriptor</a>(PropertyDescriptor{[[Configurable]]: <emu-val>false</emu-val>,\n[[Enumerable]]: <emu-val>false</emu-val>, [[Writable]]: <emu-val>true</emu-val>,\n[[Value]]: <var>length</var> }).</p>"
        },
        {
          "html": "If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index⑦\">is an array index</a>, then",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>index</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①④⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32⑦\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "<p>If <var>index</var> ≥ <var>length</var>, then return <emu-val>undefined</emu-val>.</p>"
            },
            {
              "html": "<p>Let <var>jsValue</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑦⑨\">converting</a>\n<var>handler</var>.[[BackingList]][<var>index</var>] to a JavaScript value.</p>"
            },
            {
              "html": "<p class=\"assertion\">Assert: the above step never throws an exception.</p>"
            },
            {
              "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-frompropertydescriptor\" id=\"ref-for-sec-frompropertydescriptor①\">FromPropertyDescriptor</a>(PropertyDescriptor{[[Configurable]]:\n<emu-val>true</emu-val>, [[Enumerable]]: <emu-val>true</emu-val>, [[Writable]]:\n<emu-val>true</emu-val>, [[Value]]: <var>jsValue</var> }).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-frompropertydescriptor\" id=\"ref-for-sec-frompropertydescriptor②\">FromPropertyDescriptor</a>(<a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⓪\">?</a> <var>O</var>.[[GetOwnProperty]](<var>P</var>)).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object has trap",
      "html": "The steps for the <code>has</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object⑤\">observable array exotic objects</a>, given <var>O</var> and <var>P</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>If <var>P</var> is \"length\", then return <emu-val>true</emu-val>.</p>"
        },
        {
          "html": "If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index⑧\">is an array index</a>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>index</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32⑧\">ToUint32</a>(<var>P</var>).</p>"
            },
            {
              "html": "<p>If <var>index</var> &lt; <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑥\">size</a>, then return\n<emu-val>true</emu-val>.</p>"
            },
            {
              "html": "<p>Return <emu-val>false</emu-val>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤②\">?</a> <var>O</var>.[[HasProperty]](<var>P</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object ownKeys trap",
      "html": "The steps for the <code>ownKeys</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object⑥\">observable array exotic objects</a>, given <var>O</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>Let <var>length</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑦\">size</a>.</p>"
        },
        {
          "html": "<p>Let <var>keys</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③③\">list</a>.</p>"
        },
        {
          "html": "<p>Let <var>i</var> be 0.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while②\">While</a> <var>i</var> &lt; <var>length</var>:",
          "rationale": "append",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①④\">Append</a> <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤③\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tostring\" id=\"ref-for-sec-tostring⑧\">ToString</a>(<var>i</var>) to <var>keys</var>.</p>"
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-extend\" id=\"ref-for-list-extend\">Extend</a> <var>keys</var> with <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤④\">!</a> <var>O</var>.[[OwnPropertyKeys]]().</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-createarrayfromlist\" id=\"ref-for-sec-createarrayfromlist②\">CreateArrayFromList</a>(<var>keys</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object preventExtensions trap",
      "html": "The steps for the <code>preventExtensions</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object⑦\">observable array exotic objects</a> are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return <emu-val>false</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object set trap",
      "html": "The steps for the <code>set</code> proxy trap for\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object\" id=\"ref-for-observable-array-exotic-object⑧\">observable array exotic objects</a>, given <var>O</var>, <var>P</var>, <var>V</var>, and <var>Receiver</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>handler</var> be the <emu-val>this</emu-val> value.</p>"
        },
        {
          "html": "<p>If <var>P</var> is \"length\", then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-length\" id=\"ref-for-observable-array-exotic-object-set-the-length②\">setting the length</a> given <var>handler</var> and <var>V</var>.</p>"
        },
        {
          "html": "<p>If <var>P</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#is-an-array-index\" id=\"ref-for-is-an-array-index⑨\">is an array index</a>, then return the result of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-indexed-value\" id=\"ref-for-observable-array-exotic-object-set-the-indexed-value①\">setting the indexed value</a> given <var>handler</var>, <var>P</var>, and <var>V</var>.</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⑤\">?</a> <var>O</var>.[[Set]](<var>P</var>, <var>V</var>, <var>Receiver</var>).</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object/set the length",
      "href": "https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-length",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"observable array exotic object\" data-dfn-type=\"dfn\" data-lt=\"set the length|setting the length\" data-noexport=\"\" id=\"observable-array-exotic-object-set-the-length\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set the length</dfn>\n    of an observable array exotic object given <var>handler</var> and <var>newLen</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>uint32Len</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⑥\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32⑨\">ToUint32</a>(<var>newLen</var>).</p>"
        },
        {
          "html": "<p>Let <var>numberLen</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⑦\">?</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-tonumber\" id=\"ref-for-sec-tonumber⑤\">ToNumber</a>(<var>newLen</var>).</p>"
        },
        {
          "html": "<p>If <var>uint32Len</var> ≠ <var>numberLen</var>, then throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-rangeerror\" id=\"ref-for-exceptiondef-rangeerror⑤\">RangeError</a></code> exception.</p>"
        },
        {
          "html": "<p>Let <var>oldLen</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑧\">size</a>.</p>"
        },
        {
          "html": "<p>If <var>uint32Len</var> &gt; <var>oldLen</var>, then return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>indexToDelete</var> be <var>oldLen</var> − 1.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-while\" id=\"ref-for-iteration-while③\">While</a> <var>indexToDelete</var> ≥ <var>uint32Len</var>:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform the algorithm steps given by <var>handler</var>.[[DeleteAlgorithm]], given\n<var>handler</var>.[[BackingList]][<var>indexToDelete</var>] and <var>indexToDelete</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove④\">Remove</a> the last item from <var>handler</var>.[[BackingList]].</p>"
            },
            {
              "html": "<p>Set <var>indexToDelete</var> to <var>indexToDelete</var> − 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <emu-val>true</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "observable array exotic object/set the indexed value",
      "href": "https://webidl.spec.whatwg.org/#observable-array-exotic-object-set-the-indexed-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"observable array exotic object\" data-dfn-type=\"dfn\" data-lt=\"set the indexed value|setting the indexed value\" data-noexport=\"\" id=\"observable-array-exotic-object-set-the-indexed-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set the indexed value</dfn>\n    of an observable array exotic object given <var>handler</var>, <var>P</var>, and <var>V</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>oldLen</var> be <var>handler</var>.[[BackingList]]'s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①⑨\">size</a>.</p>"
        },
        {
          "html": "<p>Let <var>index</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⑧\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-touint32\" id=\"ref-for-sec-touint32①⓪\">ToUint32</a>(<var>P</var>).</p>"
        },
        {
          "html": "<p>If <var>index</var> &gt; <var>oldLen</var>, return <emu-val>false</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>idlValue</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⑥\">converting</a>\n<var>V</var> to the type given by <var>handler</var>.[[Type]].</p>"
        },
        {
          "html": "If <var>index</var> &lt; <var>oldLen</var>, then:",
          "rationale": "perform",
          "steps": [
            {
              "html": "<p>Perform the algorithm steps given by <var>handler</var>.[[DeleteAlgorithm]], given\n<var>handler</var>.[[BackingList]][<var>index</var>] and <var>index</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Perform the algorithm steps given by <var>handler</var>.[[SetAlgorithm]], given <var>idlValue</var> and\n<var>index</var>.</p>"
        },
        {
          "html": "<p>If <var>index</var> = <var>oldLen</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑤\">append</a> <var>idlValue</var> to <var>handler</var>.[[BackingList]].</p>"
        },
        {
          "html": "<p>Otherwise, set <var>handler</var>.[[BackingList]][<var>index</var>] to <var>idlValue</var>.</p>"
        },
        {
          "html": "<p>Return <emu-val>true</emu-val>.</p>"
        }
      ]
    },
    {
      "name": "Web IDL arguments list/converting",
      "href": "https://webidl.spec.whatwg.org/#web-idl-arguments-list-converting",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Web IDL arguments list\" data-dfn-type=\"dfn\" data-lt=\"converting\" data-noexport=\"\" id=\"web-idl-arguments-list-converting\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert a Web IDL arguments list to a\n    JavaScript arguments list</dfn>, given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list\" id=\"ref-for-web-idl-arguments-list\">Web IDL arguments list</a> <var>args</var>, perform the\n    following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>jsArgs</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③⑤\">list</a>.</p>"
        },
        {
          "html": "<p>Let <var>i</var> be 0.</p>"
        },
        {
          "html": "<p>Let <var>count</var> be 0.</p>"
        },
        {
          "html": "While <var>i</var> &lt; <var>args</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②⓪\">size</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>args</var>[<var>i</var>] is the special value “missing”, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑥\">append</a>\n<emu-val>undefined</emu-val> to <var>jsArgs</var>.</p>"
            },
            {
              "html": "Otherwise, <var>args</var>[<var>i</var>] is an IDL value:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>convertResult</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-idl-to-javascript-value\" id=\"ref-for-dfn-convert-idl-to-javascript-value⑧⓪\">converting</a>\n<var>args</var>[<var>i</var>] to a JavaScript value. Rethrow any exceptions.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⑦\">Append</a> <var>convertResult</var> to <var>jsArgs</var>.</p>"
                },
                {
                  "html": "<p>Set <var>count</var> to <var>i</var> + 1.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>i</var> to <var>i</var> + 1.</p>"
            }
          ]
        },
        {
          "html": "<p>Truncate <var>jsArgs</var> to contain <var>count</var> items.</p>"
        },
        {
          "html": "<p>Return <var>jsArgs</var>.</p>"
        }
      ]
    },
    {
      "name": "to call a user object's operation",
      "href": "https://webidl.spec.whatwg.org/#call-a-user-objects-operation",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"call-a-user-objects-operation\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">call a user object’s operation</dfn>,\n    given a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-interface\" id=\"ref-for-idl-callback-interface①①\">callback interface type</a> value <var>value</var>,\n    operation name <var>opName</var>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list\" id=\"ref-for-web-idl-arguments-list①\">Web IDL arguments list</a> <var>args</var>, and optional\n    <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"dfn-callback-this-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">callback this value</dfn> <var>thisArg</var>,\n    perform the following steps.\n    These steps will either return an IDL value or throw an exception.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>completion</var> be an uninitialized variable.</p>"
        },
        {
          "html": "<p>If <var>thisArg</var> was not given, let <var>thisArg</var> be <emu-val>undefined</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>O</var> be the JavaScript object corresponding to <var>value</var>.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <var>O</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm②\">associated realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>relevant settings</var> be <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-settings-object\" id=\"ref-for-concept-realm-settings-object②\">settings object</a>.</p>"
        },
        {
          "html": "<p>Let <var>stored settings</var> be <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-context\" id=\"ref-for-dfn-callback-context⑥\">callback context</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-script\" id=\"ref-for-prepare-to-run-script\">Prepare to run script</a> with <var>relevant settings</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-a-callback\" id=\"ref-for-prepare-to-run-a-callback\">Prepare to run a callback</a> with <var>stored settings</var>.</p>"
        },
        {
          "html": "<p>Let <var>X</var> be <var>O</var>.</p>"
        },
        {
          "html": "If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable①①\">IsCallable</a>(<var>O</var>) is false, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>getResult</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type⑤\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-get-o-p\" id=\"ref-for-sec-get-o-p④\">Get</a>(<var>O</var>, <var>opName</var>)).</p>"
            },
            {
              "html": "<p>If <var>getResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type⑥\">abrupt completion</a>, set <var>completion</var>\nto <var>getResult</var> and jump to the step labeled <a href=\"https://webidl.spec.whatwg.org/#call-user-object-operation-return\"><i>return</i></a>.</p>"
            },
            {
              "html": "<p>Set <var>X</var> to <var>getResult</var>.[[Value]].</p>"
            },
            {
              "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable①②\">IsCallable</a>(<var>X</var>) is <emu-val>false</emu-val>,\nthen set <var>completion</var> to <a data-link-type=\"dfn\" data-refhint-key=\"c8a04a12\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type⑦\">Completion Record</a> { [[Type]]: throw, [[Value]]: a\nnewly created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⑦\">TypeError</a></code> object, [[Target]]: empty }, and jump\nto the step labeled <a href=\"https://webidl.spec.whatwg.org/#call-user-object-operation-return\"><i>return</i></a>.</p>"
            },
            {
              "html": "<p>Set <var>thisArg</var> to <var>O</var> (overriding the provided value).</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>jsArgs</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list-converting\" id=\"ref-for-web-idl-arguments-list-converting\">converting</a> <var>args</var> to a JavaScript\narguments list. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception and jump to the step labeled\n<a href=\"https://webidl.spec.whatwg.org/#call-user-object-operation-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Let <var>callResult</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type⑧\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⑥\">Call</a>(<var>X</var>, <var>thisArg</var>, <var>jsArgs</var>)).</p>"
        },
        {
          "html": "<p>If <var>callResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type⑨\">abrupt completion</a>, set <var>completion</var> to\n<var>callResult</var> and jump to the step labeled <a href=\"https://webidl.spec.whatwg.org/#call-user-object-operation-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Set <var>completion</var> to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⑦\">converting</a>\n<var>callResult</var>.[[Value]] to an IDL value of the same type as the operation’s\nreturn type. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception.</p>"
        },
        {
          "html": "<i id=\"call-user-object-operation-return\">Return:</i> at this\npoint <var>completion</var> will be set to an IDL value or an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⓪\">abrupt completion</a>.",
          "rationale": "clean",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-a-callback\" id=\"ref-for-clean-up-after-running-a-callback\">Clean up after running a callback</a> with <var>stored settings</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\" id=\"ref-for-clean-up-after-running-script\">Clean up after running script</a> with <var>relevant settings</var>.</p>"
            },
            {
              "html": "<p>If <var>completion</var> is an IDL value, return <var>completion</var>.</p>"
            },
            {
              "html": "<p>If <var>completion</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①①\">abrupt completion</a> and the operation has a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-return-type\" id=\"ref-for-dfn-return-type⑧\">return type</a>\nthat is <em>not</em> a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-promise-type\" id=\"ref-for-dfn-promise-type①②\">promise type</a>, throw <var>completion</var>.[[Value]].</p>"
            },
            {
              "html": "<p>Let <var>rejectedPromise</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑤⑨\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⑦\">Call</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-promise.reject\" id=\"ref-for-sec-promise.reject②\">%Promise.reject%</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①③\">%Promise%</a></code>, «<var>completion</var>.[[Value]]»).</p>"
            },
            {
              "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⑧\">converting</a>\n<var>rejectedPromise</var> to the operation’s return type.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "create a legacy callback interface object",
      "href": "https://webidl.spec.whatwg.org/#create-a-legacy-callback-interface-object",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-legacy-callback-interface-object\" id=\"ref-for-dfn-legacy-callback-interface-object⑤\">legacy callback interface object</a> for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-interface\" id=\"ref-for-dfn-callback-interface④④\">callback interface</a> <var>interface</var>\n    with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier①⓪⓪\">identifier</a> <var>id</var> and in <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm⑤③\">realm</a> <var>realm</var>\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create a legacy callback interface object\" data-noexport=\"\" id=\"create-a-legacy-callback-interface-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>steps</var> be the following steps:",
          "rationale": "throw",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#javascript-throw\" id=\"ref-for-javascript-throw⑤⑥\">Throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⑧\">TypeError</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>F</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-createbuiltinfunction\" id=\"ref-for-sec-createbuiltinfunction②⑨\">CreateBuiltinFunction</a>(<var>steps</var>, « », <var>realm</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionname\" id=\"ref-for-sec-setfunctionname①②\">SetFunctionName</a>(<var>F</var>, <var>id</var>).</p>"
        },
        {
          "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-setfunctionlength\" id=\"ref-for-sec-setfunctionlength①②\">SetFunctionLength</a>(<var>F</var>, 0).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-constants\" id=\"ref-for-define-the-constants②\">Define the constants</a> of <var>interface</var> on <var>F</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p>Return <var>F</var>.</p>"
        }
      ]
    },
    {
      "name": "invoke",
      "href": "https://webidl.spec.whatwg.org/#invoke-a-callback-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"invoke-a-callback-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">invoke</dfn> a\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-function\" id=\"ref-for-idl-callback-function⑤\">callback function type</a> value <var>callable</var> with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list\" id=\"ref-for-web-idl-arguments-list②\">Web IDL arguments list</a> <var>args</var>,\n    exception behavior <var>exceptionBehavior</var> (either \"<code>report</code>\" or \"<code>rethrow</code>\"),\n    and an optional <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-this-value\" id=\"ref-for-dfn-callback-this-value①\">callback this value</a> <var>thisArg</var>,\n    perform the following steps.\n    These steps will either return an IDL value or throw an exception.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>completion</var> be an uninitialized variable.</p>"
        },
        {
          "html": "<p>If <var>thisArg</var> was not given, let <var>thisArg</var> be <emu-val>undefined</emu-val>.</p>"
        },
        {
          "html": "<p>Let <var>F</var> be the JavaScript object corresponding to <var>callable</var>.</p>"
        },
        {
          "html": "If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-iscallable\" id=\"ref-for-sec-iscallable①④\">IsCallable</a>(<var>F</var>) is <emu-val>false</emu-val>:",
          "rationale": "return",
          "steps": [
            {
              "html": ""
            },
            {
              "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑧⑨\">converting</a>\n<emu-val>undefined</emu-val> to the callback function’s return type.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>realm</var> be <var>F</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm③\">associated realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>relevant settings</var> be <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-settings-object\" id=\"ref-for-concept-realm-settings-object③\">settings object</a>.</p>"
        },
        {
          "html": "<p>Let <var>stored settings</var> be <var>callable</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-context\" id=\"ref-for-dfn-callback-context⑦\">callback context</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-script\" id=\"ref-for-prepare-to-run-script①\">Prepare to run script</a> with <var>relevant settings</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-a-callback\" id=\"ref-for-prepare-to-run-a-callback①\">Prepare to run a callback</a> with <var>stored settings</var>.</p>"
        },
        {
          "html": "<p>Let <var>jsArgs</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list-converting\" id=\"ref-for-web-idl-arguments-list-converting①\">converting</a> <var>args</var> to a JavaScript\narguments list. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception and jump to the step labeled\n<a href=\"https://webidl.spec.whatwg.org/#invoke-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Let <var>callResult</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①②\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⑧\">Call</a>(<var>F</var>, <var>thisArg</var>, <var>jsArgs</var>)).</p>"
        },
        {
          "html": "<p>If <var>callResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①③\">abrupt completion</a>, set <var>completion</var> to\n<var>callResult</var> and jump to the step labeled <a href=\"https://webidl.spec.whatwg.org/#invoke-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Set <var>completion</var> to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑨⓪\">converting</a>\n<var>callResult</var>.[[Value]] to an IDL value of the same type as <var>callable</var>’s\nreturn type. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception.</p>"
        },
        {
          "html": "<i id=\"invoke-return\">Return:</i> at this\npoint <var>completion</var> will be set to an IDL value or an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①④\">abrupt completion</a>.",
          "rationale": "clean",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-a-callback\" id=\"ref-for-clean-up-after-running-a-callback①\">Clean up after running a callback</a> with <var>stored settings</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\" id=\"ref-for-clean-up-after-running-script①\">Clean up after running script</a> with <var>relevant settings</var>.</p>"
            },
            {
              "html": "<p>If <var>completion</var> is an IDL value, return <var>completion</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert\">Assert</a>: <var>completion</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⑤\">abrupt completion</a>.</p>"
            },
            {
              "html": "<p>If <var>exceptionBehavior</var> is \"<code>rethrow</code>\", throw <var>completion</var>.[[Value]].</p>"
            },
            {
              "html": "Otherwise, if <var>exceptionBehavior</var> is \"<code>report</code>\":",
              "rationale": "assert",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert①\">Assert</a>: <var>callable</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-return-type\" id=\"ref-for-dfn-return-type①⓪\">return type</a> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined②①\">undefined</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-any\" id=\"ref-for-idl-any①⑦\">any</a></code>.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#report-an-exception\" id=\"ref-for-report-an-exception\">Report an exception</a> <var>completion</var>.[[Value]] for <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global⑨\">global object</a>.</p>"
                },
                {
                  "html": "<p>Return the unique <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined②②\">undefined</a></code> IDL value.</p>"
                }
              ]
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert②\">Assert</a>: <var>callable</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-return-type\" id=\"ref-for-dfn-return-type①①\">return type</a> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-promise-type\" id=\"ref-for-dfn-promise-type①④\">promise type</a>.</p>"
            },
            {
              "html": "<p>Let <var>rejectedPromise</var> be <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑥⓪\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-call\" id=\"ref-for-sec-call①⑨\">Call</a>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/#sec-promise.reject\" id=\"ref-for-sec-promise.reject③\">%Promise.reject%</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor\" id=\"ref-for-sec-promise-constructor①④\">%Promise%</a></code>, «<var>completion</var>.[[Value]]»).</p>"
            },
            {
              "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑨①\">converting</a>\n<var>rejectedPromise</var> to the callback function’s return type.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "construct",
      "href": "https://webidl.spec.whatwg.org/#construct-a-callback-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"construct-a-callback-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">construct</dfn> a\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#idl-callback-function\" id=\"ref-for-idl-callback-function⑥\">callback function type</a> value <var>callable</var> with a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list\" id=\"ref-for-web-idl-arguments-list③\">Web IDL arguments list</a> <var>args</var>,\n    perform the following steps.\n    These steps will either return an IDL value or throw an exception.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>completion</var> be an uninitialized variable.</p>"
        },
        {
          "html": "<p>Let <var>F</var> be the JavaScript object corresponding to <var>callable</var>.</p>"
        },
        {
          "html": "<p>If <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-isconstructor\" id=\"ref-for-sec-isconstructor\">IsConstructor</a>(<var>F</var>) is <emu-val>false</emu-val>, throw a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-native-error-types-used-in-this-standard-typeerror\" id=\"ref-for-sec-native-error-types-used-in-this-standard-typeerror⑤⑨\">TypeError</a></code> exception.</p>"
        },
        {
          "html": "<p>Let <var>realm</var> be <var>F</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm④\">associated realm</a>.</p>"
        },
        {
          "html": "<p>Let <var>relevant settings</var> be <var>realm</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-settings-object\" id=\"ref-for-concept-realm-settings-object④\">settings object</a>.</p>"
        },
        {
          "html": "<p>Let <var>stored settings</var> be <var>callable</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-context\" id=\"ref-for-dfn-callback-context⑧\">callback context</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-script\" id=\"ref-for-prepare-to-run-script②\">Prepare to run script</a> with <var>relevant settings</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-a-callback\" id=\"ref-for-prepare-to-run-a-callback②\">Prepare to run a callback</a> with <var>stored settings</var>.</p>"
        },
        {
          "html": "<p>Let <var>jsArgs</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list-converting\" id=\"ref-for-web-idl-arguments-list-converting②\">converting</a> <var>args</var> to a JavaScript\narguments list. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception and jump to the step labeled\n<a href=\"https://webidl.spec.whatwg.org/#construct-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Let <var>callResult</var> be <a data-link-type=\"abstract-op\" data-refhint-key=\"8231699a\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⑥\">Completion</a>(<a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-construct\" id=\"ref-for-sec-construct①\">Construct</a>(<var>F</var>, <var>jsArgs</var>)).</p>"
        },
        {
          "html": "<p>If <var>callResult</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⑦\">abrupt completion</a>, set <var>completion</var> to\n<var>callResult</var> and jump to the step labeled <a href=\"https://webidl.spec.whatwg.org/#construct-return\"><i>return</i></a>.</p>"
        },
        {
          "html": "<p>Set <var>completion</var> to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value⑨②\">converting</a>\n<var>callResult</var>.[[Value]] to an IDL value of the same type as <var>callable</var>’s\nreturn type. If this throws an exception, set <var>completion</var> to the completion value\nrepresenting the thrown exception.</p>"
        },
        {
          "html": "<i id=\"construct-return\">Return:</i> at this\npoint <var>completion</var> will be set to an IDL value or an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⑧\">abrupt completion</a>.",
          "rationale": "clean",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-a-callback\" id=\"ref-for-clean-up-after-running-a-callback②\">Clean up after running a callback</a> with <var>stored settings</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\" id=\"ref-for-clean-up-after-running-script②\">Clean up after running script</a> with <var>relevant settings</var>.</p>"
            },
            {
              "html": "<p>If <var>completion</var> is an <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#sec-completion-record-specification-type\" id=\"ref-for-sec-completion-record-specification-type①⑨\">abrupt completion</a>, throw <var>completion</var>.[[Value]].</p>"
            },
            {
              "html": "<p>Return <var>completion</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "create a namespace object",
      "href": "https://webidl.spec.whatwg.org/#create-a-namespace-object",
      "html": "The namespace object for a given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-namespace\" id=\"ref-for-dfn-namespace⑤③\">namespace</a> <var>namespace</var> and <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#realm\" id=\"ref-for-realm⑤⑥\">realm</a> <var>realm</var>\n    is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"create a namespace object\" data-noexport=\"\" id=\"create-a-namespace-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">created</dfn> as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>namespaceObject</var> be <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinaryobjectcreate\" id=\"ref-for-sec-ordinaryobjectcreate⑧\">OrdinaryObjectCreate</a>(<var>realm</var>.[[Intrinsics]].[[<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-properties-of-the-object-prototype-object\" id=\"ref-for-sec-properties-of-the-object-prototype-object⑦\">%Object.prototype%</a></code>]]).</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-attributes\" id=\"ref-for-define-the-regular-attributes②\">Define the regular attributes</a> of <var>namespace</var> on <var>namespaceObject</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-regular-operations\" id=\"ref-for-define-the-regular-operations②\">Define the regular operations</a> of <var>namespace</var> on <var>namespaceObject</var> given <var>realm</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#define-the-constants\" id=\"ref-for-define-the-constants③\">Define the constants</a> of <var>namespace</var> on <var>namespaceObject</var> given <var>realm</var>.</p>"
        },
        {
          "html": "For each <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exposed\" id=\"ref-for-dfn-exposed②①\">exposed</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⑤⓪\">interface</a> <var>interface</var> which has the [<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#LegacyNamespace\" id=\"ref-for-LegacyNamespace⑨\">LegacyNamespace</a></code>] extended\nattribute with the identifier of <var>namespace</var> as its argument,",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>id</var> be <var>interface</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier①⓪②\">identifier</a>.</p>"
            },
            {
              "html": "<p>Let <var>interfaceObject</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#create-an-interface-object\" id=\"ref-for-create-an-interface-object①\">creating an\ninterface object</a> for <var>interface</var> with <var>id</var> in <var>realm</var>.</p>"
            },
            {
              "html": "<p>Perform <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-definemethodproperty\" id=\"ref-for-sec-definemethodproperty⑨\">DefineMethodProperty</a>(<var>namespaceObject</var>, <var>id</var>, <var>interfaceObject</var>, false).</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>namespaceObject</var>.</p>"
        }
      ]
    },
    {
      "name": "to create a simple exception",
      "html": "To <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-exception\" id=\"ref-for-dfn-create-exception⑥\">create</a> a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-simple-exception\" id=\"ref-for-dfn-simple-exception④\">simple exception</a> of type <var>T</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>message</var> be an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#implementation-defined\" id=\"ref-for-implementation-defined\">implementation-defined</a> message appropriate for the exceptional\nsituation. The calling specification may contain information to to help implementations\nconstruct this message.</p>\n      <p>Implementations need to be cautious not to leak sensitive or secured information when\nconstructing this message, e.g., by including the URL of a cross-origin frame, or\ninformation which could identify the user.</p>"
        },
        {
          "html": "<p>Let <var>args</var> be « <var>message</var> ».</p>"
        },
        {
          "html": "<p>Let <var>constructor</var> be <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#current-realm\" id=\"ref-for-current-realm②\">current realm</a>.[[Intrinsics]].[[%<var>T</var>%]].</p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" data-refhint-key=\"548dbb6b\" href=\"https://tc39.es/ecma262/#sec-returnifabrupt-shorthands\" id=\"ref-for-sec-returnifabrupt-shorthands①⑥①\">!</a> <a data-link-type=\"abstract-op\" href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-construct\" id=\"ref-for-sec-construct②\">Construct</a>(<var>constructor</var>, <var>args</var>).</p>"
        }
      ]
    },
    {
      "name": "to create a DOMException",
      "html": "To <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-exception\" id=\"ref-for-dfn-create-exception⑦\">create</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤①\">DOMException</a></code> given a string <var>name</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p class=\"assertion\">Assert: <var>name</var> appears in the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-error-names-table\" id=\"ref-for-dfn-error-names-table②\"><code>DOMException</code> names table</a>.</p>"
        },
        {
          "html": "<p>Let <var>ex</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#new\" id=\"ref-for-new①\">new</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤②\">DOMException</a></code> created in the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#current-realm\" id=\"ref-for-current-realm③\">current realm</a>.</p>"
        },
        {
          "html": "<p>Set <var>ex</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name①⓪\">name</a> to <var>name</var>.</p>"
        },
        {
          "html": "<p>Set <var>ex</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message②\">message</a> to an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#implementation-defined\" id=\"ref-for-implementation-defined①\">implementation-defined</a> message appropriate for\nthe exceptional situation. The calling specification may contain information to to help\nimplementations construct this message.</p>\n      <p>Implementations need to be cautious not to leak sensitive or secured information when\nconstructing this message, e.g., by including the URL of a cross-origin frame, or\ninformation which could identify the user.</p>"
        },
        {
          "html": "<p>Return <var>ex</var>.</p>"
        }
      ]
    },
    {
      "name": "to create a DOMException derived interface",
      "html": "To <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-exception\" id=\"ref-for-dfn-create-exception⑧\">create</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤③\">DOMException</a></code> derived interface given the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⑤①\">interface</a>\n    <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier①⓪④\">identifier</a> <var>type</var> and additional initialization instructions:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>ex</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#new\" id=\"ref-for-new②\">new</a> instance of the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-interface\" id=\"ref-for-dfn-interface②⑤②\">interface</a> identified by <var>type</var>, created in the\n<a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#current-realm\" id=\"ref-for-current-realm④\">current realm</a>.</p>"
        },
        {
          "html": "<p>Set <var>ex</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name①①\">name</a> to <var>type</var>.</p>"
        },
        {
          "html": "<p>Set <var>ex</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message③\">message</a> to an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#implementation-defined\" id=\"ref-for-implementation-defined②\">implementation-defined</a> message appropriate for\nthe exceptional situation. The calling specification may contain information to to help\nimplementations construct this message.</p>\n      <p>Implementations need to be cautious not to leak sensitive or secured information when\nconstructing this message, e.g., by including the URL of a cross-origin frame, or\ninformation which could identify the user.</p>"
        },
        {
          "html": "<p>Perform any additional initialization on <var>ex</var> as described by the caller.</p>"
        },
        {
          "html": "<p>Return <var>ex</var>.</p>"
        }
      ]
    },
    {
      "name": "throw an exception",
      "html": "To <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦\">throw</a> an <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-exception\" id=\"ref-for-dfn-exception\">exception</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>O</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-create-exception\" id=\"ref-for-dfn-create-exception⑨\">creating an exception</a> with the same\narguments.</p>"
        },
        {
          "html": "<p>Throw <var>O</var>.</p>"
        }
      ]
    },
    {
      "name": "DOMException/DOMException(message, name)",
      "href": "https://webidl.spec.whatwg.org/#dom-domexception-domexception",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMException\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"DOMException(message, name)|constructor(message, name)|DOMException(message)|constructor(message)|DOMException()|constructor()\" id=\"dom-domexception-domexception\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>new DOMException(<var>message</var>, <var>name</var>)</code></dfn>\nconstructor steps are:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name①②\">name</a> to <var>name</var>.</p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message④\">message</a> to <var>message</var>.</p>"
        }
      ]
    },
    {
      "html": "Their <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#serialization-steps\" id=\"ref-for-serialization-steps③\">serialization steps</a>, given <var>value</var> and <var>serialized</var>, are:",
      "rationale": "set",
      "steps": [
        {
          "html": "Set <var>serialized</var>.[[Name]] to <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name①⑤\">name</a>."
        },
        {
          "html": "Set <var>serialized</var>.[[Message]] to <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message⑥\">message</a>."
        },
        {
          "html": "User agents should attach a serialized representation of any interesting accompanying data\n    which are not yet specified, notably the <code>stack</code> property, to\n    <var>serialized</var>."
        }
      ]
    },
    {
      "html": "Their <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#deserialization-steps\" id=\"ref-for-deserialization-steps③\">deserialization steps</a>, given <var>value</var> and <var>serialized</var>, are:",
      "rationale": "set",
      "steps": [
        {
          "html": "Set <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-name\" id=\"ref-for-domexception-name①⑥\">name</a> to <var>serialized</var>.[[Name]]."
        },
        {
          "html": "Set <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#domexception-message\" id=\"ref-for-domexception-message⑦\">message</a> to <var>serialized</var>.[[Message]]."
        },
        {
          "html": "If any other data is attached to <var>serialized</var>, then deserialize and attach it to\n    <var>value</var>."
        }
      ]
    }
  ]
}